{"version":3,"file":"static/webpack/static/development/pages/index.js.4f51a9a92092feeb4ff0.hot-update.js","sources":["webpack:///./app/contentComponents/Card/Card.tsx"],"sourcesContent":["import React, { useState, useCallback, useContext } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  max-width: 200px;\n  max-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  imgURL: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\ninterface Props {\n  cardId: number;\n}\nfunction Card({ cardId }: Props) {\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  }\n  //}, []);\n\n  const { movies } = useContext(MoviesContext);\n  const { Watched, Saved, Title, Poster: PosterURL, Ratings } = movies[cardId];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  };\n\n  return (\n    <CardContainer color={backgroundColor} key={Title}>\n      <CardHeader>\n        <IconsStateManagement\n          callToActionCardColor={setColor}\n          {...movieStatus}\n        />\n      </CardHeader>\n      <Poster>\n        <PosterImage imgURL={PosterURL} />\n      </Poster>\n      <CardFooter>\n        <RatingStarComp rating={calculateAvarageRatings(Ratings)} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAKA;AALA;AAgBA;AAKA;AAMA;AANA;AAUA;AAMA;AACA;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAdA;AANA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAGA;AADA;AAMA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}