{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 80%;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 20%;\\n  background-color: grey;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\nvar Wrapper = styled.div(_templateObject());\nvar Filters = styled.div(_templateObject2());\nvar Movies = styled.div(_templateObject3());\nvar initialState = {\n  movies: [{\n    Title: 'string',\n    Poster: 'string',\n    Ratings: [{}],\n    key: 'string',\n    Saved: 'True',\n    Watched: 'False',\n    Type: 'movie'\n  }],\n  updateState: function updateState(state) {\n    console.log('....state', state);\n  }\n};\nexport var MoviesContext = React.createContext(initialState);\nvar Provider = MoviesContext.Provider,\n    Consumer = MoviesContext.Consumer;\nvar globalState = [];\nvar previosglobalState = [];\n/*eslint no-case-declarations: \"off\"*/\n\nvar movieReducer = function movieReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_FROM_FETCH':\n      /* [\n        ...action.payload.filter(({ Watched }) =>\n          JSON.parse(Watched.toLowerCase())\n        ),\n      ]; */\n      return _objectSpread({}, state, {\n        movies: _toConsumableArray(action.payload)\n      });\n\n    case 'FILTER_WATCH':\n      console.log('gagdgegeeeeeeeee', action.payload);\n      console.log('state', state);\n      var actualState = globalState;\n      return _objectSpread({}, actualState, {\n        movies: _toConsumableArray(actualState.filter(function (_ref) {\n          var Watched = _ref.Watched;\n          return Watched === action.payload;\n        }))\n      });\n    // return state;\n\n    default:\n      return state;\n  }\n};\n\nvar Home = function Home() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      isLoading = _useState[1]; //const [movies, getMovies] = useState([]);\n\n\n  var _useReducer = useReducer(movieReducer, initialState),\n      store = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var reduceData = useCallback(function (response) {\n    return response.map(function (_ref2) {\n      var Title = _ref2.Title,\n          Poster = _ref2.Poster,\n          Ratings = _ref2.Ratings,\n          Watched = _ref2.Watched,\n          Saved = _ref2.Saved;\n      return {\n        Title: Title,\n        Poster: Poster,\n        Ratings: Ratings,\n        Watched: Watched,\n        Saved: Saved\n      };\n    });\n  }, []);\n  useEffect(function () {\n    isLoading(true);\n\n    var fetchData = function fetchData() {\n      var result, reducedData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(generalAPIService.get('/api/movies'));\n\n            case 2:\n              result = _context.sent;\n              reducedData = reduceData(result);\n              globalState = reducedData;\n              dispatch({\n                type: 'UPDATE_FROM_FETCH',\n                payload: reducedData\n              });\n              isLoading(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [reduceData]);\n  console.log('gagdg', store);\n  return __jsx(\"main\", null, loading && 'movies are loading', !loading && __jsx(Provider, {\n    value: _objectSpread({}, store, {\n      updateState: function updateState(state) {\n        return dispatch({\n          type: 'FILTER_WATCH',\n          payload: state\n        });\n      }\n    })\n  }, __jsx(Wrapper, null, __jsx(Filters, null, __jsx(FiltersGroup, null)), __jsx(Movies, null, __jsx(Consumer, null, function (_ref3) {\n    var movies = _ref3.movies;\n    return movies.map(function (fields, i) {\n      return __jsx(Card, {\n        key: fields.Title,\n        cardId: i\n      });\n    });\n  })))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["Wrapper","styled","Filters","Movies","initialState","movies","Title","Poster","Ratings","key","Saved","Watched","Type","updateState","console","MoviesContext","React","Provider","Consumer","globalState","previosglobalState","movieReducer","action","actualState","Home","loading","isLoading","useState","store","dispatch","useReducer","reduceData","useCallback","useEffect","fetchData","result","generalAPIService","reducedData","type","payload","state","fields","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,QAAA,EAAA,WAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA,C,CAEA;;AACA,OAAA,IAAA,MAAA,oCAAA;AACA,OAAA,iBAAA,MAAA,4BAAA;AACA,OAAA,YAAA,MAAA,oDAAA;AAEA,IAAMA,OAAO,GAAGC,MAAM,CAAT,GAAGA,CAAH,eAAb,EAAgBA,CAAhB;AAKA,IAAMC,OAAO,GAAGD,MAAM,CAAT,GAAGA,CAAH,gBAAb,EAAgBA,CAAhB;AAKA,IAAME,MAAM,GAAGF,MAAM,CAAT,GAAGA,CAAH,gBAAZ,EAAeA,CAAf;AAeA,IAAMG,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,KAAK,EADP,QAAA;AAEEC,IAAAA,MAAM,EAFR,QAAA;AAGEC,IAAAA,OAAO,EAAE,CAHX,EAGW,CAHX;AAIEC,IAAAA,GAAG,EAJL,QAAA;AAKEC,IAAAA,KAAK,EALP,MAAA;AAMEC,IAAAA,OAAO,EANT,OAAA;AAOEC,IAAAA,IAAI,EAAE;AAPR,GADM,CADW;AAYnBC,EAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,KAAA,EAAW;AACtBC,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,WAAAA,EAAAA,KAAAA;AACD;AAdkB,CAArB;AAgBA,OAAO,IAAMC,aAAa,GAAGC,KAAK,CAALA,aAAAA,CAAtB,YAAsBA,CAAtB;IACCC,Q,GAAuBF,a,CAAvBE,Q;IAAUC,Q,GAAaH,a,CAAbG,Q;AAElB,IAAIC,WAAW,GAAf,EAAA;AACA,IAAIC,kBAAkB,GAAtB,EAAA;AACA;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAA,MAAA,EAAmB;AACtC,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,mBAAA;AACE;;;;;AAKA,aAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAmBjB,QAAAA,MAAM,EAAA,kBAAA,CAAMiB,MAAM,CAAZ,OAAA;AAAzB,OAAA,CAAA;;AACF,SAAA,cAAA;AACER,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,kBAAAA,EAAgCQ,MAAM,CAAtCR,OAAAA;AACAA,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,OAAAA,EAAAA,KAAAA;AACA,UAAMS,WAAW,GAAjB,WAAA;AAEA,aAAA,aAAA,CAAA,EAAA,EAAA,WAAA,EAAA;AAEElB,QAAAA,MAAM,EAAA,kBAAA,CACD,WAAW,CAAX,MAAA,CAAmB,UAAA,IAAA,EAAA;AAAA,cAAGM,OAAH,GAAA,IAAA,CAAA,OAAA;AAAA,iBAAiBA,OAAO,KAAKW,MAAM,CAAnC,OAAA;AADlB,SACD,CADC;AAFR,OAAA,CAAA;AAMF;;AACA;AACE,aAAA,KAAA;AArBJ;AADF,CAAA;;AA0BA,IAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,MAAA,SAAA,GACYG,QAAQ,CADpB,IACoB,CADpB;AAAA,MACVF,OADU,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MACDC,SADC,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAEjB;;;AAFiB,MAAA,WAAA,GAGSI,UAAU,CAAA,YAAA,EAHnB,YAGmB,CAHnB;AAAA,MAGVF,KAHU,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,MAGHC,QAHG,GAAA,WAAA,CAAA,CAAA,CAAA;;AAKjB,MAAME,UAAU,GAAGC,WAAW,CAAC,UAAA,QAAA,EAAoB;AACjD,WAAO,QAAQ,CAAR,GAAA,CACL,UAAA,KAAA,EAAuE;AAAA,UAApE1B,KAAoE,GAAA,KAAA,CAApEA,KAAoE;AAAA,UAA7DC,MAA6D,GAAA,KAAA,CAA7DA,MAA6D;AAAA,UAArDC,OAAqD,GAAA,KAAA,CAArDA,OAAqD;AAAA,UAA5CG,OAA4C,GAAA,KAAA,CAA5CA,OAA4C;AAAA,UAAnCD,KAAmC,GAAA,KAAA,CAAnCA,KAAmC;AACrE,aAAO;AACLJ,QAAAA,KAAK,EADA,KAAA;AAELC,QAAAA,MAAM,EAFD,MAAA;AAGLC,QAAAA,OAAO,EAHF,OAAA;AAILG,QAAAA,OAAO,EAJF,OAAA;AAKLD,QAAAA,KAAK,EAALA;AALK,OAAP;AAFJ,KAAO,CAAP;AAD4B,GAAA,EAA9B,EAA8B,CAA9B;AAcAuB,EAAAA,SAAS,CAAC,YAAM;AACdP,IAAAA,SAAS,CAATA,IAAS,CAATA;;AACA,QAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAA;AAAA,UAAA,MAAA,EAAA,WAAA;AAAA,aAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,UAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,qBAAA,mBAAA,CAAA,KAAA,CACKE,iBAAiB,CAAjBA,GAAAA,CADL,aACKA,CADL,CAAA;;AAAA,iBAAA,CAAA;AACVD,cAAAA,MADU,GAAA,QAAA,CAAA,IACVA;AACAE,cAAAA,WAFU,GAEIN,UAAU,CAFd,MAEc,CAAxBM;AACNlB,cAAAA,WAAW,GAAXA,WAAAA;AACAU,cAAAA,QAAQ,CAAC;AAAES,gBAAAA,IAAI,EAAN,mBAAA;AAA6BC,gBAAAA,OAAO,EAAEF;AAAtC,eAAD,CAARR;AACAH,cAAAA,SAAS,CAATA,KAAS,CAATA;;AALgB,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAlB,KAAA;;AAQAQ,IAAAA,SAAS;AAVF,GAAA,EAWN,CAXHD,UAWG,CAXM,CAATA;AAaAnB,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,OAAAA,EAAAA,KAAAA;AAEA,SACE,KAAA,CAAA,MAAA,EAAA,IAAA,EACGW,OAAO,IADV,oBAAA,EAEG,CAAA,OAAA,IACC,KAAA,CAAA,QAAA,EAAA;AACE,IAAA,KAAK,EAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEHZ,MAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,KAAA,EAAA;AAAA,eACXgB,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAN,cAAA;AAAwBC,UAAAA,OAAO,EAAEC;AAAjC,SAAD,CADG;AAAA;AAFV,KAAA;AADP,GAAA,EAOE,KAAA,CAAA,OAAA,EAAA,IAAA,EACE,KAAA,CAAA,OAAA,EAAA,IAAA,EACE,KAAA,CAAA,YAAA,EAFJ,IAEI,CADF,CADF,EAIE,KAAA,CAAA,MAAA,EAAA,IAAA,EACE,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,UAAA,KAAA,EAAA;AAAA,QAAGnC,MAAH,GAAA,KAAA,CAAA,MAAA;AAAA,WACC,MAAM,CAAN,GAAA,CAAW,UAAA,MAAA,EAAA,CAAA,EAAA;AAAA,aACT,KAAA,CAAA,IAAA,EAAA;AAAM,QAAA,GAAG,EAAEoC,MAAM,CAAjB,KAAA;AAAyB,QAAA,MAAM,EAAEC;AAAjC,OAAA,CADS;AADZ,KACC,CADD;AAjBf,GAgBY,CADF,CAJF,CAPF,CAHJ,CADF;AAlCF,CAAA;;AAiEA,eAAA,IAAA","sourcesContent":["import React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\n\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n  Saved: string;\n  Watched: string;\n  Type: 'movie' | 'series';\n}\nconst initialState = {\n  movies: [\n    {\n      Title: 'string',\n      Poster: 'string',\n      Ratings: [{}],\n      key: 'string',\n      Saved: 'True',\n      Watched: 'False',\n      Type: 'movie',\n    },\n  ],\n  updateState: (state) => {\n    console.log('....state', state);\n  },\n};\nexport const MoviesContext = React.createContext(initialState);\nconst { Provider, Consumer } = MoviesContext;\n\nlet globalState = [];\nlet previosglobalState = [];\n/*eslint no-case-declarations: \"off\"*/\n\nconst movieReducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_FROM_FETCH':\n      /* [\n        ...action.payload.filter(({ Watched }) =>\n          JSON.parse(Watched.toLowerCase())\n        ),\n      ]; */\n      return { ...state, movies: [...action.payload] };\n    case 'FILTER_WATCH':\n      console.log('gagdgegeeeeeeeee', action.payload);\n      console.log('state', state);\n      const actualState = globalState;\n\n      return {\n        ...actualState,\n        movies: [\n          ...actualState.filter(({ Watched }) => Watched === action.payload),\n        ],\n      };\n    // return state;\n    default:\n      return state;\n  }\n};\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  //const [movies, getMovies] = useState([]);\n  const [store, dispatch] = useReducer(movieReducer, initialState);\n\n  const reduceData = useCallback((response: {}[]) => {\n    return response.map(\n      ({ Title, Poster, Ratings, Watched, Saved }: ImoviesResponseFields) => {\n        return {\n          Title,\n          Poster,\n          Ratings,\n          Watched,\n          Saved,\n        };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      const reducedData = reduceData(result);\n      globalState = reducedData;\n      dispatch({ type: 'UPDATE_FROM_FETCH', payload: reducedData });\n      isLoading(false);\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  console.log('gagdg', store);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      {!loading && (\n        <Provider\n          value={{\n            ...store,\n            updateState: (state: boolean) =>\n              dispatch({ type: 'FILTER_WATCH', payload: state }),\n          }}\n        >\n          <Wrapper>\n            <Filters>\n              <FiltersGroup />\n            </Filters>\n            <Movies>\n              <Consumer>\n                {({ movies }) =>\n                  movies.map((fields, i) => (\n                    <Card key={fields.Title} cardId={i} />\n                  ))\n                }\n              </Consumer>\n            </Movies>\n          </Wrapper>\n        </Provider>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}