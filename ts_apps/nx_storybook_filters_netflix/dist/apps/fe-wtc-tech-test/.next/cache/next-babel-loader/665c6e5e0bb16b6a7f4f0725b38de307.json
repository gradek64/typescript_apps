{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\nexport const MoviesContext = React.createContext({});\nconst {\n  Provider,\n  Consumer\n} = MoviesContext;\n\nconst movieReducer = (state, action) => {\n  switch (action.type) {\n    /* eslint-disable no-case-declarations */\n    case 'UPDATE':\n      return [_objectSpread({}, state, {}, action.payload)];\n\n    case 'REMOVE_ITEM':\n      const order = state.items.findIndex(({\n        title\n      }) => title === action.title);\n      state.items.splice(order, 1);\n      return {\n        items: [...state.items]\n      };\n\n    default:\n      return [...state];\n  }\n};\n\nconst Home = () => {\n  const {\n    0: loading,\n    1: isLoading\n  } = useState(true); //const [movies, getMovies] = useState([]);\n\n  const {\n    0: movies,\n    1: dispatchAction\n  } = useReducer(movieReducer, []);\n  const reduceData = useCallback(response => {\n    return response.map(({\n      Title,\n      Poster,\n      Ratings,\n      Watched,\n      Saved\n    }) => {\n      isLoading(false);\n      return {\n        Title,\n        Poster,\n        Ratings,\n        Watched,\n        Saved\n      };\n    });\n  }, []);\n  useEffect(() => {\n    isLoading(true);\n\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies'); //getMovies(reduceData(result));\n\n      dispatchAction({\n        type: 'UPDATE',\n        payload: reduceData(result)\n      });\n    };\n\n    fetchData();\n  }, [reduceData]);\n  console.log('gagdg', movies);\n  return __jsx(\"main\", null, loading && 'movies are loading', !loading && __jsx(Provider, {\n    value: movies\n  }, __jsx(Wrapper, null, __jsx(Filters, null, __jsx(FiltersGroup, null)), __jsx(Movies, null, __jsx(Consumer, null, moviesObj => moviesObj.map((fields, i) => __jsx(Card, {\n    key: fields.Title,\n    cardId: i\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","useCallback","useReducer","styled","Card","generalAPIService","FiltersGroup","Wrapper","div","Filters","Movies","MoviesContext","createContext","Provider","Consumer","movieReducer","state","action","type","payload","order","items","findIndex","title","splice","Home","loading","isLoading","movies","dispatchAction","reduceData","response","map","Title","Poster","Ratings","Watched","Saved","fetchData","result","get","console","log","moviesObj","fields","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\n\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n  Saved: string;\n  Watched: string;\n}\nexport const MoviesContext = React.createContext({} as ImoviesResponseFields[]);\nconst { Provider, Consumer } = MoviesContext;\n\nconst movieReducer = (state, action) => {\n  switch (action.type) {\n    /* eslint-disable no-case-declarations */\n    case 'UPDATE':\n      return [{ ...state, ...action.payload }];\n    case 'REMOVE_ITEM':\n      const order = state.items.findIndex(\n        ({ title }) => title === action.title\n      );\n      state.items.splice(order, 1);\n      return { items: [...state.items] };\n    default:\n      return [...state];\n  }\n};\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  //const [movies, getMovies] = useState([]);\n  const [movies, dispatchAction] = useReducer(movieReducer, []);\n\n  const reduceData = useCallback((response: {}[]) => {\n    return response.map(\n      ({ Title, Poster, Ratings, Watched, Saved }: ImoviesResponseFields) => {\n        isLoading(false);\n        return {\n          Title,\n          Poster,\n          Ratings,\n          Watched,\n          Saved,\n        };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      //getMovies(reduceData(result));\n      dispatchAction({ type: 'UPDATE', payload: reduceData(result) });\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  console.log('gagdg', movies);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      {!loading && (\n        <Provider value={movies}>\n          <Wrapper>\n            <Filters>\n              <FiltersGroup />\n            </Filters>\n            <Movies>\n              <Consumer>\n                {(moviesObj) =>\n                  moviesObj.map((fields, i) => (\n                    <Card key={fields.Title} cardId={i} />\n                  ))\n                }\n              </Consumer>\n            </Movies>\n          </Wrapper>\n        </Provider>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}