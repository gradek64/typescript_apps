{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // custom\n\n\nimport { ENV_MOVIES } from './utils/ENV';\n\nvar apiService = function apiService() {\n  var errorInterceptor = function errorInterceptor(response) {\n    switch (response.status) {\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n\n      default:\n    }\n\n    throw response;\n  };\n\n  var responseMiddleware = function responseMiddleware(res) {\n    return res;\n  };\n\n  var requestPath = function requestPath(path, params) {\n    var PATH = ENV_MOVIES.BASE_URL;\n\n    if (params && Object.keys(params).length > 1) {\n      var query = '';\n\n      for (var keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    }\n\n    return PATH + path;\n  };\n\n  var requestInterceptor = function requestInterceptor(serviceConfig, customRequestHeaders) {\n    var requestHeaders = {\n      'Content-Type': 'application/json'\n    };\n    var request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: _objectSpread({}, requestHeaders, {}, customRequestHeaders)\n    }; //request with body object not empty {}\n\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body)\n      });\n    }\n\n    return request;\n  };\n\n  var sendRequest = function sendRequest(serviceConfig, customRequestHeaders) {\n    var path, params, response, res;\n    return _regeneratorRuntime.async(function sendRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            path = requestPath(serviceConfig.path, serviceConfig.params);\n            params = requestInterceptor(serviceConfig, customRequestHeaders);\n            console.log('path', path);\n            console.log('params', params);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(path, params));\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            res = _context.sent;\n            return _context.abrupt(\"return\", responseMiddleware(res));\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('it has errored');\n            return _context.abrupt(\"return\", errorInterceptor(_context.t0));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  var get = function get(path) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$params = _ref.params,\n        params = _ref$params === void 0 ? {} : _ref$params;\n\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$customRequestHe = _ref2.customRequestHeaders,\n        customRequestHeaders = _ref2$customRequestHe === void 0 ? {} : _ref2$customRequestHe;\n\n    return sendRequest({\n      method: 'GET',\n      path: path,\n      params: params\n    }, customRequestHeaders);\n  };\n\n  var post = function post(path, _ref3) {\n    var body = _ref3.body;\n\n    var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref4$customRequestHe = _ref4.customRequestHeaders,\n        customRequestHeaders = _ref4$customRequestHe === void 0 ? {} : _ref4$customRequestHe;\n\n    return sendRequest({\n      method: 'POST',\n      path: path,\n      body: body\n    }, customRequestHeaders);\n  };\n\n  var put = function put(path, _ref5) {\n    var body = _ref5.body;\n\n    var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref6$customRequestHe = _ref6.customRequestHeaders,\n        customRequestHeaders = _ref6$customRequestHe === void 0 ? {} : _ref6$customRequestHe;\n\n    return sendRequest({\n      method: 'PUT',\n      path: path,\n      body: body\n    }, customRequestHeaders);\n  };\n\n  var patch = function patch(path, _ref7) {\n    var body = _ref7.body;\n\n    var _ref8 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref8$customRequestHe = _ref8.customRequestHeaders,\n        customRequestHeaders = _ref8$customRequestHe === void 0 ? {} : _ref8$customRequestHe;\n\n    return sendRequest({\n      method: 'PATCH',\n      path: path,\n      body: body\n    }, customRequestHeaders);\n  };\n\n  var del = function del(path, _ref9) {\n    var params = _ref9.params;\n\n    var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref10$customRequestH = _ref10.customRequestHeaders,\n        customRequestHeaders = _ref10$customRequestH === void 0 ? {} : _ref10$customRequestH;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'DELETE',\n        path: path,\n        params: params\n      }, customRequestHeaders)\n    );\n  };\n\n  return {\n    get: get,\n    post: post,\n    put: put,\n    patch: patch,\n    \"delete\": del\n  };\n};\n\nexport default apiService();","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/services/apiService.ts"],"names":["apiService","errorInterceptor","response","responseMiddleware","requestPath","PATH","ENV_MOVIES","params","Object","query","keys","requestInterceptor","requestHeaders","request","method","serviceConfig","cache","credentials","headers","body","JSON","sendRequest","path","console","fetch","res","get","customRequestHeaders","post","put","patch","del"],"mappings":"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","sourcesContent":["// custom\nimport { ENV_MOVIES } from './utils/ENV';\n\nconst apiService = () => {\n  const errorInterceptor = (response: Response) => {\n    switch (response.status) {\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n      default:\n    }\n    throw response;\n  };\n\n  const responseMiddleware = (res: { [key: string]: any }[]) => res;\n\n  const requestPath = (path: string, params?: Record<string, string>) => {\n    const PATH = ENV_MOVIES.BASE_URL;\n    if (params && Object.keys(params).length > 1) {\n      let query = '';\n      for (const keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    }\n    return PATH + path;\n  };\n\n  const requestInterceptor = (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Record<string, string>;\n      body?: Record<string, string>;\n    },\n    customRequestHeaders: Record<string, string>\n  ) => {\n    const requestHeaders = {\n      'Content-Type': 'application/json',\n    };\n\n    let request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        ...requestHeaders,\n        ...customRequestHeaders,\n      },\n    };\n\n    //request with body object not empty {}\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body),\n      });\n    }\n    return request as RequestInit;\n  };\n\n  const sendRequest = async (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Record<string, string>;\n      body?: Record<string, string>;\n    },\n    customRequestHeaders: Record<string, string>\n  ): Promise<{ [key: string]: any }[]> => {\n    try {\n      const path = requestPath(serviceConfig.path, serviceConfig.params);\n      const params = requestInterceptor(serviceConfig, customRequestHeaders);\n      console.log('path', path);\n      console.log('params', params);\n      const response = await fetch(path, params);\n      const res = await response.json();\n      return responseMiddleware(res);\n    } catch (err) {\n      console.log('it has errored');\n      return errorInterceptor(err);\n    }\n  };\n\n  const get = (\n    path: string,\n    { params = {} } = {},\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'GET', path, params }, customRequestHeaders);\n\n  const post = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'POST', path, body }, customRequestHeaders);\n\n  const put = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'PUT', path, body }, customRequestHeaders);\n\n  const patch = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'PATCH', path, body }, customRequestHeaders);\n\n  const del = (\n    path: string,\n    { params }: { params?: Record<string, string> },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'DELETE', path, params }, customRequestHeaders);\n\n  return {\n    get,\n    post,\n    put,\n    patch,\n    delete: del,\n  };\n};\n\nexport default apiService();\n"]},"metadata":{},"sourceType":"module"}