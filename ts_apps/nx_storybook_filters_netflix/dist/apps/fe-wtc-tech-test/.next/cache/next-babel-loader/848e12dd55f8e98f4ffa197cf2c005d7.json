{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport { MoviesContext } from '../../../pages/index';\nimport Input from '../../contentComponents/Input/Input';\nvar FilterContainer = styled.div(_templateObject());\n\nfunction FiltersGroup() {\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies,\n      updateState = _useContext.updateState;\n\n  var updateViewWithFiltersResponse = function updateViewWithFiltersResponse(genre, filter) {\n    console.log(\"?\".concat(genre));\n  };\n\n  var callToAction = function callToAction(genre) {\n    return function (filter) {\n      //console.log('filter', { [genre]: filter });\n      var objectFilter;\n      Object.keys(filter).forEach(function (key) {\n        console.log(key, filter[key]);\n        var keyLowerCase = key.toLowerCase();\n        var ValueLowerCase = filter[key].toLowerCase();\n        objectFilter = {\n          keyLowerCase: keyLowerCase,\n          ValueLowerCase: ValueLowerCase\n        };\n      });\n      updateViewWithFiltersResponse(genre.toLowerCase(), objectFilter); //updateState(yes ? 'True' : 'False');\n    };\n  };\n\n  var showFilters = 2;\n\n  var displayFilters = function displayFilters(ArrOfFilters, length) {\n    return {\n      displayed: ArrOfFilters.slice(0, showFilters),\n      hidden: ArrOfFilters.slice(showFilters, length)\n    };\n  };\n\n  var metaScoreStrings = '';\n\n  var calculateMetaScore = function calculateMetaScore(score) {\n    if (score < 60) {\n      metaScoreStrings = '< 60';\n    }\n\n    if (score > 60 && score < 80) {\n      metaScoreStrings = 'between 60 & 80';\n    }\n\n    if (score > 80 && score < 90) {\n      metaScoreStrings = 'between 80 & 90';\n    }\n\n    if (score > 90) {\n      metaScoreStrings = '> 90';\n    }\n\n    return metaScoreStrings;\n  };\n\n  var generate = function generate(value) {\n    return function (obj, element) {\n      if (value === 'Metascore') {\n        obj = generateFilters(calculateMetaScore(Number(element[value])), movies.length);\n        return obj;\n      }\n\n      obj = generateFilters(element[value], movies.length);\n      return obj;\n    };\n  }; //static filters\n\n\n  var watched = Object.entries({\n    YES: movies.filter(function (_ref) {\n      var Watched = _ref.Watched;\n      return Watched === 'True';\n    }).length,\n    NO: movies.filter(function (_ref2) {\n      var Watched = _ref2.Watched;\n      return Watched === 'False';\n    }).length\n  });\n  var savedInWatched = Object.entries({\n    YES: movies.filter(function (_ref3) {\n      var Saved = _ref3.Saved;\n      return Saved === 'True';\n    }).length,\n    NO: movies.filter(function (_ref4) {\n      var Saved = _ref4.Saved;\n      return Saved === 'False';\n    }).length\n  });\n  var type = Object.entries({\n    MOVIE: movies.filter(function (_ref5) {\n      var Type = _ref5.Type;\n      return Type === 'movie';\n    }).length,\n    SERIES: movies.filter(function (_ref6) {\n      var Type = _ref6.Type;\n      return Type === 'series';\n    }).length\n  }); //generated filters\n\n  var metasArr = Object.entries(movies.reduce(generate('Metascore'), {}));\n  var YearArr = Object.entries(movies.reduce(generate('Year'), {}));\n  var genreArr = Object.entries(movies.reduce(generate('Genre'), {}));\n  var actorsArr = Object.entries(movies.reduce(generate('Actors'), {}));\n  var directorArr = Object.entries(movies.reduce(generate('Director'), {}));\n  var metasArrFormat = displayFilters(metasArr, metasArr.length);\n  var yearArrFormat = displayFilters(YearArr, YearArr.length);\n  var genreArrFormat = displayFilters(genreArr, genreArr.length);\n  var actorsArrFormat = displayFilters(actorsArr, actorsArr.length);\n  var directorArrFormat = displayFilters(directorArr, directorArr.length);\n  var filtersLabels = {\n    TYPE: displayFilters(type, type.length),\n    YEARS: yearArrFormat,\n    METASCORE: metasArrFormat,\n    GENRE: genreArrFormat,\n    WATCHED: displayFilters(watched, watched.length),\n    'SAVED IN WATCHED LIST': displayFilters(savedInWatched, savedInWatched.length),\n    ACTORS: actorsArrFormat,\n    DIRECTORS: directorArrFormat\n  };\n  return __jsx(React.Fragment, null, __jsx(FilterContainer, null, Object.entries(filtersLabels).map(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        title = _ref8[0],\n        filters = _ref8[1];\n\n    return __jsx(\"div\", {\n      className: \"accordion\",\n      key: title\n    }, __jsx(Accordion, {\n      open: true,\n      shevron: false,\n      clickDisable: true,\n      title: title\n    }, __jsx(\"div\", null, filters['displayed'].map(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n          key = _ref10[0],\n          value = _ref10[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(Input, {\n        name: key,\n        value: \"\".concat(key, \"(\").concat(value, \")\"),\n        callback: callToAction(title)\n      }));\n    }))), filters['hidden'].length > 0 && __jsx(Accordion, {\n      title: 'see more',\n      directional: true,\n      shevron: false\n    }, filters['hidden'].map(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n          key = _ref12[0],\n          value = _ref12[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(Input, {\n        name: key,\n        value: \"\".concat(key, \"(\").concat(value, \")\"),\n        callback: callToAction\n      }));\n    })));\n  })));\n} //make sure it render only the amount of movies.length\n\n\nexport default React.memo(FiltersGroup);","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","useContext","Accordion","generateFilters","styled","MoviesContext","Input","FilterContainer","div","FiltersGroup","movies","updateState","updateViewWithFiltersResponse","genre","filter","console","log","callToAction","objectFilter","Object","keys","forEach","key","keyLowerCase","toLowerCase","ValueLowerCase","showFilters","displayFilters","ArrOfFilters","length","displayed","slice","hidden","metaScoreStrings","calculateMetaScore","score","generate","value","obj","element","Number","watched","entries","YES","Watched","NO","savedInWatched","Saved","type","MOVIE","Type","SERIES","metasArr","reduce","YearArr","genreArr","actorsArr","directorArr","metasArrFormat","yearArrFormat","genreArrFormat","actorsArrFormat","directorArrFormat","filtersLabels","TYPE","YEARS","METASCORE","GENRE","WATCHED","ACTORS","DIRECTORS","map","title","filters","memo"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport { MoviesContext } from '../../../pages/index';\nimport Input from '../../contentComponents/Input/Input';\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nfunction FiltersGroup() {\n  const { movies, updateState } = useContext(MoviesContext);\n\n  const updateViewWithFiltersResponse = (genre: string, filter: any) => {\n    console.log(`?${genre}`)\n  }\n\n  const callToAction = (genre: string) => (filter: any) => {\n    //console.log('filter', { [genre]: filter });\n    let objectFilter;\n    Object.keys(filter).forEach((key) => {\n      console.log(key, filter[key])\n      const keyLowerCase = key.toLowerCase()\n      const ValueLowerCase = filter[key].toLowerCase()\n      objectFilter = { keyLowerCase, ValueLowerCase }\n    })\n    updateViewWithFiltersResponse(genre.toLowerCase(), objectFilter)\n\n    //updateState(yes ? 'True' : 'False');\n  };\n  const showFilters = 2;\n  const displayFilters = (\n    ArrOfFilters: [string, unknown][],\n    length: number\n  ) => ({\n    displayed: ArrOfFilters.slice(0, showFilters),\n    hidden: ArrOfFilters.slice(showFilters, length),\n  });\n\n  let metaScoreStrings = '';\n  const calculateMetaScore = (score: number) => {\n    if (score < 60) {\n      metaScoreStrings = '< 60';\n    }\n    if (score > 60 && score < 80) {\n      metaScoreStrings = 'between 60 & 80';\n    }\n    if (score > 80 && score < 90) {\n      metaScoreStrings = 'between 80 & 90';\n    }\n    if (score > 90) {\n      metaScoreStrings = '> 90';\n    }\n    return metaScoreStrings;\n  };\n\n  const generate = (value: string) => (obj: {}, element: {}) => {\n    if (value === 'Metascore') {\n      obj = generateFilters(\n        calculateMetaScore(Number(element[value])),\n        movies.length\n      );\n      return obj;\n    }\n    obj = generateFilters(element[value], movies.length);\n    return obj;\n  };\n\n  //static filters\n  const watched = Object.entries({\n    YES: movies.filter(({ Watched }) => Watched === 'True').length,\n    NO: movies.filter(({ Watched }) => Watched === 'False').length,\n  });\n  const savedInWatched = Object.entries({\n    YES: movies.filter(({ Saved }) => Saved === 'True').length,\n    NO: movies.filter(({ Saved }) => Saved === 'False').length,\n  });\n  const type = Object.entries({\n    MOVIE: movies.filter(({ Type }) => Type === 'movie').length,\n    SERIES: movies.filter(({ Type }) => Type === 'series').length,\n  });\n  //generated filters\n  const metasArr = Object.entries(movies.reduce(generate('Metascore'), {}));\n  const YearArr = Object.entries(movies.reduce(generate('Year'), {}));\n  const genreArr = Object.entries(movies.reduce(generate('Genre'), {}));\n  const actorsArr = Object.entries(movies.reduce(generate('Actors'), {}));\n  const directorArr = Object.entries(movies.reduce(generate('Director'), {}));\n\n  const metasArrFormat = displayFilters(metasArr, metasArr.length);\n  const yearArrFormat = displayFilters(YearArr, YearArr.length);\n  const genreArrFormat = displayFilters(genreArr, genreArr.length);\n  const actorsArrFormat = displayFilters(actorsArr, actorsArr.length);\n  const directorArrFormat = displayFilters(directorArr, directorArr.length);\n\n  const filtersLabels = {\n    TYPE: displayFilters(type, type.length),\n    YEARS: yearArrFormat,\n    METASCORE: metasArrFormat,\n    GENRE: genreArrFormat,\n    WATCHED: displayFilters(watched, watched.length),\n    'SAVED IN WATCHED LIST': displayFilters(\n      savedInWatched,\n      savedInWatched.length\n    ),\n    ACTORS: actorsArrFormat,\n    DIRECTORS: directorArrFormat,\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        {Object.entries(filtersLabels).map(([title, filters]) => (\n          <div className=\"accordion\" key={title}>\n            <Accordion open shevron={false} clickDisable={true} title={title}>\n              <div>\n                {filters['displayed'].map(([key, value]) => (\n                  <div key={key}>\n                    <Input\n                      name={key}\n                      value={`${key}(${value})`}\n                      callback={callToAction(title)}\n                    />\n                  </div>\n                ))}\n              </div>\n            </Accordion>\n            {filters['hidden'].length > 0 && (\n              <Accordion title={'see more'} directional={true} shevron={false}>\n                {filters['hidden'].map(([key, value]) => (\n                  <div key={key}>\n                    <Input\n                      name={key}\n                      value={`${key}(${value})`}\n                      callback={callToAction}\n                    />\n                  </div>\n                ))}\n              </Accordion>\n            )}\n          </div>\n        ))}\n      </FilterContainer>\n    </>\n  );\n}\n\n//make sure it render only the amount of movies.length\nexport default React.memo(FiltersGroup);\n"]},"metadata":{},"sourceType":"module"}