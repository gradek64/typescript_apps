{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding-top: 7px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  padding: 10px 10px 0px 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 150px;\\n  height: 221px;\\n  border-radius: 10px;\\n  background-image: url(\", \");\\n  background-repeat: no-repeat;\\n  background-size: 100% 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 10px;\\n  width: 150px;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \", \";\\n  /* align-items: center; */\\n  max-width: 200px;\\n  max-height: 300px;\\n  border-radius: 20px;\\n  /* justify-content: center; */\\n  margin: 10px;\\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\nvar cardColorMapping = {\n  \"default\": '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nvar CardContainer = styled.div(_templateObject(), function (props) {\n  return props.color || cardColorMapping[\"default\"];\n});\nvar Poster = styled.div(_templateObject2());\nvar PosterImage = styled.div(_templateObject3(), function (props) {\n  return props.imgURL;\n});\nvar CardHeader = styled.div(_templateObject4());\nvar CardFooter = styled.div(_templateObject5());\n\nfunction Card(_ref) {\n  var cardId = _ref.cardId;\n\n  var _useState = useState(cardColorMapping[\"default\"]),\n      backgroundColor = _useState[0],\n      setBgColor = _useState[1];\n\n  var _useState2 = useState(0),\n      count = _useState2[0],\n      setCount = _useState2[1]; //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n\n\n  var setColor = function setColor(_ref2) {\n    var watch = _ref2.watch,\n        favorite = _ref2.favorite;\n\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping[\"default\"]);\n        console.log('cardColorMapping.default');\n        break;\n\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n\n      default:\n        break;\n    }\n  }; //}, []);\n\n\n  var increaseCount = useCallback(function (value) {\n    setCount(value);\n  }, []);\n\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies;\n\n  var _movies$cardId = movies[cardId],\n      Watched = _movies$cardId.Watched,\n      Saved = _movies$cardId.Saved,\n      Title = _movies$cardId.Title,\n      PosterURL = _movies$cardId.Poster,\n      Ratings = _movies$cardId.Ratings;\n  var movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase())\n  };\n  useEffect(function () {\n    setColor(_objectSpread({}, movieStatus));\n  }, []);\n  return __jsx(CardContainer, {\n    color: backgroundColor,\n    key: Title\n  }, __jsx(\"p\", null, \"count:\".concat(count)), __jsx(CardHeader, null, __jsx(IconsStateManagement //callToActionCardColor={setColor}\n  , _extends({\n    callToActionCardCount: increaseCount\n  }, movieStatus))), __jsx(Poster, null, __jsx(PosterImage, {\n    imgURL: PosterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: calculateAvarageRatings(Ratings)\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Card/Card.tsx"],"names":["cardColorMapping","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","styled","props","Poster","PosterImage","CardHeader","CardFooter","cardId","backgroundColor","setBgColor","useState","count","setCount","setColor","watch","favorite","console","increaseCount","useCallback","movies","useContext","Watched","Saved","Title","PosterURL","Ratings","movieStatus","JSON","useEffect","calculateAvarageRatings"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  max-width: 200px;\n  max-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  imgURL: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\ninterface Props {\n  cardId: number;\n}\nfunction Card({ cardId }: Props) {\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n  const [count, setCount] = useState(0);\n\n  //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        console.log('cardColorMapping.default')\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  }\n  //}, []);\n\n  const increaseCount = useCallback((value) => {\n    setCount(value)\n  }, [])\n\n\n  const { movies } = useContext(MoviesContext);\n  const { Watched, Saved, Title, Poster: PosterURL, Ratings } = movies[cardId];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  };\n\n  useEffect(() => {\n    setColor({ ...movieStatus })\n  }, [])\n\n  return (\n    <CardContainer color={backgroundColor} key={Title}>\n      <p>{`count:${count}`}</p>\n      <CardHeader>\n        <IconsStateManagement\n          //callToActionCardColor={setColor}\n          callToActionCardCount={increaseCount}\n          {...movieStatus}\n        />\n      </CardHeader>\n      <Poster>\n        <PosterImage imgURL={PosterURL} />\n      </Poster>\n      <CardFooter>\n        <RatingStarComp rating={calculateAvarageRatings(Ratings)} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}