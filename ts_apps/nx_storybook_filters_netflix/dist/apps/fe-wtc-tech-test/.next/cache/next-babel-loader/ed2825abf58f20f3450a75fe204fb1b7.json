{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\nvar all = Object.entries(generateFilters());\nvar displayed1 = all.slice(0, 5);\nvar hidden1 = all.slice(5, all.length);\nvar FilterContainer = styled.div(_templateObject());\nvar CheckBox = wrapperIconHOC(CheckBoxOutlineBlankOutlinedIcon, CheckBoxOutlinedIcon);\n\nfunction FiltersGroup() {\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies,\n      updateState = _useContext.updateState,\n      update2 = _useContext.update2;\n  /* const { Watched, Saved, Title, Poster: PosterURL, Ratings } = [...movies];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  }; */\n\n\n  var callToAction = function callToAction(_ref) {\n    var checkbox = _ref.checkbox;\n    update2(checkbox);\n  };\n\n  console.log('movies', movies);\n  var watched = Object.entries({\n    YES: movies.filter(function (_ref2) {\n      var Watched = _ref2.Watched;\n      return Watched === 'True';\n    }).length,\n    NO: movies.filter(function (_ref3) {\n      var Watched = _ref3.Watched;\n      return Watched === 'False';\n    }).length\n  });\n  var type = Object.entries({\n    MOVIE: movies.filter(function (_ref4) {\n      var Type = _ref4.Type;\n      return Type === 'movie';\n    }).length,\n    SERIES: movies.filter(function (_ref5) {\n      var Type = _ref5.Type;\n      return Type === 'series';\n    }).length\n  });\n  var displayed = watched.slice(0, 5);\n  var hidden = watched.slice(5, all.length);\n  var FilterLabel = {\n    watched: watched,\n    type: type\n  };\n  var ss = false;\n  return __jsx(React.Fragment, null, ss && '...loadin', __jsx(FilterContainer, null, ['watched'].map(function (title) {\n    return __jsx(\"div\", {\n      className: \"accordion\"\n    }, __jsx(Accordion, {\n      open: true,\n      shevron: false,\n      clickDisable: true,\n      title: title\n    }, __jsx(\"div\", null, displayed.map(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(CheckBox, {\n        callToAction: callToAction,\n        icon: \"checkbox\"\n      }), \"\".concat(key, \"(\").concat(value, \")\"));\n    }))), hidden.length > 0 && __jsx(Accordion, {\n      title: '...more',\n      directional: true,\n      shevron: false\n    }, hidden.map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          key = _ref9[0],\n          value = _ref9[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(CheckBox, {\n        callToAction: callToAction,\n        icon: \"checkbox\"\n      }), \"\".concat(key, \"(\").concat(value, \")\"));\n    })));\n  })));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","useContext","CheckBoxOutlineBlankOutlinedIcon","CheckBoxOutlinedIcon","Accordion","generateFilters","styled","wrapperIconHOC","MoviesContext","all","Object","entries","displayed1","slice","hidden1","length","FilterContainer","div","CheckBox","FiltersGroup","movies","updateState","update2","callToAction","checkbox","console","log","watched","YES","filter","Watched","NO","type","MOVIE","Type","SERIES","displayed","hidden","FilterLabel","ss","map","title","key","value"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,gCAAP,MAA6C,iDAA7C;AACA,OAAOC,oBAAP,MAAiC,qCAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,IAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeN,eAAe,EAA9B,CAAZ;AACA,IAAMO,UAAU,GAAGH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAnB;AACA,IAAMC,OAAO,GAAGL,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaJ,GAAG,CAACM,MAAjB,CAAhB;AAEA,IAAMC,eAAe,GAAGV,MAAM,CAACW,GAAV,mBAArB;AAMA,IAAMC,QAAQ,GAAGX,cAAc,CAC7BL,gCAD6B,EAE7BC,oBAF6B,CAA/B;;AAKA,SAASgB,YAAT,GAAwB;AAAA,oBACmBlB,UAAU,CAACO,aAAD,CAD7B;AAAA,MACdY,MADc,eACdA,MADc;AAAA,MACNC,WADM,eACNA,WADM;AAAA,MACOC,OADP,eACOA,OADP;AAEtB;;;;;;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;AACrCF,IAAAA,OAAO,CAACE,QAAD,CAAP;AACD,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,MAAtB;AACA,MAAMO,OAAO,GAAGjB,MAAM,CAACC,OAAP,CAAe;AAC7BiB,IAAAA,GAAG,EAAER,MAAM,CAACS,MAAP,CAAc;AAAA,UAAGC,OAAH,SAAGA,OAAH;AAAA,aAAiBA,OAAO,KAAK,MAA7B;AAAA,KAAd,EAAmDf,MAD3B;AAE7BgB,IAAAA,EAAE,EAAEX,MAAM,CAACS,MAAP,CAAc;AAAA,UAAGC,OAAH,SAAGA,OAAH;AAAA,aAAiBA,OAAO,KAAK,OAA7B;AAAA,KAAd,EAAoDf;AAF3B,GAAf,CAAhB;AAKA,MAAMiB,IAAI,GAAGtB,MAAM,CAACC,OAAP,CAAe;AAC1BsB,IAAAA,KAAK,EAAEb,MAAM,CAACS,MAAP,CAAc;AAAA,UAAGK,IAAH,SAAGA,IAAH;AAAA,aAAcA,IAAI,KAAK,OAAvB;AAAA,KAAd,EAA8CnB,MAD3B;AAE1BoB,IAAAA,MAAM,EAAEf,MAAM,CAACS,MAAP,CAAc;AAAA,UAAGK,IAAH,SAAGA,IAAH;AAAA,aAAcA,IAAI,KAAK,QAAvB;AAAA,KAAd,EAA+CnB;AAF7B,GAAf,CAAb;AAKA,MAAMqB,SAAS,GAAGT,OAAO,CAACd,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAlB;AACA,MAAMwB,MAAM,GAAGV,OAAO,CAACd,KAAR,CAAc,CAAd,EAAiBJ,GAAG,CAACM,MAArB,CAAf;AAEA,MAAMuB,WAAW,GAAG;AAClBX,IAAAA,OAAO,EAAPA,OADkB;AAElBK,IAAAA,IAAI,EAAJA;AAFkB,GAApB;AAKA,MAAMO,EAAE,GAAG,KAAX;AACA,SACE,4BACGA,EAAE,IAAI,WADT,EAEE,MAAC,eAAD,QACG,CAAC,SAAD,EAAYC,GAAZ,CAAgB,UAACC,KAAD;AAAA,WACf;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,SAAD;AAAW,MAAA,IAAI,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAzB;AAAgC,MAAA,YAAY,EAAE,IAA9C;AAAoD,MAAA,KAAK,EAAEA;AAA3D,OACE,mBACGL,SAAS,CAACI,GAAV,CAAc;AAAA;AAAA,UAAEE,GAAF;AAAA,UAAOC,KAAP;;AAAA,aACb;AAAK,QAAA,GAAG,EAAED;AAAV,SACE,MAAC,QAAD;AAAU,QAAA,YAAY,EAAEnB,YAAxB;AAAsC,QAAA,IAAI,EAAC;AAA3C,QADF,YAEMmB,GAFN,cAEaC,KAFb,OADa;AAAA,KAAd,CADH,CADF,CADF,EAWGN,MAAM,CAACtB,MAAP,GAAgB,CAAhB,IACC,MAAC,SAAD;AAAW,MAAA,KAAK,EAAE,SAAlB;AAA6B,MAAA,WAAW,EAAE,IAA1C;AAAgD,MAAA,OAAO,EAAE;AAAzD,OACGsB,MAAM,CAACG,GAAP,CAAW;AAAA;AAAA,UAAEE,GAAF;AAAA,UAAOC,KAAP;;AAAA,aACV;AAAK,QAAA,GAAG,EAAED;AAAV,SACE,MAAC,QAAD;AAAU,QAAA,YAAY,EAAEnB,YAAxB;AAAsC,QAAA,IAAI,EAAC;AAA3C,QADF,YAEMmB,GAFN,cAEaC,KAFb,OADU;AAAA,KAAX,CADH,CAZJ,CADe;AAAA,GAAhB,CADH,CAFF,CADF;AA+BD;;AAED,eAAexB,YAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\n\nconst all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length);\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst CheckBox = wrapperIconHOC(\n  CheckBoxOutlineBlankOutlinedIcon,\n  CheckBoxOutlinedIcon\n);\n\nfunction FiltersGroup() {\n  const { movies, updateState, update2 } = useContext(MoviesContext);\n  /* const { Watched, Saved, Title, Poster: PosterURL, Ratings } = [...movies];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  }; */\n\n  const callToAction = ({ checkbox }) => {\n    update2(checkbox);\n  };\n  console.log('movies', movies);\n  const watched = Object.entries({\n    YES: movies.filter(({ Watched }) => Watched === 'True').length,\n    NO: movies.filter(({ Watched }) => Watched === 'False').length,\n  });\n\n  const type = Object.entries({\n    MOVIE: movies.filter(({ Type }) => Type === 'movie').length,\n    SERIES: movies.filter(({ Type }) => Type === 'series').length,\n  });\n\n  const displayed = watched.slice(0, 5);\n  const hidden = watched.slice(5, all.length);\n\n  const FilterLabel = {\n    watched,\n    type,\n  };\n\n  const ss = false;\n  return (\n    <>\n      {ss && '...loadin'}\n      <FilterContainer>\n        {['watched'].map((title) => (\n          <div className=\"accordion\">\n            <Accordion open shevron={false} clickDisable={true} title={title}>\n              <div>\n                {displayed.map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </div>\n            </Accordion>\n            {hidden.length > 0 && (\n              <Accordion title={'...more'} directional={true} shevron={false}>\n                {hidden.map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </Accordion>\n            )}\n          </div>\n        ))}\n      </FilterContainer>\n    </>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}