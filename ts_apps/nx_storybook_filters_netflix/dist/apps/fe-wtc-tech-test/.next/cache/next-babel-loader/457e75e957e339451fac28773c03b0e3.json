{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 80%;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 20%;\\n  background-color: grey;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\nvar Wrapper = styled.div(_templateObject());\nvar Filters = styled.div(_templateObject2());\nvar Movies = styled.div(_templateObject3());\nexport var MoviesContext = React.createContext({});\nvar Provider = MoviesContext.Provider,\n    Consumer = MoviesContext.Consumer;\n\nvar movieReducer = function movieReducer(state, action) {\n  switch (action.type) {\n    /* eslint-disable no-case-declarations */\n    case 'UPDATE':\n      return _objectSpread({}, state, {}, action.payload);\n\n    case 'REMOVE_ITEM':\n      var order = state.items.findIndex(function (_ref) {\n        var title = _ref.title;\n        return title === action.title;\n      });\n      state.items.splice(order, 1);\n      return {\n        items: _toConsumableArray(state.items)\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar Home = function Home() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      isLoading = _useState[1]; //const [movies, getMovies] = useState([]);\n\n\n  var _useReducer = useReducer(movieReducer, []),\n      movies = _useReducer[0],\n      dispatchAction = _useReducer[1];\n\n  var reduceData = useCallback(function (response) {\n    return response.map(function (_ref2) {\n      var Title = _ref2.Title,\n          Poster = _ref2.Poster,\n          Ratings = _ref2.Ratings,\n          Watched = _ref2.Watched,\n          Saved = _ref2.Saved;\n      isLoading(false);\n      return {\n        Title: Title,\n        Poster: Poster,\n        Ratings: Ratings,\n        Watched: Watched,\n        Saved: Saved\n      };\n    });\n  }, []);\n  useEffect(function () {\n    isLoading(true);\n\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(generalAPIService.get('/api/movies'));\n\n            case 2:\n              result = _context.sent;\n              //getMovies(reduceData(result));\n              dispatchAction({\n                type: 'UPDATE',\n                payload: reduceData(result)\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [reduceData]);\n  return __jsx(\"main\", null, loading && 'movies are loading', __jsx(Provider, {\n    value: movies\n  }, __jsx(Wrapper, null, __jsx(Filters, null, __jsx(FiltersGroup, null)), __jsx(Movies, null, __jsx(Consumer, null, function (moviesObj) {\n    return moviesObj.map(function (fields, i) {\n      return __jsx(Card, {\n        key: fields.Title,\n        cardId: i\n      });\n    });\n  })))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","useCallback","useReducer","styled","Card","generalAPIService","FiltersGroup","Wrapper","div","Filters","Movies","MoviesContext","createContext","Provider","Consumer","movieReducer","state","action","type","payload","order","items","findIndex","title","splice","Home","loading","isLoading","movies","dispatchAction","reduceData","response","map","Title","Poster","Ratings","Watched","Saved","fetchData","get","result","moviesObj","fields","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\n\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n  Saved: string;\n  Watched: string;\n}\nexport const MoviesContext = React.createContext({} as ImoviesResponseFields[]);\nconst { Provider, Consumer } = MoviesContext;\n\nconst movieReducer = (state, action) => {\n  switch (action.type) {\n    /* eslint-disable no-case-declarations */\n    case 'UPDATE':\n      return { ...state, ...action.payload };\n    case 'REMOVE_ITEM':\n      const order = state.items.findIndex(\n        ({ title }) => title === action.title\n      );\n      state.items.splice(order, 1);\n      return { items: [...state.items] };\n    default:\n      return state;\n  }\n};\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  //const [movies, getMovies] = useState([]);\n  const [movies, dispatchAction] = useReducer(movieReducer, []);\n\n  const reduceData = useCallback((response: {}[]) => {\n    return response.map(\n      ({ Title, Poster, Ratings, Watched, Saved }: ImoviesResponseFields) => {\n        isLoading(false);\n        return {\n          Title,\n          Poster,\n          Ratings,\n          Watched,\n          Saved,\n        };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      //getMovies(reduceData(result));\n      dispatchAction({ type: 'UPDATE', payload: reduceData(result) });\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      <Provider value={movies}>\n        <Wrapper>\n          <Filters>\n            <FiltersGroup />\n          </Filters>\n          <Movies>\n            <Consumer>\n              {(moviesObj) =>\n                moviesObj.map((fields, i) => (\n                  <Card key={fields.Title} cardId={i} />\n                ))\n              }\n            </Consumer>\n          </Movies>\n        </Wrapper>\n      </Provider>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}