{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\nconst all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length);\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst callToAction = () => {};\n\nconst CheckBox = wrapperIconHOC(CheckBoxOutlineBlankOutlinedIcon, CheckBoxOutlinedIcon);\n\nfunction FiltersGroup() {\n  const {\n    data\n  } = useContext(MoviesContext);\n  /* const { Watched, Saved, Title, Poster: PosterURL, Ratings } = [...data];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  }; */\n\n  console.log('data', data);\n  const watched = Object.entries({\n    YES: data.filter(({\n      Watched\n    }) => Watched === 'True').length,\n    NO: data.filter(({\n      Watched\n    }) => Watched === 'False').length\n  });\n  const type = Object.entries({\n    MOVIE: data.filter(({\n      Type\n    }) => Type === 'movie').length,\n    SERIES: data.filter(({\n      Type\n    }) => Type === 'series').length\n  });\n  const displayed = watched.slice(0, 5);\n  const hidden = watched.slice(5, all.length);\n  const FilterLabel = {\n    watched,\n    type\n  };\n  const ss = false;\n  return __jsx(React.Fragment, null, ss && '...loadin', __jsx(FilterContainer, null, ['watched'].map(title => __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true,\n    title: title\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(CheckBox, {\n    callToAction: callToAction,\n    icon: \"checkbox\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(Accordion, {\n    title: '...more',\n    directional: true,\n    shevron: false\n  }, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(CheckBox, {\n    callToAction: callToAction,\n    icon: \"checkbox\"\n  }), `${key}(${value})`)))))));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["all","Object","generateFilters","displayed1","hidden1","FilterContainer","styled","div","callToAction","CheckBox","wrapperIconHOC","data","useContext","console","watched","YES","Watched","NO","length","type","MOVIE","Type","SERIES","displayed","hidden","FilterLabel","ss","title","key","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\n\nconst all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length);\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst callToAction = () => {};\n\nconst CheckBox = wrapperIconHOC(\n  CheckBoxOutlineBlankOutlinedIcon,\n  CheckBoxOutlinedIcon\n);\n\nfunction FiltersGroup() {\n  const { data } = useContext(MoviesContext);\n  /* const { Watched, Saved, Title, Poster: PosterURL, Ratings } = [...data];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  }; */\n  console.log('data', data);\n  const watched = Object.entries({\n    YES: data.filter(({ Watched }) => Watched === 'True').length,\n    NO: data.filter(({ Watched }) => Watched === 'False').length,\n  });\n\n  const type = Object.entries({\n    MOVIE: data.filter(({ Type }) => Type === 'movie').length,\n    SERIES: data.filter(({ Type }) => Type === 'series').length,\n  });\n\n  const displayed = watched.slice(0, 5);\n  const hidden = watched.slice(5, all.length);\n\n  const FilterLabel = {\n    watched,\n    type,\n  };\n\n  const ss = false;\n  return (\n    <>\n      {ss && '...loadin'}\n      <FilterContainer>\n        {['watched'].map((title) => (\n          <div className=\"accordion\">\n            <Accordion open shevron={false} clickDisable={true} title={title}>\n              <div>\n                {displayed.map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </div>\n            </Accordion>\n            {hidden.length > 0 && (\n              <Accordion title={'...more'} directional={true} shevron={false}>\n                {hidden.map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </Accordion>\n            )}\n          </div>\n        ))}\n      </FilterContainer>\n    </>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}