{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\nvar Movies = styled.div(_templateObject());\nexport var MoviesContext = React.createContext([{}]);\nvar Provider = MoviesContext.Provider;\n\nvar Home = function Home() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      isLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      movies = _useState2[0],\n      getMovies = _useState2[1];\n\n  var reduceData = useCallback(function (response) {\n    // const averageRatingsAll: { avrRat: number }[] = [];\n    //let averageRatings: { avrRat: number };\n    return response.map(function (_ref, i) {\n      var Title = _ref.Title,\n          Poster = _ref.Poster,\n          Ratings = _ref.Ratings; //averageRatingsAll.push({ avrRat: calculateAvarageRatings(Ratings) });\n      //averageRatings = averageRatingsAll[i];\n\n      isLoading(false);\n      return {\n        Title: Title,\n        Poster: Poster,\n        Ratings: Ratings\n      };\n    });\n  }, []);\n  useEffect(function () {\n    isLoading(true);\n\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(generalAPIService.get('/api/movies'));\n\n            case 2:\n              result = _context.sent;\n              getMovies(reduceData(result));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [reduceData]);\n  return __jsx(\"main\", null, loading && 'movies are loading', __jsx(Provider, {\n    value: movies\n  }, __jsx(Movies, null, __jsx(Card, null))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["Movies","styled","MoviesContext","React","Provider","Home","loading","isLoading","useState","movies","getMovies","reduceData","useCallback","Title","Poster","Ratings","useEffect","fetchData","result","generalAPIService"],"mappings":";;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,QAAA,EAAA,WAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA,C,CAEA;;AACA,OAAA,IAAA,MAAA,aAAA;AACA,OAAA,iBAAA,MAAA,uBAAA;AAEA,IAAMA,MAAM,GAAGC,MAAM,CAAT,GAAGA,CAAH,eAAZ,EAAeA,CAAf;AAUA,OAAO,IAAMC,aAAa,GAAGC,KAAK,CAALA,aAAAA,CAAoB,CAA1C,EAA0C,CAApBA,CAAtB;IACCC,Q,GAAaF,a,CAAbE,Q;;AAER,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,MAAA,SAAA,GACYG,QAAQ,CADpB,IACoB,CADpB;AAAA,MACVF,OADU,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MACDC,SADC,GAAA,SAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,UAAA,GAEWC,QAAQ,CAFnB,EAEmB,CAFnB;AAAA,MAEVC,MAFU,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAEFC,SAFE,GAAA,UAAA,CAAA,CAAA,CAAA;;AAIjB,MAAMC,UAAU,GAAGC,WAAW,CAAC,UAAA,QAAA,EAAoB;AACjD;AACA;AACA,WAAO,QAAQ,CAAR,GAAA,CACL,UAAA,IAAA,EAAA,CAAA,EAA0D;AAAA,UAAvDC,KAAuD,GAAA,IAAA,CAAvDA,KAAuD;AAAA,UAAhDC,MAAgD,GAAA,IAAA,CAAhDA,MAAgD;AAAA,UAAxCC,OAAwC,GAAA,IAAA,CAAxCA,OAAwC,CAAA,CACxD;AACA;;AACAR,MAAAA,SAAS,CAATA,KAAS,CAATA;AACA,aAAO;AAAEM,QAAAA,KAAK,EAAP,KAAA;AAASC,QAAAA,MAAM,EAAf,MAAA;AAAiBC,QAAAA,OAAO,EAAPA;AAAjB,OAAP;AALJ,KAAO,CAAP;AAH4B,GAAA,EAA9B,EAA8B,CAA9B;AAaAC,EAAAA,SAAS,CAAC,YAAM;AACdT,IAAAA,SAAS,CAATA,IAAS,CAATA;;AACA,QAAMU,SAAS,GAAG,SAAZA,SAAY,GAAA;AAAA,UAAA,MAAA;AAAA,aAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,UAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,qBAAA,mBAAA,CAAA,KAAA,CACKE,iBAAiB,CAAjBA,GAAAA,CADL,aACKA,CADL,CAAA;;AAAA,iBAAA,CAAA;AACVD,cAAAA,MADU,GAAA,QAAA,CAAA,IACVA;AACNR,cAAAA,SAAS,CAACC,UAAU,CAApBD,MAAoB,CAAX,CAATA;;AAFgB,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAlB,KAAA;;AAKAO,IAAAA,SAAS;AAPF,GAAA,EAQN,CARHD,UAQG,CARM,CAATA;AAUA,SACE,KAAA,CAAA,MAAA,EAAA,IAAA,EACGV,OAAO,IADV,oBAAA,EAEE,KAAA,CAAA,QAAA,EAAA;AAAU,IAAA,KAAK,EAAEG;AAAjB,GAAA,EACE,KAAA,CAAA,MAAA,EAAA,IAAA,EACE,KAAA,CAAA,IAAA,EALR,IAKQ,CADF,CADF,CAFF,CADF;AA3BF,CAAA;;AAuCA,eAAA,IAAA","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\n\nconst Movies = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n}\nexport const MoviesContext = React.createContext([{} as ImoviesResponseFields]);\nconst { Provider } = MoviesContext;\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  const [movies, getMovies] = useState([]);\n\n  const reduceData = useCallback((response: {}[]) => {\n    // const averageRatingsAll: { avrRat: number }[] = [];\n    //let averageRatings: { avrRat: number };\n    return response.map(\n      ({ Title, Poster, Ratings }: ImoviesResponseFields, i) => {\n        //averageRatingsAll.push({ avrRat: calculateAvarageRatings(Ratings) });\n        //averageRatings = averageRatingsAll[i];\n        isLoading(false);\n        return { Title, Poster, Ratings };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      <Provider value={movies}>\n        <Movies>\n          <Card />\n        </Movies>\n      </Provider>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}