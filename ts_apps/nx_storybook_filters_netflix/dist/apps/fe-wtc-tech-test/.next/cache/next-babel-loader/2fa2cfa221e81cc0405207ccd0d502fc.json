{"ast":null,"code":"export const calculateAvarageRatings = Ratings => {\n  const percentageValue = [];\n  const overAllPerc = Ratings.map(({\n    Value\n  }) => Value).reduce((avaragePerc, rating, index) => {\n    if (rating.includes('/')) {\n      const [all, ratio] = rating.split('/').map(value => Number(value));\n      const calcPercentage = all / ratio * 100;\n      percentageValue.push(calcPercentage);\n    }\n\n    if (rating.includes('%')) {\n      const value = rating.match(/\\d+/)[0];\n      const percentage = Number(value);\n      percentageValue.push(percentage);\n    }\n\n    if (index === Ratings.length - 1) {\n      const sumPercentage = percentageValue.reduce((acc, value) => acc + value);\n      avaragePerc = sumPercentage / Ratings.length;\n      return avaragePerc;\n    }\n\n    return 0;\n  }, 0);\n  return overAllPerc;\n};","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Card/CardUtills/calculateAvarageRating.ts"],"names":["calculateAvarageRatings","Ratings","percentageValue","overAllPerc","Value","rating","value","Number","calcPercentage","all","percentage","index","sumPercentage","acc","avaragePerc"],"mappings":"AAAA,OAAO,MAAMA,uBAAuB,GAAIC,OAAD,IAAmB;AACxD,QAAMC,eAAyB,GAA/B,EAAA;AAEA,QAAMC,WAAW,GAAG,OAAO,CAAP,GAAA,CAClB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KADkB,KAAA,EAAA,MAAA,CAEX,CAAA,WAAA,EAAA,MAAA,EAAA,KAAA,KAAgC;AACvC,QAAIC,MAAM,CAANA,QAAAA,CAAJ,GAAIA,CAAJ,EAA0B;AACxB,YAAM,CAAA,GAAA,EAAA,KAAA,IAAeA,MAAM,CAANA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAAuBC,KAAD,IAAWC,MAAM,CAA5D,KAA4D,CAAvCF,CAArB;AACA,YAAMG,cAAc,GAAIC,GAAG,GAAJ,KAACA,GAAxB,GAAA;AACAP,MAAAA,eAAe,CAAfA,IAAAA,CAAAA,cAAAA;AACD;;AAED,QAAIG,MAAM,CAANA,QAAAA,CAAJ,GAAIA,CAAJ,EAA0B;AACxB,YAAMC,KAAK,GAAGD,MAAM,CAANA,KAAAA,CAAAA,KAAAA,EAAd,CAAcA,CAAd;AACA,YAAMK,UAAU,GAAGH,MAAM,CAAzB,KAAyB,CAAzB;AACAL,MAAAA,eAAe,CAAfA,IAAAA,CAAAA,UAAAA;AACD;;AAED,QAAIS,KAAK,KAAKV,OAAO,CAAPA,MAAAA,GAAd,CAAA,EAAkC;AAChC,YAAMW,aAAa,GAAGV,eAAe,CAAfA,MAAAA,CAAuB,CAAA,GAAA,EAAA,KAAA,KAAgBW,GAAG,GAAhE,KAAsBX,CAAtB;AAEAY,MAAAA,WAAW,GAAGF,aAAa,GAAGX,OAAO,CAArCa,MAAAA;AACA,aAAA,WAAA;AACD;;AACD,WAAA,CAAA;AArBkB,GAAA,EAApB,CAAoB,CAApB;AAwBA,SAAA,WAAA;AA3BK,CAAA","sourcesContent":["export const calculateAvarageRatings = (Ratings: {}[]) => {\n  const percentageValue: number[] = [];\n\n  const overAllPerc = Ratings.map(\n    ({ Value }: { Value: string }) => Value\n  ).reduce((avaragePerc, rating, index) => {\n    if (rating.includes('/')) {\n      const [all, ratio] = rating.split('/').map((value) => Number(value));\n      const calcPercentage = (all / ratio) * 100;\n      percentageValue.push(calcPercentage);\n    }\n\n    if (rating.includes('%')) {\n      const value = rating.match(/\\d+/)[0];\n      const percentage = Number(value);\n      percentageValue.push(percentage);\n    }\n\n    if (index === Ratings.length - 1) {\n      const sumPercentage = percentageValue.reduce((acc, value) => acc + value);\n\n      avaragePerc = sumPercentage / Ratings.length;\n      return avaragePerc;\n    }\n    return 0;\n  }, 0);\n\n  return overAllPerc;\n};\n"]},"metadata":{},"sourceType":"module"}