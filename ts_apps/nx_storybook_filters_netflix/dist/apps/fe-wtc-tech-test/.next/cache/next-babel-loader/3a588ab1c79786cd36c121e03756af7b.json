{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding-top: 7px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  padding: 10px 10px 0px 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 150px;\\n  height: 221px;\\n  border-radius: 10px;\\n  background-image: url(\", \");\\n  background-repeat: no-repeat;\\n  background-size: 100% 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 10px;\\n  width: 150px;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \", \";\\n  /* align-items: center; */\\n  min-width: 200px;\\n  min-height: 300px;\\n  border-radius: 20px;\\n  /* justify-content: center; */\\n  margin: 10px;\\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from '../IconsManagement/IconsStateManagement';\nimport { MoviesContext } from '../index';\nvar cardColorMapping = {\n  \"default\": '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nvar CardContainer = styled.div(_templateObject(), function (props) {\n  return props.color || cardColorMapping[\"default\"];\n});\nvar Poster = styled.div(_templateObject2());\nvar PosterImage = styled.div(_templateObject3(), function (props) {\n  return props.imgURL;\n});\nvar CardHeader = styled.div(_templateObject4());\nvar CardFooter = styled.div(_templateObject5());\n\nfunction Card() {\n  //const { Title, Poster: posterURL } = props;\n  var _useState = useState(cardColorMapping[\"default\"]),\n      backgroundColor = _useState[0],\n      setBgColor = _useState[1]; //register setColor once and dont re-render\n\n\n  var setColor = useCallback(function (_ref) {\n    var watch = _ref.watch,\n        favorite = _ref.favorite;\n\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping[\"default\"]);\n        break;\n\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n  return __jsx(MoviesContext.Consumer, null, function (contextArray) {\n    return contextArray.map(function (_ref2) {\n      var Title = _ref2.Title,\n          posterURL = _ref2.Poster,\n          averageRatings = _ref2.averageRatings;\n      return __jsx(CardContainer, {\n        color: backgroundColor,\n        key: Title\n      }, __jsx(CardHeader, null, __jsx(IconsStateManagement, {\n        callToActionCardColor: setColor\n      })), __jsx(Poster, null, __jsx(PosterImage, {\n        imgURL: posterURL\n      })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n        rating: averageRatings.avrRat\n      })));\n    });\n  });\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/Card.tsx"],"names":["React","useState","useCallback","styled","RatingStarComp","IconsStateManagement","MoviesContext","cardColorMapping","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","div","props","color","Poster","PosterImage","imgURL","CardHeader","CardFooter","Card","backgroundColor","setBgColor","setColor","watch","favorite","contextArray","map","Title","posterURL","averageRatings","avrRat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,oBAAP,MAAiC,yCAAjC;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA,IAAMC,gBAAgB,GAAG;AACvB,aAAS,MADc;AAEvBC,EAAAA,eAAe,EAAE,SAFM;AAGvBC,EAAAA,eAAe,EAAE,SAHM;AAIvBC,EAAAA,eAAe,EAAE;AAJM,CAAzB;AAOA,IAAMC,aAAa,GAAGR,MAAM,CAACS,GAAV,oBAKG,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,IAAeP,gBAAgB,WAA1C;AAAA,CALH,CAAnB;AAgBA,IAAMQ,MAAM,GAAGZ,MAAM,CAACS,GAAV,oBAAZ;AAKA,IAAMI,WAAW,GAAGb,MAAM,CAACS,GAAV,qBAMS,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACI,MAAjB;AAAA,CANT,CAAjB;AAUA,IAAMC,UAAU,GAAGf,MAAM,CAACS,GAAV,oBAAhB;AAMA,IAAMO,UAAU,GAAGhB,MAAM,CAACS,GAAV,oBAAhB;;AAWA,SAASQ,IAAT,GAAgB;AACd;AADc,kBAEwBnB,QAAQ,CAACM,gBAAgB,WAAjB,CAFhC;AAAA,MAEPc,eAFO;AAAA,MAEUC,UAFV,iBAId;;;AACA,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,gBAAyB;AAAA,QAAtBsB,KAAsB,QAAtBA,KAAsB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AACpD,YAAQ,IAAR;AACE,WAAK,CAACD,KAAD,IAAU,CAACC,QAAhB;AACEH,QAAAA,UAAU,CAACf,gBAAgB,WAAjB,CAAV;AACA;;AACF,WAAKiB,KAAK,IAAI,CAACC,QAAf;AACEH,QAAAA,UAAU,CAACf,gBAAgB,CAACG,eAAlB,CAAV;AACA;;AACF,WAAK,CAACc,KAAD,IAAUC,QAAf;AACEH,QAAAA,UAAU,CAACf,gBAAgB,CAACC,eAAlB,CAAV;AACA;;AACF,WAAKgB,KAAK,IAAIC,QAAd;AACEH,QAAAA,UAAU,CAACf,gBAAgB,CAACE,eAAlB,CAAV;AACA;;AACF;AACE;AAdJ;AAgBD,GAjB2B,EAiBzB,EAjByB,CAA5B;AAmBA,SACE,MAAC,aAAD,CAAe,QAAf,QACG,UAACiB,YAAD;AAAA,WACCA,YAAY,CAACC,GAAb,CAAiB;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,UAAkBC,SAAlB,SAAUd,MAAV;AAAA,UAA6Be,cAA7B,SAA6BA,cAA7B;AAAA,aACf,MAAC,aAAD;AAAe,QAAA,KAAK,EAAET,eAAtB;AAAuC,QAAA,GAAG,EAAEO;AAA5C,SACE,MAAC,UAAD,QACE,MAAC,oBAAD;AAAsB,QAAA,qBAAqB,EAAEL;AAA7C,QADF,CADF,EAIE,MAAC,MAAD,QACE,MAAC,WAAD;AAAa,QAAA,MAAM,EAAEM;AAArB,QADF,CAJF,EAOE,MAAC,UAAD,QAEE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEC,cAAc,CAACC;AAAvC,QAFF,CAPF,CADe;AAAA,KAAjB,CADD;AAAA,GADH,CADF;AAoBD;;AAED,eAAeX,IAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from '../IconsManagement/IconsStateManagement';\nimport { MoviesContext } from '../index';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  imgURL: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\n\ninterface ContextProps {\n  Title: string;\n  Poster: string;\n  averageRatings: { avrRat: number };\n}\n\nfunction Card() {\n  //const { Title, Poster: posterURL } = props;\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  //register setColor once and dont re-render\n  const setColor = useCallback(({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  return (\n    <MoviesContext.Consumer>\n      {(contextArray: ContextProps[]) =>\n        contextArray.map(({ Title, Poster: posterURL, averageRatings }) => (\n          <CardContainer color={backgroundColor} key={Title}>\n            <CardHeader>\n              <IconsStateManagement callToActionCardColor={setColor} />\n            </CardHeader>\n            <Poster>\n              <PosterImage imgURL={posterURL} />\n            </Poster>\n            <CardFooter>\n              {/*has to be between 0-100 %*/}\n              <RatingStarComp rating={averageRatings.avrRat} />\n            </CardFooter>\n          </CardContainer>\n        ))\n      }\n    </MoviesContext.Consumer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}