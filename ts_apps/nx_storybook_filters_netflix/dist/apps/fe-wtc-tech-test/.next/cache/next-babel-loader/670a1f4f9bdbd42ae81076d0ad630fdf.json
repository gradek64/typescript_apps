{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\nconst all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length);\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst callToAction = () => {};\n\nconst CheckBox = wrapperIconHOC(CheckBoxOutlineBlankOutlinedIcon, CheckBoxOutlinedIcon);\n\nfunction FiltersGroup() {\n  const {\n    movies\n  } = useContext(MoviesContext);\n  /* const { Watched, Saved, Title, Poster: PosterURL, Ratings } = [...movies];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  }; */\n\n  console.log('movies', movies);\n  const watched = Object.entries({\n    YES: movies.filter(({\n      Watched\n    }) => Watched === 'True').length,\n    NO: movies.filter(({\n      Watched\n    }) => Watched === 'False').length\n  });\n  const type = Object.entries({\n    MOVIE: movies.filter(({\n      Type\n    }) => Type === 'movie').length,\n    SERIES: movies.filter(({\n      Type\n    }) => Type === 'series').length\n  });\n  const displayed = watched.slice(0, 5);\n  const hidden = watched.slice(5, all.length);\n  const FilterLabel = {\n    watched,\n    type\n  };\n  const ss = false;\n  return __jsx(React.Fragment, null, ss && '...loadin', __jsx(FilterContainer, null, ['watched'].map(title => __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true,\n    title: title\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(CheckBox, {\n    callToAction: callToAction,\n    icon: \"checkbox\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(Accordion, {\n    title: '...more',\n    directional: true,\n    shevron: false\n  }, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(CheckBox, {\n    callToAction: callToAction,\n    icon: \"checkbox\"\n  }), `${key}(${value})`)))))));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","useContext","CheckBoxOutlineBlankOutlinedIcon","CheckBoxOutlinedIcon","Accordion","generateFilters","styled","wrapperIconHOC","MoviesContext","all","Object","entries","displayed1","slice","hidden1","length","FilterContainer","div","callToAction","CheckBox","FiltersGroup","movies","console","log","watched","YES","filter","Watched","NO","type","MOVIE","Type","SERIES","displayed","hidden","FilterLabel","ss","map","title","key","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\n\nconst all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length);\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst callToAction = () => {};\n\nconst CheckBox = wrapperIconHOC(\n  CheckBoxOutlineBlankOutlinedIcon,\n  CheckBoxOutlinedIcon\n);\n\nfunction FiltersGroup() {\n  const { movies } = useContext(MoviesContext);\n  /* const { Watched, Saved, Title, Poster: PosterURL, Ratings } = [...movies];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  }; */\n  console.log('movies', movies);\n  const watched = Object.entries({\n    YES: movies.filter(({ Watched }) => Watched === 'True').length,\n    NO: movies.filter(({ Watched }) => Watched === 'False').length,\n  });\n\n  const type = Object.entries({\n    MOVIE: movies.filter(({ Type }) => Type === 'movie').length,\n    SERIES: movies.filter(({ Type }) => Type === 'series').length,\n  });\n\n  const displayed = watched.slice(0, 5);\n  const hidden = watched.slice(5, all.length);\n\n  const FilterLabel = {\n    watched,\n    type,\n  };\n\n  const ss = false;\n  return (\n    <>\n      {ss && '...loadin'}\n      <FilterContainer>\n        {['watched'].map((title) => (\n          <div className=\"accordion\">\n            <Accordion open shevron={false} clickDisable={true} title={title}>\n              <div>\n                {displayed.map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </div>\n            </Accordion>\n            {hidden.length > 0 && (\n              <Accordion title={'...more'} directional={true} shevron={false}>\n                {hidden.map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </Accordion>\n            )}\n          </div>\n        ))}\n      </FilterContainer>\n    </>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}