{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\n\nconst wrapperComponentMethod = (Icon1, Icon2) => ({\n  callToAction,\n  icon,\n  obj\n}) => {\n  const {\n    0: iconVisiblity,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: colorState,\n    1: setColorState\n  } = useState(obj);\n\n  const iconCTA = () => {\n    setVisible(!iconVisiblity);\n    setColorState(prevState => {\n      return _objectSpread({}, prevState, {\n        [icon]: !iconVisiblity\n      });\n    });\n    callToAction(_objectSpread({}, colorState, {\n      [icon]: !iconVisiblity\n    }));\n  };\n\n  return __jsx(IconContainer, {\n    onClick: iconCTA\n  }, !iconVisiblity && __jsx(Icon1, null), iconVisiblity && __jsx(Icon2, null));\n};\n\nexport default wrapperComponentMethod;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/IconCTA/IconAction.tsx"],"names":["React","useState","styled","IconContainer","div","wrapperComponentMethod","Icon1","Icon2","callToAction","icon","obj","iconVisiblity","setVisible","colorState","setColorState","iconCTA","prevState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;CAAjC;;AAQA,MAAMC,sBAAsB,GAAG,CAACC,KAAD,EAAkBC,KAAlB,KAAsC,CAAC;AACpEC,EAAAA,YADoE;AAEpEC,EAAAA,IAFoE;AAGpEC,EAAAA;AAHoE,CAAD,KAIrD;AACd,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAACS,GAAD,CAA5C;;AACA,QAAMK,OAAO,GAAG,MAAM;AACpBH,IAAAA,UAAU,CAAC,CAACD,aAAF,CAAV;AACAG,IAAAA,aAAa,CAAEE,SAAD,IAAe;AAC3B,+BAAYA,SAAZ;AAAuB,SAACP,IAAD,GAAQ,CAACE;AAAhC;AACD,KAFY,CAAb;AAGAH,IAAAA,YAAY,mBAAMK,UAAN;AAAkB,OAACJ,IAAD,GAAQ,CAACE;AAA3B,OAAZ;AACD,GAND;;AAOA,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEI;AAAxB,KACG,CAACJ,aAAD,IAAkB,MAAC,KAAD,OADrB,EAEGA,aAAa,IAAI,MAAC,KAAD,OAFpB,CADF;AAMD,CApBD;;AAsBA,eAAeN,sBAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\ninterface PropsInt {\n  callToAction: (state: object) => void;\n  icon: string;\n  obj: { watch: boolean; favorite: boolean };\n}\nconst wrapperComponentMethod = (Icon1: React.FC, Icon2: React.FC) => ({\n  callToAction,\n  icon,\n  obj,\n}: PropsInt) => {\n  const [iconVisiblity, setVisible] = useState(false);\n  const [colorState, setColorState] = useState(obj);\n  const iconCTA = () => {\n    setVisible(!iconVisiblity);\n    setColorState((prevState) => {\n      return { ...prevState, [icon]: !iconVisiblity };\n    });\n    callToAction({ ...colorState, [icon]: !iconVisiblity });\n  };\n  return (\n    <IconContainer onClick={iconCTA}>\n      {!iconVisiblity && <Icon1 />}\n      {iconVisiblity && <Icon2 />}\n    </IconContainer>\n  );\n};\n\nexport default wrapperComponentMethod;\n"]},"metadata":{},"sourceType":"module"}