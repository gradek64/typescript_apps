{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'; //custom\n\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nvar VisibilityWatchedIcon = wrapperIconHOC(VisibilityIcon, VisibilityOffOutlinedIcon);\nvar VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n/*---------*/\n\nvar IconsStateManagement = function IconsStateManagement(_ref) {\n  var callToActionCardColor = _ref.callToActionCardColor,\n      watch = _ref.watch,\n      favorite = _ref.favorite;\n  var prevState;\n  var calculatedState;\n\n  var callToAction = function callToAction(iconState) {\n    var watch = _objectSpread({\n      watch: false\n    }, iconState);\n\n    var favorite = _objectSpread({\n      favorite: false\n    }, iconState);\n\n    calculatedState = _objectSpread({}, watch, {}, favorite);\n\n    if (prevState) {\n      calculatedState = _objectSpread({}, prevState, {}, iconState);\n    }\n\n    prevState = calculatedState;\n    callToActionCardColor(calculatedState);\n  };\n\n  var ss = {\n    watch: false,\n    favorite: false\n  };\n  callToActionCardColor(ss);\n  return __jsx(React.Fragment, null, __jsx(VisibilityWatchedIcon, {\n    callToAction: callToAction,\n    icon: \"watch\",\n    isActive: ss.watch\n  }), __jsx(VisibilitySavedIcon, {\n    callToAction: callToAction,\n    icon: \"favorite\",\n    isActive: ss.favorite\n  }));\n};\n\nexport default React.memo(IconsStateManagement);","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/IconsManagement/IconsStateManagement.tsx"],"names":["React","VisibilityIcon","VisibilityOffOutlinedIcon","FavoriteIcon","FavoriteBorderIcon","wrapperIconHOC","VisibilityWatchedIcon","VisibilitySavedIcon","IconsStateManagement","callToActionCardColor","watch","favorite","prevState","calculatedState","callToAction","iconState","ss","memo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,IAAMC,qBAAqB,GAAGD,cAAc,CAC1CJ,cAD0C,EAE1CC,yBAF0C,CAA5C;AAIA,IAAMK,mBAAmB,GAAGF,cAAc,CAACD,kBAAD,EAAqBD,YAArB,CAA1C;AAEA;;AAYA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,OAIf;AAAA,MAHZC,qBAGY,QAHZA,qBAGY;AAAA,MAFZC,KAEY,QAFZA,KAEY;AAAA,MADZC,QACY,QADZA,QACY;AACZ,MAAIC,SAAJ;AACA,MAAIC,eAAJ;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAuB;AAC1C,QAAML,KAAK;AAAKA,MAAAA,KAAK,EAAE;AAAZ,OAAsBK,SAAtB,CAAX;;AACA,QAAMJ,QAAQ;AAAKA,MAAAA,QAAQ,EAAE;AAAf,OAAyBI,SAAzB,CAAd;;AACAF,IAAAA,eAAe,qBAAQH,KAAR,MAAkBC,QAAlB,CAAf;;AACA,QAAIC,SAAJ,EAAe;AACbC,MAAAA,eAAe,qBAAQD,SAAR,MAAsBG,SAAtB,CAAf;AACD;;AACDH,IAAAA,SAAS,GAAGC,eAAZ;AACAJ,IAAAA,qBAAqB,CAACI,eAAD,CAArB;AACD,GATD;;AAUA,MAAMG,EAAE,GAAG;AAAEN,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAX;AACAF,EAAAA,qBAAqB,CAACO,EAAD,CAArB;AAEA,SACE,4BACE,MAAC,qBAAD;AACE,IAAA,YAAY,EAAEF,YADhB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEE,EAAE,CAACN;AAHf,IADF,EAME,MAAC,mBAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEE,EAAE,CAACL;AAHf,IANF,CADF;AAcD,CAlCD;;AAoCA,eAAeX,KAAK,CAACiB,IAAN,CAAWT,oBAAX,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//custom\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nconst VisibilityWatchedIcon = wrapperIconHOC(\n  VisibilityIcon,\n  VisibilityOffOutlinedIcon\n);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n\n/*---------*/\ninterface IconStateInt {\n  watch: boolean;\n  favorite: boolean;\n}\n\ninterface PropsI {\n  callToActionCardColor: (state: object) => void;\n  watch: boolean;\n  favorite: boolean;\n}\n\nconst IconsStateManagement = ({\n  callToActionCardColor,\n  watch,\n  favorite,\n}: PropsI) => {\n  let prevState: IconStateInt;\n  let calculatedState: IconStateInt;\n  const callToAction = (iconState: object) => {\n    const watch = { watch: false, ...iconState };\n    const favorite = { favorite: false, ...iconState };\n    calculatedState = { ...watch, ...favorite };\n    if (prevState) {\n      calculatedState = { ...prevState, ...iconState };\n    }\n    prevState = calculatedState;\n    callToActionCardColor(calculatedState);\n  };\n  const ss = { watch: false, favorite: false };\n  callToActionCardColor(ss);\n\n  return (\n    <>\n      <VisibilityWatchedIcon\n        callToAction={callToAction}\n        icon=\"watch\"\n        isActive={ss.watch}\n      />\n      <VisibilitySavedIcon\n        callToAction={callToAction}\n        icon=\"favorite\"\n        isActive={ss.favorite}\n      />\n    </>\n  );\n};\n\nexport default React.memo(IconsStateManagement);\n"]},"metadata":{},"sourceType":"module"}