{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useMemo } from 'react';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport styled from 'styled-components'; //styles\n\nconst AccordionHeader = styled.button`\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  padding: 10px;\n  justify-content: space-between;\n  border: none;\n  &.active {\n    background-color: orange;\n  }\n`;\nconst AccordionContent = styled.div`\n  overflow: hidden;\n  width: 100%;\n  transition: height 0.6s ease;\n`;\nconst ChevronIcon = styled.span`\n  transition: transform 0.6s ease;\n  &.rotate {\n    transform: rotate(90deg);\n  }\n`;\n\nfunction Accordion(props) {\n  var _refContent$current, _refContent$current2;\n\n  const {\n    children,\n    calculateHeight,\n    name,\n    nestedAccordion = false\n  } = props;\n  const refContent = useRef(null);\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState('');\n  const elementHeight = (_refContent$current = refContent.current) === null || _refContent$current === void 0 ? void 0 : _refContent$current.scrollHeight; //if (!isNaN(elementHeight)) {\n\n  useMemo(() => calculateHeight({\n    name: 'greg',\n    value: elementHeight\n  }), [elementHeight, calculateHeight]); //}\n\n  /*  useCallback(() => {\n    console.log('outside');\n    if (!nestedAccordion) {\n      console.log('inside');\n       calculateHeight({ name, value: elementHeight });\n    }\n  }, [nestedAccordion]); */\n\n  const openAccordion = () => {\n    if (nestedAccordion) {\n      calculateHeight({\n        name,\n        value: elementHeight\n      });\n    }\n\n    setOpen(!isOpen ? 'active' : '');\n  };\n\n  return __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(AccordionHeader, {\n    className: `accordionHeader ${isOpen}`,\n    onClick: openAccordion\n  }, __jsx(\"span\", {\n    className: \"accordionTitle\"\n  }, \"AccordionTitle\"), __jsx(ChevronIcon, {\n    className: !!isOpen && 'rotate'\n  }, __jsx(ChevronRightIcon, null))), __jsx(AccordionContent, {\n    ref: refContent,\n    style: {\n      height: `${isOpen !== '' ? Number((_refContent$current2 = refContent.current) === null || _refContent$current2 === void 0 ? void 0 : _refContent$current2.scrollHeight) : 0}px`\n    }\n  }, children));\n}\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Accordion/Accordion.tsx"],"names":["React","useRef","useState","useMemo","ChevronRightIcon","styled","AccordionHeader","button","AccordionContent","div","ChevronIcon","span","Accordion","props","children","calculateHeight","name","nestedAccordion","refContent","isOpen","setOpen","elementHeight","current","scrollHeight","value","openAccordion","height","Number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,OAAlC,QAA8D,OAA9D;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,MAAO;;;;;;;;;;;CAAtC;AAaA,MAAMC,gBAAgB,GAAGH,MAAM,CAACI,GAAI;;;;CAApC;AAMA,MAAMC,WAAW,GAAGL,MAAM,CAACM,IAAK;;;;;CAAhC;;AAcA,SAASC,SAAT,CAAmBC,KAAnB,EAAkC;AAAA;;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,eAAZ;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA,eAAe,GAAG;AAArD,MAA+DJ,KAArE;AAEA,QAAMK,UAAU,GAAGjB,MAAM,CAAiB,IAAjB,CAAzB;AAEA,QAAM;AAAA,OAACkB,MAAD;AAAA,OAASC;AAAT,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMmB,aAAa,0BAAGH,UAAU,CAACI,OAAd,wDAAG,oBAAoBC,YAA1C,CAPgC,CAQhC;;AACApB,EAAAA,OAAO,CAAC,MAAMY,eAAe,CAAC;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBQ,IAAAA,KAAK,EAAEH;AAAvB,GAAD,CAAtB,EAAgE,CACrEA,aADqE,EAErEN,eAFqE,CAAhE,CAAP,CATgC,CAahC;;AACA;;;;;;;;AASA,QAAMU,aAAa,GAAG,MAAM;AAC1B,QAAIR,eAAJ,EAAqB;AACnBF,MAAAA,eAAe,CAAC;AAAEC,QAAAA,IAAF;AAAQQ,QAAAA,KAAK,EAAEH;AAAf,OAAD,CAAf;AACD;;AACDD,IAAAA,OAAO,CAAC,CAACD,MAAD,GAAU,QAAV,GAAqB,EAAtB,CAAP;AACD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,eAAD;AACE,IAAA,SAAS,EAAG,mBAAkBA,MAAO,EADvC;AAEE,IAAA,OAAO,EAAEM;AAFX,KAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,sBAJF,EAKE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACN,MAAF,IAAY;AAApC,KACE,MAAC,gBAAD,OADF,CALF,CADF,EAUE,MAAC,gBAAD;AACE,IAAA,GAAG,EAAED,UADP;AAEE,IAAA,KAAK,EAAE;AACLQ,MAAAA,MAAM,EAAG,GACPP,MAAM,KAAK,EAAX,GAAgBQ,MAAM,yBAACT,UAAU,CAACI,OAAZ,yDAAC,qBAAoBC,YAArB,CAAtB,GAA2D,CAC5D;AAHI;AAFT,KAQGT,QARH,CAVF,CADF;AAuBD;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useRef, useState, useMemo, useCallback } from 'react';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport styled from 'styled-components';\n\n//styles\nconst AccordionHeader = styled.button`\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  padding: 10px;\n  justify-content: space-between;\n  border: none;\n  &.active {\n    background-color: orange;\n  }\n`;\n\nconst AccordionContent = styled.div`\n  overflow: hidden;\n  width: 100%;\n  transition: height 0.6s ease;\n`;\n\nconst ChevronIcon = styled.span`\n  transition: transform 0.6s ease;\n  &.rotate {\n    transform: rotate(90deg);\n  }\n`;\n\ninterface PropsI {\n  children: React.ReactNode;\n  forceHeight?: number;\n  name: string;\n  nestedAccordion?: boolean;\n  calculateHeight: ({ name: string, value: number }) => void;\n}\nfunction Accordion(props: PropsI) {\n  const { children, calculateHeight, name, nestedAccordion = false } = props;\n\n  const refContent = useRef<HTMLDivElement>(null);\n\n  const [isOpen, setOpen] = useState('');\n\n  const elementHeight = refContent.current?.scrollHeight;\n  //if (!isNaN(elementHeight)) {\n  useMemo(() => calculateHeight({ name: 'greg', value: elementHeight }), [\n    elementHeight,\n    calculateHeight,\n  ]);\n  //}\n  /*  useCallback(() => {\n    console.log('outside');\n    if (!nestedAccordion) {\n      console.log('inside');\n\n      calculateHeight({ name, value: elementHeight });\n    }\n  }, [nestedAccordion]); */\n\n  const openAccordion = () => {\n    if (nestedAccordion) {\n      calculateHeight({ name, value: elementHeight });\n    }\n    setOpen(!isOpen ? 'active' : '');\n  };\n\n  return (\n    <div className=\"accordion\">\n      <AccordionHeader\n        className={`accordionHeader ${isOpen}`}\n        onClick={openAccordion}\n      >\n        <span className=\"accordionTitle\">AccordionTitle</span>\n        <ChevronIcon className={!!isOpen && 'rotate'}>\n          <ChevronRightIcon />\n        </ChevronIcon>\n      </AccordionHeader>\n      <AccordionContent\n        ref={refContent}\n        style={{\n          height: `${\n            isOpen !== '' ? Number(refContent.current?.scrollHeight) : 0\n          }px`,\n        }}\n      >\n        {children}\n      </AccordionContent>\n    </div>\n  );\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}