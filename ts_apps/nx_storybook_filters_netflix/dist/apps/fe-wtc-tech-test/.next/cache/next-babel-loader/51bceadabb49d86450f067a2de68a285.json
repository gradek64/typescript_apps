{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding-top: 7px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  padding: 10px 10px 0px 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 150px;\\n  height: 221px;\\n  border-radius: 10px;\\n  background-image: url(\", \");\\n  background-repeat: no-repeat;\\n  background-size: 100% 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 10px;\\n  width: 150px;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \", \";\\n  /* align-items: center; */\\n  max-width: 200px;\\n  max-height: 300px;\\n  border-radius: 20px;\\n  /* justify-content: center; */\\n  margin: 10px;\\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\nvar cardColorMapping = {\n  \"default\": '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nvar CardContainer = styled.div(_templateObject(), function (props) {\n  return props.color || cardColorMapping[\"default\"];\n});\nvar Poster = styled.div(_templateObject2());\nvar PosterImage = styled.div(_templateObject3(), function (props) {\n  return props.imgURL;\n});\nvar CardHeader = styled.div(_templateObject4());\nvar CardFooter = styled.div(_templateObject5());\n\nfunction Card(_ref) {\n  var cardId = _ref.cardId;\n\n  var _useState = useState(cardColorMapping[\"default\"]),\n      backgroundColor = _useState[0],\n      setBgColor = _useState[1]; //register setColor once and dont re-render\n  //const setColor = useCallback(({ watch, favorite }) => {\n\n\n  var setColor = function setColor(_ref2) {\n    var watch = _ref2.watch,\n        favorite = _ref2.favorite;\n\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping[\"default\"]);\n        break;\n\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n\n      default:\n        break;\n    }\n  }; //}, []);\n  //set initial color \n\n\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies;\n\n  var _movies$cardId = movies[cardId],\n      Watched = _movies$cardId.Watched,\n      Saved = _movies$cardId.Saved,\n      Title = _movies$cardId.Title,\n      PosterURL = _movies$cardId.Poster,\n      Ratings = _movies$cardId.Ratings;\n  var movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase())\n  };\n  useEffect(function () {\n    setColor(_objectSpread({}, movieStatus)); // api.data.count from api after update store\n  });\n  return __jsx(CardContainer, {\n    color: backgroundColor,\n    key: Title\n  }, __jsx(CardHeader, null, __jsx(IconsStateManagement, _extends({\n    callToActionCardColor: setColor\n  }, movieStatus))), __jsx(Poster, null, __jsx(PosterImage, {\n    imgURL: PosterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: calculateAvarageRatings(Ratings)\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Card/Card.tsx"],"names":["React","useState","useEffect","useContext","styled","RatingStarComp","IconsStateManagement","MoviesContext","calculateAvarageRatings","cardColorMapping","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","div","props","color","Poster","PosterImage","imgURL","CardHeader","CardFooter","Card","cardId","backgroundColor","setBgColor","setColor","watch","favorite","movies","Watched","Saved","Title","PosterURL","Ratings","movieStatus","JSON","parse","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  max-width: 200px;\n  max-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  imgURL: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\ninterface Props {\n  cardId: number;\n}\nfunction Card({ cardId }: Props) {\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  //register setColor once and dont re-render\n  //const setColor = useCallback(({ watch, favorite }) => {\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  };\n  //}, []);\n  //set initial color \n\n\n\n\n  const { movies } = useContext(MoviesContext);\n  const { Watched, Saved, Title, Poster: PosterURL, Ratings } = movies[cardId];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  };\n\n  useEffect(() => {\n    setColor({ ...movieStatus }) // api.data.count from api after update store\n  })\n\n\n  return (\n    <CardContainer color={backgroundColor} key={Title}>\n      <CardHeader>\n        <IconsStateManagement\n          callToActionCardColor={setColor}\n          {...movieStatus}\n        />\n      </CardHeader>\n      <Poster>\n        <PosterImage imgURL={PosterURL} />\n      </Poster>\n      <CardFooter>\n        <RatingStarComp rating={calculateAvarageRatings(Ratings)} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}