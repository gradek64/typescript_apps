{"ast":null,"code":"const generateFilters = () => {\n  const actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  const actors2 = 'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n  const actors3 = 'Harrison Ford';\n  const actors4 = 'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed'; //first combine actors results\n\n  const allActors = [...actors.split(','), ...actors2.split(','), ...actors3.split(','), ...actors4.split(',')]; //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the cod\n\n  function findDuplicate(arra1) {\n    const object = {};\n    arra1.forEach(function (item) {\n      const trimStirng = item.trim();\n      if (!object[trimStirng]) object[trimStirng] = 0;\n      object[trimStirng] += 1;\n    });\n    return object;\n  }\n\n  return findDuplicate(allActors);\n};\n\nexport { generateFilters };","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/generateFilters.tsx"],"names":["generateFilters","actors","actors2","actors3","actors4","allActors","object","arra1","trimStirng","item","findDuplicate"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAM;AAC5B,QAAMC,MAAM,GAAZ,6DAAA;AACA,QAAMC,OAAO,GAAb,4EAAA;AAEA,QAAMC,OAAO,GAAb,eAAA;AACA,QAAMC,OAAO,GALe,4EAK5B,CAL4B,CAQ5B;;AAEA,QAAMC,SAAS,GAAG,CAChB,GAAGJ,MAAM,CAANA,KAAAA,CADa,GACbA,CADa,EAEhB,GAAGC,OAAO,CAAPA,KAAAA,CAFa,GAEbA,CAFa,EAGhB,GAAGC,OAAO,CAAPA,KAAAA,CAHa,GAGbA,CAHa,EAIhB,GAAGC,OAAO,CAAPA,KAAAA,CAduB,GAcvBA,CAJa,CAAlB,CAV4B,CAiB5B;AACA;;AAEA,WAAA,aAAA,CAAA,KAAA,EAAwC;AACtC,UAAME,MAAM,GAAZ,EAAA;AACAC,IAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAwB;AACpC,YAAMC,UAAU,GAAGC,IAAI,CAAvB,IAAmBA,EAAnB;AACA,UAAI,CAACH,MAAM,CAAX,UAAW,CAAX,EAAyBA,MAAM,CAANA,UAAM,CAANA,GAAAA,CAAAA;AACzBA,MAAAA,MAAM,CAANA,UAAM,CAANA,IAAAA,CAAAA;AAHFC,KAAAA;AAKA,WAAA,MAAA;AACD;;AAED,SAAOG,aAAa,CAApB,SAAoB,CAApB;AA9BF,CAAA;;AAiCA,SAAA,eAAA","sourcesContent":["const generateFilters = () => {\n  const actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  const actors2 =\n    'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n  const actors3 = 'Harrison Ford';\n  const actors4 =\n    'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n\n  //first combine actors results\n\n  const allActors = [\n    ...actors.split(','),\n    ...actors2.split(','),\n    ...actors3.split(','),\n    ...actors4.split(','),\n  ];\n\n  //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the cod\n\n  function findDuplicate(arra1: string[]) {\n    const object = {};\n    arra1.forEach(function (item: string) {\n      const trimStirng = item.trim();\n      if (!object[trimStirng]) object[trimStirng] = 0;\n      object[trimStirng] += 1;\n    });\n    return object;\n  }\n\n  return findDuplicate(allActors);\n};\n\nexport { generateFilters };\n"]},"metadata":{},"sourceType":"module"}