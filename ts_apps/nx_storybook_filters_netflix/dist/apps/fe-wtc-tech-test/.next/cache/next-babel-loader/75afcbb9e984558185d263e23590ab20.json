{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // custom\n\n\nimport { ENV_MOVIES } from './utils/ENV';\n\nvar apiService = function apiService() {\n  var TIMEOUT = 30000;\n\n  var errorInterceptor = function errorInterceptor(err) {\n    switch (err.status) {\n      case -1:\n        if (err.xhrStatus === 'abort') {\n          if (!err.config) {\n            err.config = {\n              timeout: TIMEOUT\n            };\n          }\n\n          console.warn(\"REQUEST CANCELED (config timeout: \".concat(err.config.timeout, \"ms)\"));\n        }\n\n        break;\n\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n\n      default:\n    }\n\n    throw err;\n  };\n\n  var responseMiddleware = function responseMiddleware(res) {\n    return res;\n  };\n\n  var requestPath = function requestPath(path, params) {\n    //for testing work with 2 BASE_URLs\n    var PATH = ENV_MOVIES;\n\n    if (params && Object.keys(params).length > 1) {\n      var query = '';\n\n      for (var keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n\n      console.log('requestPath1', PATH + path); //remove last '&' symbol\n\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    } //console.log('requestPath2', PATH + path);\n\n\n    return PATH + path;\n  };\n\n  var requestInterceptor = function requestInterceptor(serviceConfig, customRequestHeaders) {\n    var requestHeaders = {\n      'Content-Type': 'application/json'\n    };\n    var request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: _objectSpread({}, requestHeaders, {}, customRequestHeaders)\n    }; //request with body object not empty {}\n\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body)\n      });\n    } //console.log('request with headers', request);\n\n\n    return request;\n  };\n\n  var sendRequest = function sendRequest(serviceConfig, customRequestHeaders) {\n    var response, res;\n    return _regeneratorRuntime.async(function sendRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(requestPath(serviceConfig.path, serviceConfig.params), requestInterceptor(serviceConfig, customRequestHeaders)));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            res = _context.sent;\n            return _context.abrupt(\"return\", responseMiddleware(res));\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('it has errored');\n            return _context.abrupt(\"return\", errorInterceptor(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var get = function get(path) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$params = _ref.params,\n        params = _ref$params === void 0 ? {} : _ref$params;\n\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$customRequestHe = _ref2.customRequestHeaders,\n        customRequestHeaders = _ref2$customRequestHe === void 0 ? {} : _ref2$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'GET',\n        path: path,\n        params: params\n      }, customRequestHeaders)\n    );\n  };\n\n  var post = function post(path, _ref3) {\n    var body = _ref3.body;\n\n    var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref4$customRequestHe = _ref4.customRequestHeaders,\n        customRequestHeaders = _ref4$customRequestHe === void 0 ? {} : _ref4$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'POST',\n        path: path,\n        body: body\n      }, customRequestHeaders)\n    );\n  };\n\n  var put = function put(path, _ref5) {\n    var body = _ref5.body;\n\n    var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref6$customRequestHe = _ref6.customRequestHeaders,\n        customRequestHeaders = _ref6$customRequestHe === void 0 ? {} : _ref6$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'PUT',\n        path: path,\n        body: body\n      }, customRequestHeaders)\n    );\n  };\n\n  var patch = function patch(path, _ref7) {\n    var body = _ref7.body;\n\n    var _ref8 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref8$customRequestHe = _ref8.customRequestHeaders,\n        customRequestHeaders = _ref8$customRequestHe === void 0 ? {} : _ref8$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'PATCH',\n        path: path,\n        body: body\n      }, customRequestHeaders)\n    );\n  };\n\n  var del = function del(path, _ref9) {\n    var params = _ref9.params;\n\n    var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref10$customRequestH = _ref10.customRequestHeaders,\n        customRequestHeaders = _ref10$customRequestH === void 0 ? {} : _ref10$customRequestH;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'DELETE',\n        path: path,\n        params: params\n      }, customRequestHeaders)\n    );\n  };\n\n  return {\n    get: get,\n    post: post,\n    put: put,\n    patch: patch,\n    \"delete\": del\n  };\n};\n\nexport default apiService();","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/services/apiService.ts"],"names":["apiService","TIMEOUT","errorInterceptor","err","timeout","console","responseMiddleware","requestPath","PATH","params","Object","query","keys","requestInterceptor","requestHeaders","request","method","serviceConfig","cache","credentials","headers","body","JSON","sendRequest","response","fetch","res","get","customRequestHeaders","path","post","put","patch","del"],"mappings":"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","sourcesContent":["// custom\nimport { ENV_MOVIES } from './utils/ENV';\n\nconst apiService = () => {\n  const TIMEOUT = 30000;\n\n  const errorInterceptor = (err) => {\n    switch (err.status) {\n      case -1:\n        if (err.xhrStatus === 'abort') {\n          if (!err.config) {\n            err.config = { timeout: TIMEOUT };\n          }\n          console.warn(\n            `REQUEST CANCELED (config timeout: ${err.config.timeout}ms)`\n          );\n        }\n        break;\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n      default:\n    }\n    throw err;\n  };\n\n  const responseMiddleware = (res) => res;\n\n  const requestPath = (path: string, params?: Record<string, string>) => {\n    //for testing work with 2 BASE_URLs\n    const PATH = ENV_MOVIES;\n    if (params && Object.keys(params).length > 1) {\n      let query = '';\n\n      for (const keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n      console.log('requestPath1', PATH + path);\n      //remove last '&' symbol\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    }\n\n    //console.log('requestPath2', PATH + path);\n\n    return PATH + path;\n  };\n\n  const requestInterceptor = (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Record<string, string>;\n      body?: Record<string, string>;\n    },\n    customRequestHeaders: Record<string, string>\n  ) => {\n    const requestHeaders = {\n      'Content-Type': 'application/json',\n    };\n\n    let request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        ...requestHeaders,\n        ...customRequestHeaders,\n      },\n    };\n\n    //request with body object not empty {}\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body),\n      });\n    }\n    //console.log('request with headers', request);\n    return request as RequestInit;\n  };\n\n  const sendRequest = async (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Record<string, string>;\n      body?: Record<string, string>;\n    },\n    customRequestHeaders: Record<string, string>\n  ): Promise<{ [key: string]: any }[]> => {\n    try {\n      const response = await fetch(\n        requestPath(serviceConfig.path, serviceConfig.params),\n        requestInterceptor(serviceConfig, customRequestHeaders)\n      );\n      const res = await response.json();\n      return responseMiddleware(res);\n    } catch (err) {\n      console.log('it has errored');\n      return errorInterceptor(err);\n    }\n  };\n\n  const get = (\n    path: string,\n    { params = {} } = {}, //this syntax means optional with defualt {}\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'GET', path, params }, customRequestHeaders);\n\n  const post = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'POST', path, body }, customRequestHeaders);\n\n  const put = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'PUT', path, body }, customRequestHeaders);\n\n  const patch = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'PATCH', path, body }, customRequestHeaders);\n\n  const del = (\n    path: string,\n    { params }: { params?: Record<string, string> },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'DELETE', path, params }, customRequestHeaders);\n\n  return {\n    get,\n    post,\n    put,\n    patch,\n    delete: del,\n  };\n};\n\nexport default apiService();\n"]},"metadata":{},"sourceType":"module"}