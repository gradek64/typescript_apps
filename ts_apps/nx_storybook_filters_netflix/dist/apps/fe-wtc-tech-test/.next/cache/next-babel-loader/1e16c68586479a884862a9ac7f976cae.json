{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\nvar Movies = styled.div(_templateObject());\nexport var MoviesContext = React.createContext([{}]);\nvar Provider = MoviesContext.Provider;\n\nvar Home = function Home() {\n  var _useState = useState(true),\n      loading = _useState[0],\n      isLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      movies = _useState2[0],\n      getMovies = _useState2[1];\n\n  var reduceData = useCallback(function (response) {\n    // const averageRatingsAll: { avrRat: number }[] = [];\n    //let averageRatings: { avrRat: number };\n    return response.map(function (_ref, i) {\n      var Title = _ref.Title,\n          Poster = _ref.Poster,\n          Ratings = _ref.Ratings;\n      //averageRatingsAll.push({ avrRat: calculateAvarageRatings(Ratings) });\n      //averageRatings = averageRatingsAll[i];\n      isLoading(false);\n      return {\n        Title: Title,\n        Poster: Poster,\n        Ratings: Ratings\n      };\n    });\n  }, []);\n  useEffect(function () {\n    isLoading(true);\n\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(generalAPIService.get('/api/movies'));\n\n            case 2:\n              result = _context.sent;\n              getMovies(reduceData(result));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, [reduceData]);\n  return __jsx(\"main\", null, loading && 'movies are loading', __jsx(Provider, {\n    value: movies\n  }, __jsx(Movies, null, __jsx(Card, null))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","useCallback","styled","Card","generalAPIService","Movies","div","MoviesContext","createContext","Provider","Home","loading","isLoading","movies","getMovies","reduceData","response","map","i","Title","Poster","Ratings","fetchData","get","result"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AAEA,IAAMC,MAAM,GAAGH,MAAM,CAACI,GAAV,mBAAZ;AAUA,OAAO,IAAMC,aAAa,GAAGT,KAAK,CAACU,aAAN,CAAoB,CAAC,EAAD,CAApB,CAAtB;IACCC,Q,GAAaF,a,CAAbE,Q;;AAER,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACYV,QAAQ,CAAC,IAAD,CADpB;AAAA,MACVW,OADU;AAAA,MACDC,SADC;;AAAA,mBAEWZ,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAEVa,MAFU;AAAA,MAEFC,SAFE;;AAIjB,MAAMC,UAAU,GAAGd,WAAW,CAAC,UAACe,QAAD,EAAoB;AACjD;AACA;AACA,WAAOA,QAAQ,CAACC,GAAT,CACL,gBAAoDC,CAApD,EAA0D;AAAA,UAAvDC,KAAuD,QAAvDA,KAAuD;AAAA,UAAhDC,MAAgD,QAAhDA,MAAgD;AAAA,UAAxCC,OAAwC,QAAxCA,OAAwC;AACxD;AACA;AACAT,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA,aAAO;AAAEO,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,MAAM,EAANA,MAAT;AAAiBC,QAAAA,OAAO,EAAPA;AAAjB,OAAP;AACD,KANI,CAAP;AAQD,GAX6B,EAW3B,EAX2B,CAA9B;AAaAtB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAMU,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKlB,iBAAiB,CAACmB,GAAlB,CAAsB,aAAtB,CADL;;AAAA;AACVC,cAAAA,MADU;AAEhBV,cAAAA,SAAS,CAACC,UAAU,CAACS,MAAD,CAAX,CAAT;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAKAF,IAAAA,SAAS;AACV,GARQ,EAQN,CAACP,UAAD,CARM,CAAT;AAUA,SACE,oBACGJ,OAAO,IAAI,oBADd,EAEE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE;AAAjB,KACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF,CAFF,CADF;AAUD,CArCD;;AAuCA,eAAeH,IAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\n\nconst Movies = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n}\nexport const MoviesContext = React.createContext([{} as ImoviesResponseFields]);\nconst { Provider } = MoviesContext;\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  const [movies, getMovies] = useState([]);\n\n  const reduceData = useCallback((response: {}[]) => {\n    // const averageRatingsAll: { avrRat: number }[] = [];\n    //let averageRatings: { avrRat: number };\n    return response.map(\n      ({ Title, Poster, Ratings }: ImoviesResponseFields, i) => {\n        //averageRatingsAll.push({ avrRat: calculateAvarageRatings(Ratings) });\n        //averageRatings = averageRatingsAll[i];\n        isLoading(false);\n        return { Title, Poster, Ratings };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      <Provider value={movies}>\n        <Movies>\n          <Card />\n        </Movies>\n      </Provider>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}