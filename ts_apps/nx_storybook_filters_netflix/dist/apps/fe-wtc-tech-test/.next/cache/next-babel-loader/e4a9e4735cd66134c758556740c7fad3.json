{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\nconst Movies = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const MoviesContext = React.createContext([{}]);\nconst {\n  Provider\n} = MoviesContext;\n\nconst Home = () => {\n  const {\n    0: loading,\n    1: isLoading\n  } = useState(true);\n  const {\n    0: movies,\n    1: getMovies\n  } = useState([]);\n  const reduceData = useCallback(response => {\n    // const averageRatingsAll: { avrRat: number }[] = [];\n    //let averageRatings: { avrRat: number };\n    return response.map(({\n      Title,\n      Poster,\n      Ratings\n    }, i) => {\n      //averageRatingsAll.push({ avrRat: calculateAvarageRatings(Ratings) });\n      //averageRatings = averageRatingsAll[i];\n      isLoading(false);\n      return {\n        Title,\n        Poster,\n        Ratings\n      };\n    });\n  }, []);\n  useEffect(() => {\n    isLoading(true);\n\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n  return __jsx(\"main\", null, loading && 'movies are loading', __jsx(Provider, {\n    value: movies\n  }, __jsx(Movies, null, __jsx(Card, null))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","useCallback","styled","Card","generalAPIService","Movies","div","MoviesContext","createContext","Provider","Home","loading","isLoading","movies","getMovies","reduceData","response","map","Title","Poster","Ratings","i","fetchData","result","get"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AAEA,MAAMC,MAAM,GAAGH,MAAM,CAACI,GAAI;;;CAA1B;AAUA,OAAO,MAAMC,aAAa,GAAGT,KAAK,CAACU,aAAN,CAAoB,CAAC,EAAD,CAApB,CAAtB;AACP,MAAM;AAAEC,EAAAA;AAAF,IAAeF,aAArB;;AAEA,MAAMG,IAAI,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAuBZ,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM;AAAA,OAACa,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMe,UAAU,GAAGd,WAAW,CAAEe,QAAD,IAAoB;AACjD;AACA;AACA,WAAOA,QAAQ,CAACC,GAAT,CACL,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,KAAD,EAAoDC,CAApD,KAA0D;AACxD;AACA;AACAT,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA,aAAO;AAAEM,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA;AAAjB,OAAP;AACD,KANI,CAAP;AAQD,GAX6B,EAW3B,EAX2B,CAA9B;AAaArB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAMU,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMnB,iBAAiB,CAACoB,GAAlB,CAAsB,aAAtB,CAArB;AACAV,MAAAA,SAAS,CAACC,UAAU,CAACQ,MAAD,CAAX,CAAT;AACD,KAHD;;AAKAD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACP,UAAD,CARM,CAAT;AAUA,SACE,oBACGJ,OAAO,IAAI,oBADd,EAEE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE;AAAjB,KACE,MAAC,MAAD,QACE,MAAC,IAAD,OADF,CADF,CAFF,CADF;AAUD,CArCD;;AAuCA,eAAeH,IAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\n\nconst Movies = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n}\nexport const MoviesContext = React.createContext([{} as ImoviesResponseFields]);\nconst { Provider } = MoviesContext;\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  const [movies, getMovies] = useState([]);\n\n  const reduceData = useCallback((response: {}[]) => {\n    // const averageRatingsAll: { avrRat: number }[] = [];\n    //let averageRatings: { avrRat: number };\n    return response.map(\n      ({ Title, Poster, Ratings }: ImoviesResponseFields, i) => {\n        //averageRatingsAll.push({ avrRat: calculateAvarageRatings(Ratings) });\n        //averageRatings = averageRatingsAll[i];\n        isLoading(false);\n        return { Title, Poster, Ratings };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      <Provider value={movies}>\n        <Movies>\n          <Card />\n        </Movies>\n      </Provider>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}