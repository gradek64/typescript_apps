{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nexport const showStarRating = (rating, allStars) => {\n  const percentage = String(rating * allStars / 100);\n  const calculateRating = percentage.split('.');\n  const wholeStars = Number(calculateRating[0]);\n  const halfStar = Number(calculateRating[1]) === 0 ? 0 : 1;\n  const emptyStars = allStars - wholeStars - halfStar;\n  const startMap = {\n    wholeStar: props => __jsx(StarIcon, props),\n    halfStar: props => __jsx(StarHalfIcon, props),\n    emptyStar: props => __jsx(StarBorderOutlinedIcon, props)\n  };\n  const wholeStarts = Array(wholeStars).fill(startMap['wholeStar']);\n  const halfStarts = Array(halfStar).fill(startMap['halfStar']);\n  const emptyStarts = Array(emptyStars).fill(startMap['emptyStar']);\n  return [...wholeStarts, ...halfStarts, ...emptyStarts];\n};","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/RatingStarComp/ratingCalculation.tsx"],"names":["React","StarIcon","StarHalfIcon","StarBorderOutlinedIcon","showStarRating","rating","allStars","percentage","String","calculateRating","split","wholeStars","Number","halfStar","emptyStars","startMap","wholeStar","props","emptyStar","wholeStarts","Array","fill","halfStarts","emptyStarts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAAiBC,QAAjB,KAAsC;AAClE,QAAMC,UAAU,GAAGC,MAAM,CAAEH,MAAM,GAAGC,QAAV,GAAsB,GAAvB,CAAzB;AACA,QAAMG,eAAe,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAxB;AACA,QAAMC,UAAU,GAAGC,MAAM,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAzB;AACA,QAAMI,QAAQ,GAAGD,MAAM,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAN,KAA+B,CAA/B,GAAmC,CAAnC,GAAuC,CAAxD;AACA,QAAMK,UAAU,GAAGR,QAAQ,GAAGK,UAAX,GAAwBE,QAA3C;AAEA,QAAME,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAAGC,KAAD,IAA4B,MAAC,QAAD,EAAcA,KAAd,CADxB;AAEfJ,IAAAA,QAAQ,EAAGI,KAAD,IAA4B,MAAC,YAAD,EAAkBA,KAAlB,CAFvB;AAGfC,IAAAA,SAAS,EAAGD,KAAD,IACT,MAAC,sBAAD,EAA4BA,KAA5B;AAJa,GAAjB;AAOA,QAAME,WAAW,GAAGC,KAAK,CAACT,UAAD,CAAL,CAAkBU,IAAlB,CAAuBN,QAAQ,CAAC,WAAD,CAA/B,CAApB;AACA,QAAMO,UAAU,GAAGF,KAAK,CAACP,QAAD,CAAL,CAAgBQ,IAAhB,CAAqBN,QAAQ,CAAC,UAAD,CAA7B,CAAnB;AACA,QAAMQ,WAAW,GAAGH,KAAK,CAACN,UAAD,CAAL,CAAkBO,IAAlB,CAAuBN,QAAQ,CAAC,WAAD,CAA/B,CAApB;AAEA,SAAO,CAAC,GAAGI,WAAJ,EAAiB,GAAGG,UAApB,EAAgC,GAAGC,WAAnC,CAAP;AACD,CAnBM","sourcesContent":["import React from 'react';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\n\nexport const showStarRating = (rating: number, allStars: number) => {\n  const percentage = String((rating * allStars) / 100);\n  const calculateRating = percentage.split('.');\n  const wholeStars = Number(calculateRating[0]);\n  const halfStar = Number(calculateRating[1]) === 0 ? 0 : 1;\n  const emptyStars = allStars - wholeStars - halfStar;\n\n  const startMap = {\n    wholeStar: (props: { key: string }) => <StarIcon {...props} />,\n    halfStar: (props: { key: string }) => <StarHalfIcon {...props} />,\n    emptyStar: (props: { key: string }) => (\n      <StarBorderOutlinedIcon {...props} />\n    ),\n  };\n  const wholeStarts = Array(wholeStars).fill(startMap['wholeStar']);\n  const halfStarts = Array(halfStar).fill(startMap['halfStar']);\n  const emptyStarts = Array(emptyStars).fill(startMap['emptyStar']);\n\n  return [...wholeStarts, ...halfStarts, ...emptyStarts];\n};\n"]},"metadata":{},"sourceType":"module"}