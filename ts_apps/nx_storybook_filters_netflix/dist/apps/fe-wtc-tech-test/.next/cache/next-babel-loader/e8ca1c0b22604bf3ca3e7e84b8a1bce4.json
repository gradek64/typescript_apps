{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'; //custom\n\nimport wrapperIconHOC from '../../IconCTA/IconAction';\nvar VisibilityWatchedIcon = wrapperIconHOC(VisibilityOffOutlinedIcon, VisibilityIcon);\nvar VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n/*---------*/\n\nvar IconsStateManagement = function IconsStateManagement(_ref) {\n  var callToActionCardColor = _ref.callToActionCardColor,\n      watch = _ref.watch,\n      favorite = _ref.favorite;\n  var prevState;\n  var calculatedState;\n\n  var callToAction = function callToAction(iconState) {\n    //calculatedState = { ...prevState, ...iconState };\n    callToActionCardColor(_objectSpread({}, prevState, {}, iconState));\n    prevState = _objectSpread({}, prevState, {}, iconState);\n  }; //initial state\n\n\n  callToActionCardColor({\n    watch: watch,\n    favorite: favorite\n  });\n  prevState = {\n    watch: watch,\n    favorite: favorite\n  };\n  return __jsx(React.Fragment, null, __jsx(VisibilityWatchedIcon, {\n    callToAction: callToAction,\n    icon: \"watch\",\n    isActive: watch\n  }), __jsx(VisibilitySavedIcon, {\n    callToAction: callToAction,\n    icon: \"favorite\",\n    isActive: favorite\n  }));\n};\n\nexport default React.memo(IconsStateManagement);","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Card/IconsStateManagement/IconsStateManagement.tsx"],"names":["VisibilityWatchedIcon","wrapperIconHOC","VisibilitySavedIcon","IconsStateManagement","callToActionCardColor","watch","favorite","callToAction","prevState","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,cAAA,QAAA,8BAAA;AACA,OAAA,yBAAA,MAAA,0CAAA;AACA,OAAA,YAAA,MAAA,6BAAA;AACA,OAAA,kBAAA,MAAA,mCAAA,C,CAEA;;AACA,OAAA,cAAA,MAAA,0BAAA;AACA,IAAMA,qBAAqB,GAAGC,cAAc,CAAA,yBAAA,EAA5C,cAA4C,CAA5C;AAIA,IAAMC,mBAAmB,GAAGD,cAAc,CAAA,kBAAA,EAA1C,YAA0C,CAA1C;AAEA;;AAYA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAIf;AAAA,MAHZC,qBAGY,GAAA,IAAA,CAHZA,qBAGY;AAAA,MAFZC,KAEY,GAAA,IAAA,CAFZA,KAEY;AAAA,MADZC,QACY,GAAA,IAAA,CADZA,QACY;AACZ,MAAA,SAAA;AACA,MAAA,eAAA;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,SAAA,EAAuB;AAC1C;AACAH,IAAAA,qBAAqB,CAAA,aAAA,CAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAArBA,SAAqB,CAAA,CAArBA;AACAI,IAAAA,SAAS,GAAA,aAAA,CAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAATA,SAAS,CAATA;AANU,GAGZ,CAHY,CAQZ;;;AACAJ,EAAAA,qBAAqB,CAAC;AAAEC,IAAAA,KAAK,EAAP,KAAA;AAASC,IAAAA,QAAQ,EAARA;AAAT,GAAD,CAArBF;AACAI,EAAAA,SAAS,GAAG;AAAEH,IAAAA,KAAK,EAAP,KAAA;AAASC,IAAAA,QAAQ,EAARA;AAAT,GAAZE;AAEA,SACE,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,qBAAA,EAAA;AACE,IAAA,YAAY,EADd,YAAA;AAEE,IAAA,IAAI,EAFN,OAAA;AAGE,IAAA,QAAQ,EAAEH;AAHZ,GAAA,CADF,EAME,KAAA,CAAA,mBAAA,EAAA;AACE,IAAA,YAAY,EADd,YAAA;AAEE,IAAA,IAAI,EAFN,UAAA;AAGE,IAAA,QAAQ,EAAEC;AAHZ,GAAA,CANF,CADF;AAhBF,CAAA;;AAgCA,eAAeG,KAAK,CAALA,IAAAA,CAAf,oBAAeA,CAAf","sourcesContent":["import React from 'react';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//custom\nimport wrapperIconHOC from '../../IconCTA/IconAction';\nconst VisibilityWatchedIcon = wrapperIconHOC(\n  VisibilityOffOutlinedIcon,\n  VisibilityIcon\n);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n\n/*---------*/\ninterface IconStateInt {\n  watch: boolean;\n  favorite: boolean;\n}\n\ninterface PropsI {\n  callToActionCardColor: (state: object) => void;\n  watch: boolean;\n  favorite: boolean;\n}\n\nconst IconsStateManagement = ({\n  callToActionCardColor,\n  watch,\n  favorite,\n}: PropsI) => {\n  let prevState: IconStateInt;\n  let calculatedState: IconStateInt;\n  const callToAction = (iconState: object) => {\n    //calculatedState = { ...prevState, ...iconState };\n    callToActionCardColor({ ...prevState, ...iconState });\n    prevState = { ...prevState, ...iconState };\n  };\n  //initial state\n  callToActionCardColor({ watch, favorite });\n  prevState = { watch, favorite }\n\n  return (\n    <>\n      <VisibilityWatchedIcon\n        callToAction={callToAction}\n        icon=\"watch\"\n        isActive={watch}\n      />\n      <VisibilitySavedIcon\n        callToAction={callToAction}\n        icon=\"favorite\"\n        isActive={favorite}\n      />\n    </>\n  );\n};\n\nexport default React.memo(IconsStateManagement);\n"]},"metadata":{},"sourceType":"module"}