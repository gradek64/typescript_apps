{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div`\n  width: 150px;\n  height: 221px;\n  background-image: url(${props => props.image});\n  background-repeat: none;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n/* ... inside the render or return of your component ... */\n\nconst VisibilityWatchedIcon = wrapperIconHOC(VisibilityIcon, VisibilityOffOutlinedIcon);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon); //build card color object for each card\n\n/* const reducer = (people, action) => {\n\n  switch (action) {\n    case action.type == 'chomp':\n    case !watch && !favorite:\n  if(action.type == 'chomp') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = false;\n      }\n      return person;\n    })\n  }\n  if(action.type == 'revive') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = true;\n      }\n      return person;\n    })\n  }\n}\n */\n\n/* const cardState = { watch: false, favorite: false };*/\n\nlet previousState;\n\nfunction Card(props) {\n  const {\n    Title,\n    Poster: posterURL,\n    cardNumber\n  } = props;\n  previousState = {\n    [cardNumber]: {\n      watch: false,\n      favorite: false\n    }\n  }; //const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  const {\n    0: colorState,\n    1: setColorState\n  } = useState({\n    watch: false,\n    favorite: false\n  });\n  /* const [state, dispatch] = useReducer(reducer, {\n    watch: false,\n    favorite: false,\n  }); */\n\n  const setColor = ({\n    watch,\n    favorite\n  }) => {\n    switch (true) {\n      case !watch && !favorite:\n        //setBgColor(cardColorMapping.default);\n        console.log('notWatchednotSaved');\n        return 'white';\n\n      case watch && !favorite:\n        //setBgColor(cardColorMapping.watchedNotSaved);\n        console.log('watchedNotSaved');\n        return 'white';\n\n      case !watch && favorite:\n        //setBgColor(cardColorMapping.savedNotWatched);\n        console.log('savedNotWatched');\n        return 'white';\n\n      case watch && favorite:\n        //setBgColor(cardColorMapping.watchedAndSaved);\n        console.log('watchedAndSaved');\n        return 'white';\n    }\n  };\n\n  const callToAction = state => {\n    /* setColorState((prevState) => {\n      return { ...prevState, ...state };\n    }); */\n    //dispatch({ type: 'chomp', payload: state });\n    //console.log('state ', cardStateChange);\n    const currentState = {};\n    console.log('state', state); //previousState;\n  };\n\n  return __jsx(CardContainer, {\n    color: setColor(colorState)\n  }, __jsx(CardHeader, null, __jsx(VisibilityWatchedIcon, {\n    callToAction: callToAction,\n    icon: \"watch\",\n    obj: {\n      watch: false,\n      favorite: false\n    },\n    cardNumber: cardNumber\n  }), __jsx(VisibilitySavedIcon, {\n    callToAction: callToAction,\n    icon: \"favorite\",\n    obj: {\n      watch: false,\n      favorite: false\n    },\n    cardNumber: cardNumber\n  })), __jsx(Poster, null, __jsx(PosterImage, {\n    image: posterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: 20\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/Card.tsx"],"names":["React","useState","styled","VisibilityIcon","VisibilityOffOutlinedIcon","FavoriteIcon","FavoriteBorderIcon","RatingStarComp","wrapperIconHOC","cardColorMapping","default","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","div","props","color","Poster","PosterImage","image","CardHeader","CardFooter","VisibilityWatchedIcon","VisibilitySavedIcon","previousState","Card","Title","posterURL","cardNumber","watch","favorite","colorState","setColorState","setColor","console","log","callToAction","state","currentState"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport styled from 'styled-components';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\n\nconst PosterImage = styled.div<{\n  image: string;\n}>`\n  width: 150px;\n  height: 221px;\n  background-image: url(${(props) => props.image});\n  background-repeat: none;\n  background-size: 100% 100%;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px;\n`;\n\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n\n/* ... inside the render or return of your component ... */\n\ninterface Props {\n  Title: string;\n  Poster: string;\n  cardNumber: string;\n}\n\nconst VisibilityWatchedIcon = wrapperIconHOC(\n  VisibilityIcon,\n  VisibilityOffOutlinedIcon\n);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n\n//build card color object for each card\n\n/* const reducer = (people, action) => {\n\n  switch (action) {\n    case action.type == 'chomp':\n    case !watch && !favorite:\n  if(action.type == 'chomp') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = false;\n      }\n      return person;\n    })\n  }\n  if(action.type == 'revive') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = true;\n      }\n      return person;\n    })\n  }\n}\n */\n/* const cardState = { watch: false, favorite: false };*/\nlet previousState: {\n  [cardNumber: string]: { watch: boolean; favorite: boolean };\n};\nfunction Card(props: Props) {\n  const { Title, Poster: posterURL, cardNumber } = props;\n  previousState = { [cardNumber]: { watch: false, favorite: false } };\n  //const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n  const [colorState, setColorState] = useState({\n    watch: false,\n    favorite: false,\n  });\n\n  /* const [state, dispatch] = useReducer(reducer, {\n    watch: false,\n    favorite: false,\n  }); */\n\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        //setBgColor(cardColorMapping.default);\n        console.log('notWatchednotSaved');\n        return 'white';\n      case watch && !favorite:\n        //setBgColor(cardColorMapping.watchedNotSaved);\n        console.log('watchedNotSaved');\n        return 'white';\n      case !watch && favorite:\n        //setBgColor(cardColorMapping.savedNotWatched);\n        console.log('savedNotWatched');\n        return 'white';\n      case watch && favorite:\n        //setBgColor(cardColorMapping.watchedAndSaved);\n        console.log('watchedAndSaved');\n        return 'white';\n    }\n  };\n\n  const callToAction = (state: object) => {\n    /* setColorState((prevState) => {\n      return { ...prevState, ...state };\n    }); */\n    //dispatch({ type: 'chomp', payload: state });\n    //console.log('state ', cardStateChange);\n\n    const currentState = {};\n\n    console.log('state', state);\n    //previousState;\n  };\n\n  return (\n    <CardContainer color={setColor(colorState)}>\n      <CardHeader>\n        <VisibilityWatchedIcon\n          callToAction={callToAction}\n          icon=\"watch\"\n          obj={{\n            watch: false,\n            favorite: false,\n          }}\n          cardNumber={cardNumber}\n        />\n        <VisibilitySavedIcon\n          callToAction={callToAction}\n          icon=\"favorite\"\n          obj={{\n            watch: false,\n            favorite: false,\n          }}\n          cardNumber={cardNumber}\n        />\n      </CardHeader>\n      <Poster>\n        <PosterImage image={posterURL} />\n      </Poster>\n      <CardFooter>\n        <RatingStarComp rating={20} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}