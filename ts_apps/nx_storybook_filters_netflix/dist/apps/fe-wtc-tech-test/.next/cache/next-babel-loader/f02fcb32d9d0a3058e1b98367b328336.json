{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction Input(_ref) {\n  var value = _ref.value,\n      _ref$checked = _ref.checked,\n      checked = _ref$checked === void 0 ? false : _ref$checked,\n      callback = _ref.callback,\n      name = _ref.name;\n\n  var _useState = useState(checked),\n      checkedState = _useState[0],\n      setcheckedState = _useState[1];\n\n  return __jsx(\"label\", {\n    className: \"container-checkbox\"\n  }, __jsx(\"input\", {\n    name: name,\n    type: \"checkbox\",\n    checked: checkedState,\n    onChange: function onChange() {\n      setcheckedState(!checkedState);\n      callback(_defineProperty({}, name, !checkedState));\n    }\n  }), value, __jsx(\"span\", {\n    className: \"checkmark\"\n  }));\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Input/Input.tsx"],"names":["React","useState","Input","value","checked","callback","name","checkedState","setcheckedState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAQA,SAASC,KAAT,OAAmE;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,0BAA3CC,OAA2C;AAAA,MAA3CA,OAA2C,6BAAjC,KAAiC;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;;AAAA,kBACzBL,QAAQ,CAACG,OAAD,CADiB;AAAA,MAC1DG,YAD0D;AAAA,MAC5CC,eAD4C;;AAEjE,SACE;AAAO,IAAA,SAAS,EAAC;AAAjB,KACE;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEC,YAHX;AAIE,IAAA,QAAQ,EAAE,oBAAM;AACdC,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACAF,MAAAA,QAAQ,qBAAIC,IAAJ,EAAW,CAACC,YAAZ,EAAR;AACD;AAPH,IADF,EAUGJ,KAVH,EAWE;AAAM,IAAA,SAAS,EAAC;AAAhB,IAXF,CADF;AAeD;;AAED,eAAeD,KAAf","sourcesContent":["import React, { useState } from 'react';\n\ninterface PropsI {\n  value: string | number;\n  checked?: boolean;\n  name: string;\n  callback: (state: {}) => void;\n}\nfunction Input({ value, checked = false, callback, name }: PropsI) {\n  const [checkedState, setcheckedState] = useState(checked);\n  return (\n    <label className=\"container-checkbox\">\n      <input\n        name={name}\n        type=\"checkbox\"\n        checked={checkedState}\n        onChange={() => {\n          setcheckedState(!checkedState);\n          callback({ [name]: !checkedState });\n        }}\n      />\n      {value}\n      <span className=\"checkmark\"></span>\n    </label>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}