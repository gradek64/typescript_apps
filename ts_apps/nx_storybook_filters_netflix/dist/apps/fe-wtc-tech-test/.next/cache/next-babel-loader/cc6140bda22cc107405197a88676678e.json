{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  padding: 10px 10px 0px 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 150px;\\n  height: 221px;\\n  border-radius: 10px;\\n  background-image: url(\", \");\\n  background-repeat: no-repeat;\\n  background-size: 100% 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 10px;\\n  width: 150px;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \", \";\\n  /* align-items: center; */\\n  min-width: 200px;\\n  min-height: 300px;\\n  border-radius: 20px;\\n  /* justify-content: center; */\\n  margin: 10px;\\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nimport IconsStateManagement from '../IconsManagement/IconsStateManagement';\nvar cardColorMapping = {\n  \"default\": '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nvar CardContainer = styled.div(_templateObject(), function (props) {\n  return props.color || cardColorMapping[\"default\"];\n});\nvar Poster = styled.div(_templateObject2());\nvar PosterImage = styled.div(_templateObject3(), function (props) {\n  return props.image;\n});\nvar CardHeader = styled.div(_templateObject4());\nvar CardFooter = styled.div(_templateObject5());\n/* ... inside the render or return of your component ... */\n\nvar VisibilityWatchedIcon = wrapperIconHOC(VisibilityIcon, VisibilityOffOutlinedIcon);\nvar VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon); //build card color object for each card\n\n/* const reducer = (people, action) => {\n\n  switch (action) {\n    case action.type == 'chomp':\n    case !watch && !favorite:\n  if(action.type == 'chomp') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = false;\n      }\n      return person;\n    })\n  }\n  if(action.type == 'revive') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = true;\n      }\n      return person;\n    })\n  }\n}\n */\n\n/* const cardState = { watch: false, favorite: false };*/\n\nvar previousState;\n\nfunction Card(props) {\n  var Title = props.Title,\n      posterURL = props.Poster,\n      cardNumber = props.cardNumber;\n  previousState = _defineProperty({}, cardNumber, {\n    watch: false,\n    favorite: false\n  }); //const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  var _useState = useState({\n    watch: false,\n    favorite: false\n  }),\n      colorState = _useState[0],\n      setColorState = _useState[1];\n  /* const [state, dispatch] = useReducer(reducer, {\n    watch: false,\n    favorite: false,\n  }); */\n\n\n  var setColor = function setColor(_ref) {\n    var watch = _ref.watch,\n        favorite = _ref.favorite;\n\n    switch (true) {\n      case !watch && !favorite:\n        //setBgColor(cardColorMapping.default);\n        console.log('notWatchednotSaved');\n        return 'white';\n\n      case watch && !favorite:\n        //setBgColor(cardColorMapping.watchedNotSaved);\n        console.log('watchedNotSaved');\n        return 'white';\n\n      case !watch && favorite:\n        //setBgColor(cardColorMapping.savedNotWatched);\n        console.log('savedNotWatched');\n        return 'white';\n\n      case watch && favorite:\n        //setBgColor(cardColorMapping.watchedAndSaved);\n        console.log('watchedAndSaved');\n        return 'white';\n    }\n  };\n\n  return __jsx(CardContainer, {\n    color: setColor(colorState)\n  }, __jsx(CardHeader, null, __jsx(IconsStateManagement, {\n    callToActionCardColor: setColor\n  })), __jsx(Poster, null, __jsx(PosterImage, {\n    image: posterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: 50\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/Card.tsx"],"names":["React","useState","styled","VisibilityIcon","VisibilityOffOutlinedIcon","FavoriteIcon","FavoriteBorderIcon","RatingStarComp","wrapperIconHOC","IconsStateManagement","cardColorMapping","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","div","props","color","Poster","PosterImage","image","CardHeader","CardFooter","VisibilityWatchedIcon","VisibilitySavedIcon","previousState","Card","Title","posterURL","cardNumber","watch","favorite","colorState","setColorState","setColor","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport styled from 'styled-components';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nimport IconsStateManagement from '../IconsManagement/IconsStateManagement';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\n\nconst PosterImage = styled.div<{\n  image: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.image});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\n\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n\n/* ... inside the render or return of your component ... */\n\ninterface Props {\n  Title: string;\n  Poster: string;\n  cardNumber: string;\n}\n\nconst VisibilityWatchedIcon = wrapperIconHOC(\n  VisibilityIcon,\n  VisibilityOffOutlinedIcon\n);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n\n//build card color object for each card\n\n/* const reducer = (people, action) => {\n\n  switch (action) {\n    case action.type == 'chomp':\n    case !watch && !favorite:\n  if(action.type == 'chomp') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = false;\n      }\n      return person;\n    })\n  }\n  if(action.type == 'revive') {\n    return people.map(person => {\n      if(person.name == action.payload) {\n        person.alive = true;\n      }\n      return person;\n    })\n  }\n}\n */\n/* const cardState = { watch: false, favorite: false };*/\nlet previousState: {\n  [cardNumber: string]: { watch: boolean; favorite: boolean };\n};\nfunction Card(props: Props) {\n  const { Title, Poster: posterURL, cardNumber } = props;\n  previousState = { [cardNumber]: { watch: false, favorite: false } };\n  //const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n  const [colorState, setColorState] = useState({\n    watch: false,\n    favorite: false,\n  });\n\n  /* const [state, dispatch] = useReducer(reducer, {\n    watch: false,\n    favorite: false,\n  }); */\n\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        //setBgColor(cardColorMapping.default);\n        console.log('notWatchednotSaved');\n        return 'white';\n      case watch && !favorite:\n        //setBgColor(cardColorMapping.watchedNotSaved);\n        console.log('watchedNotSaved');\n        return 'white';\n      case !watch && favorite:\n        //setBgColor(cardColorMapping.savedNotWatched);\n        console.log('savedNotWatched');\n        return 'white';\n      case watch && favorite:\n        //setBgColor(cardColorMapping.watchedAndSaved);\n        console.log('watchedAndSaved');\n        return 'white';\n    }\n  };\n\n  return (\n    <CardContainer color={setColor(colorState)}>\n      <CardHeader>\n        <IconsStateManagement callToActionCardColor={setColor} />\n        {/* <VisibilityWatchedIcon\n          callToAction={()=>{return}}\n          icon=\"watch\"\n          obj={{\n            watch: false,\n            favorite: false,\n          }}\n          cardNumber={cardNumber}\n        />\n        <VisibilitySavedIcon\n          callToAction={()=>{return}}\n          icon=\"favorite\"\n          obj={{\n            watch: false,\n            favorite: false,\n          }}\n          cardNumber={cardNumber}\n        /> */}\n      </CardHeader>\n      <Poster>\n        <PosterImage image={posterURL} />\n      </Poster>\n      <CardFooter>\n        {/*}has to be between 0 100 %*/}\n        <RatingStarComp rating={50} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}