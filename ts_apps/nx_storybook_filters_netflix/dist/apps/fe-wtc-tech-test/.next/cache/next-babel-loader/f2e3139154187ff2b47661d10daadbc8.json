{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// custom\nimport { ENV_POSTS, ENV_WEATHER } from '../utils/ENV';\n\nvar apiService = function apiService() {\n  var TIMEOUT = 30000;\n\n  var errorInterceptor = function errorInterceptor(err) {\n    switch (err.status) {\n      case -1:\n        if (err.xhrStatus === 'abort') {\n          if (!err.config) {\n            err.config = {\n              timeout: TIMEOUT\n            };\n          }\n\n          console.warn(\"REQUEST CANCELED (config timeout: \".concat(err.config.timeout, \"ms)\"));\n        }\n\n        break;\n\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n\n      default:\n    }\n\n    throw err;\n  };\n\n  var responseMiddleware = function responseMiddleware(res) {\n    return res;\n  };\n\n  var requestPath = function requestPath(path, params) {\n    //for testing work with 2 BASE_URLs\n    var PATH = path.includes('location') ? ENV_WEATHER.BASE_URL : ENV_POSTS.BASE_URL;\n\n    if (params && Object.keys(params).length > 1) {\n      var query = '';\n\n      for (var keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n\n      console.log('requestPath1', PATH + path); //remove last '&' symbol\n\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    } //console.log('requestPath2', PATH + path);\n\n\n    return PATH + path;\n  };\n\n  var requestInterceptor = function requestInterceptor(serviceConfig, customRequestHeaders) {\n    var requestHeaders = {\n      'Content-Type': 'application/json'\n    };\n    var request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: _objectSpread({}, requestHeaders, {}, customRequestHeaders)\n    }; //request with body object not empty {}\n\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body)\n      });\n    } //console.log('request with headers', request);\n\n\n    return request;\n  };\n\n  var sendRequest = function sendRequest(serviceConfig, customRequestHeaders) {\n    var response, res;\n    return _regeneratorRuntime.async(function sendRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(requestPath(serviceConfig.path, serviceConfig.params), requestInterceptor(serviceConfig, customRequestHeaders)));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            res = _context.sent;\n            return _context.abrupt(\"return\", responseMiddleware(res));\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('it has errored');\n            return _context.abrupt(\"return\", errorInterceptor(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var get = function get(path) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$params = _ref.params,\n        params = _ref$params === void 0 ? {} : _ref$params;\n\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$customRequestHe = _ref2.customRequestHeaders,\n        customRequestHeaders = _ref2$customRequestHe === void 0 ? {} : _ref2$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'GET',\n        path: path,\n        params: params\n      }, customRequestHeaders)\n    );\n  };\n\n  var post = function post(path, _ref3) {\n    var body = _ref3.body;\n\n    var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref4$customRequestHe = _ref4.customRequestHeaders,\n        customRequestHeaders = _ref4$customRequestHe === void 0 ? {} : _ref4$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'POST',\n        path: path,\n        body: body\n      }, customRequestHeaders)\n    );\n  };\n\n  var put = function put(path, _ref5) {\n    var body = _ref5.body;\n\n    var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref6$customRequestHe = _ref6.customRequestHeaders,\n        customRequestHeaders = _ref6$customRequestHe === void 0 ? {} : _ref6$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'PUT',\n        path: path,\n        body: body\n      }, customRequestHeaders)\n    );\n  };\n\n  var patch = function patch(path, _ref7) {\n    var body = _ref7.body;\n\n    var _ref8 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref8$customRequestHe = _ref8.customRequestHeaders,\n        customRequestHeaders = _ref8$customRequestHe === void 0 ? {} : _ref8$customRequestHe;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'PATCH',\n        path: path,\n        body: body\n      }, customRequestHeaders)\n    );\n  };\n\n  var del = function del(path, _ref9) {\n    var params = _ref9.params;\n\n    var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref10$customRequestH = _ref10.customRequestHeaders,\n        customRequestHeaders = _ref10$customRequestH === void 0 ? {} : _ref10$customRequestH;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'DELETE',\n        path: path,\n        params: params\n      }, customRequestHeaders)\n    );\n  };\n\n  return {\n    get: get,\n    post: post,\n    put: put,\n    patch: patch,\n    \"delete\": del\n  };\n};\n\nexport default apiService();","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/services/apiService.ts"],"names":["ENV_POSTS","ENV_WEATHER","apiService","TIMEOUT","errorInterceptor","err","status","xhrStatus","config","timeout","console","warn","responseMiddleware","res","requestPath","path","params","PATH","includes","BASE_URL","Object","keys","length","query","log","replace","trim","requestInterceptor","serviceConfig","customRequestHeaders","requestHeaders","request","method","cache","credentials","headers","body","assign","JSON","stringify","sendRequest","fetch","response","json","get","post","put","patch","del"],"mappings":"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","sourcesContent":["// custom\nimport { ENV_POSTS, ENV_WEATHER } from '../utils/ENV';\n\nconst apiService = () => {\n  const TIMEOUT = 30000;\n\n  const errorInterceptor = (err) => {\n    switch (err.status) {\n      case -1:\n        if (err.xhrStatus === 'abort') {\n          if (!err.config) {\n            err.config = { timeout: TIMEOUT };\n          }\n          console.warn(\n            `REQUEST CANCELED (config timeout: ${err.config.timeout}ms)`\n          );\n        }\n        break;\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n      default:\n    }\n    throw err;\n  };\n\n  const responseMiddleware = (res) => res;\n\n  const requestPath = (path: string, params?: Object) => {\n    //for testing work with 2 BASE_URLs\n    const PATH = path.includes('location')\n      ? ENV_WEATHER.BASE_URL\n      : ENV_POSTS.BASE_URL;\n    if (params && Object.keys(params).length > 1) {\n      let query: string = '';\n\n      for (const keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n      console.log('requestPath1', PATH + path);\n      //remove last '&' symbol\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    }\n\n    //console.log('requestPath2', PATH + path);\n\n    return PATH + path;\n  };\n\n  interface RequestInit {}\n  const requestInterceptor = (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Object;\n      body?: Object;\n    },\n    customRequestHeaders: Object\n  ): RequestInit => {\n    const requestHeaders = {\n      'Content-Type': 'application/json',\n    };\n\n    let request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        ...requestHeaders,\n        ...customRequestHeaders,\n      },\n    };\n\n    //request with body object not empty {}\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body),\n      });\n    }\n    //console.log('request with headers', request);\n    return request;\n  };\n\n  const sendRequest = async (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Object;\n      body?: Object;\n    },\n    customRequestHeaders: Object\n  ): Promise<{ [key: string]: any }> => {\n    try {\n      const response = await fetch(\n        requestPath(serviceConfig.path, serviceConfig.params),\n        requestInterceptor(serviceConfig, customRequestHeaders)\n      );\n      const res = await response.json();\n      return responseMiddleware(res);\n    } catch (err) {\n      console.log('it has errored');\n      return errorInterceptor(err);\n    }\n  };\n\n  const get = (\n    path: string,\n    { params = {} } = {}, //this syntax means optional with defualt {}\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'GET', path, params }, customRequestHeaders);\n\n  const post = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'POST', path, body }, customRequestHeaders);\n\n  const put = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'PUT', path, body }, customRequestHeaders);\n\n  const patch = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'PATCH', path, body }, customRequestHeaders);\n\n  const del = (\n    path: string,\n    { params }: { params?: Object },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'DELETE', path, params }, customRequestHeaders);\n\n  return {\n    get,\n    post,\n    put,\n    patch,\n    delete: del,\n  };\n};\n\nexport default apiService();\n"]},"metadata":{},"sourceType":"module"}