{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\nvar Movies = styled.div(_templateObject());\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      movies = _useState[0],\n      getMovies = _useState[1];\n\n  var reduceData = function reduceData(response) {\n    return response.map(function (_ref) {\n      var Title = _ref.Title,\n          Poster = _ref.Poster;\n      return {\n        Title: Title,\n        Poster: Poster\n      };\n    });\n  };\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(generalAPIService.get('/api/movies'));\n\n            case 2:\n              result = _context.sent;\n              console.log('result', result);\n              getMovies(reduceData(result));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, []);\n  return __jsx(\"main\", null, __jsx(Movies, null, movies.map(function (fields) {\n    return __jsx(Card, _extends({}, fields, {\n      key: fields.Title\n    }));\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","styled","Card","generalAPIService","Movies","div","Home","movies","getMovies","reduceData","response","map","Title","Poster","fetchData","get","result","console","log","fields"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AAEA,IAAMC,MAAM,GAAGH,MAAM,CAACI,GAAV,mBAAZ;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACWN,QAAQ,CAAC,EAAD,CADnB;AAAA,MACVO,MADU;AAAA,MACFC,SADE;;AAQjB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAoB;AACrC,WAAOA,QAAQ,CAACC,GAAT,CAAa,gBAA8C;AAAA,UAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,UAApCC,MAAoC,QAApCA,MAAoC;AAChE,aAAO;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,MAAM,EAANA;AAAT,OAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKX,iBAAiB,CAACY,GAAlB,CAAsB,aAAtB,CADL;;AAAA;AACVC,cAAAA,MADU;AAEhBC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACAR,cAAAA,SAAS,CAACC,UAAU,CAACO,MAAD,CAAX,CAAT;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAMAF,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AAUA,SACE,oBACE,MAAC,MAAD,QACGP,MAAM,CAACI,GAAP,CAAW,UAACQ,MAAD;AAAA,WACV,MAAC,IAAD,eAAUA,MAAV;AAAkB,MAAA,GAAG,EAAEA,MAAM,CAACP;AAA9B,OADU;AAAA,GAAX,CADH,CADF,CADF;AASD,CAjCD;;AAmCA,eAAeN,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from './Card/Card';\nimport generalAPIService from './services/apiService';\n\nconst Movies = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Home = () => {\n  const [movies, getMovies] = useState([]);\n\n  interface ImoviesResponseFields {\n    Title: string;\n    Poster: string;\n  }\n\n  const reduceData = (response: {}[]) => {\n    return response.map(({ Title, Poster }: ImoviesResponseFields) => {\n      return { Title, Poster };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      console.log('result', result);\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <Movies>\n        {movies.map((fields) => (\n          <Card {...fields} key={fields.Title} />\n        ))}\n      </Movies>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}