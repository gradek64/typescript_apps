{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components'; // custom\n\nconst InputComp = props => __jsx(\"input\", _extends({\n  type: \"text\"\n}, props));\n\nconst all = Object.entries(generateFilters());\nconst displayed = all.slice(0, 5);\nconst hidden = all.slice(5, 50);\nconst FilterContainer = styled.div`\n  display: flex;\n  flexdirection: column;\n`;\nconst AccordionMore = styled.div`\n  padding: 10px;\n`;\n\nfunction FiltersGroup() {\n  return __jsx(FilterContainer, null, __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(AccordionMore, null, __jsx(Accordion, null, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`))))), __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(Accordion, null, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`)))));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","Accordion","generateFilters","styled","InputComp","props","all","Object","entries","displayed","slice","hidden","FilterContainer","div","AccordionMore","FiltersGroup","map","key","value","length"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAA4B;AAAO,EAAA,IAAI,EAAC;AAAZ,GAAuBA,KAAvB,EAA9C;;AAEA,MAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeN,eAAe,EAA9B,CAAZ;AACA,MAAMO,SAAS,GAAGH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAlB;AACA,MAAMC,MAAM,GAAGL,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAf;AAEA,MAAME,eAAe,GAAGT,MAAM,CAACU,GAAI;;;CAAnC;AAIA,MAAMC,aAAa,GAAGX,MAAM,CAACU,GAAI;;CAAjC;;AAIA,SAASE,YAAT,GAAwB;AACtB,SACE,MAAC,eAAD,QACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,OAAO,EAAE,KAAzB;AAAgC,IAAA,YAAY,EAAE;AAA9C,KACE,mBACGN,SAAS,CAACO,GAAV,CAAc,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACb;AAAK,IAAA,GAAG,EAAED;AAAV,KACE;AAAO,IAAA,IAAI,EAAC;AAAZ,IADF,EAEI,GAAEA,GAAI,IAAGC,KAAM,GAFnB,CADD,CADH,CADF,CADF,EAWGP,MAAM,CAACQ,MAAP,GAAgB,CAAhB,IACC,MAAC,aAAD,QACE,MAAC,SAAD,QACGR,MAAM,CAACK,GAAP,CAAW,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACV;AAAK,IAAA,GAAG,EAAED;AAAV,KACE;AAAO,IAAA,IAAI,EAAC;AAAZ,IADF,EAEI,GAAEA,GAAI,IAAGC,KAAM,GAFnB,CADD,CADH,CADF,CAZJ,CADF,EAyBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,OAAO,EAAE,KAAzB;AAAgC,IAAA,YAAY,EAAE;AAA9C,KACE,mBACGT,SAAS,CAACO,GAAV,CAAc,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACb;AAAK,IAAA,GAAG,EAAED;AAAV,KACE;AAAO,IAAA,IAAI,EAAC;AAAZ,IADF,EAEI,GAAEA,GAAI,IAAGC,KAAM,GAFnB,CADD,CADH,CADF,CADF,EAWGP,MAAM,CAACQ,MAAP,GAAgB,CAAhB,IACC,MAAC,SAAD,QACGR,MAAM,CAACK,GAAP,CAAW,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACV;AAAK,IAAA,GAAG,EAAED;AAAV,KACE;AAAO,IAAA,IAAI,EAAC;AAAZ,IADF,EAEI,GAAEA,GAAI,IAAGC,KAAM,GAFnB,CADD,CADH,CAZJ,CAzBF,CADF;AAkDD;;AAED,eAAeH,YAAf","sourcesContent":["import React, { useState } from 'react';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\n\n// custom\nconst InputComp = (props: { key: string }) => <input type=\"text\" {...props} />;\n\nconst all = Object.entries(generateFilters());\nconst displayed = all.slice(0, 5);\nconst hidden = all.slice(5, 50);\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flexdirection: column;\n`;\nconst AccordionMore = styled.div`\n  padding: 10px;\n`;\n\nfunction FiltersGroup() {\n  return (\n    <FilterContainer>\n      <div className=\"accordion\">\n        <Accordion open shevron={false} clickDisable={true}>\n          <div>\n            {displayed.map(([key, value]) => (\n              <div key={key}>\n                <input type=\"radio\" />\n                {`${key}(${value})`}\n              </div>\n            ))}\n          </div>\n        </Accordion>\n        {hidden.length > 0 && (\n          <AccordionMore>\n            <Accordion>\n              {hidden.map(([key, value]) => (\n                <div key={key}>\n                  <input type=\"radio\" />\n                  {`${key}(${value})`}\n                </div>\n              ))}\n            </Accordion>\n          </AccordionMore>\n        )}\n      </div>\n      <div className=\"accordion\">\n        <Accordion open shevron={false} clickDisable={true}>\n          <div>\n            {displayed.map(([key, value]) => (\n              <div key={key}>\n                <input type=\"radio\" />\n                {`${key}(${value})`}\n              </div>\n            ))}\n          </div>\n        </Accordion>\n        {hidden.length > 0 && (\n          <Accordion>\n            {hidden.map(([key, value]) => (\n              <div key={key}>\n                <input type=\"radio\" />\n                {`${key}(${value})`}\n              </div>\n            ))}\n          </Accordion>\n        )}\n      </div>\n    </FilterContainer>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}