{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport { MoviesContext } from '../../../pages/index';\nimport Input from '../../contentComponents/Input/Input';\nvar FilterContainer = styled.div(_templateObject());\n\nfunction FiltersGroup() {\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies,\n      updateState = _useContext.updateState;\n\n  var updateViewWithFiltersResponse = function updateViewWithFiltersResponse() {\n    return _regeneratorRuntime.async(function updateViewWithFiltersResponse$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var callToAction = function callToAction(genre) {\n    return function (state) {\n      var yes = state.yes;\n      console.log('state', _defineProperty({}, genre, state)); //updateViewWithFiltersResponse()\n\n      Object.keys(_defineProperty({}, genre, state)); //updateState(yes ? 'True' : 'False');\n    };\n  };\n\n  var showFilters = 2;\n\n  var displayFilters = function displayFilters(ArrOfFilters, length) {\n    return {\n      displayed: ArrOfFilters.slice(0, showFilters),\n      hidden: ArrOfFilters.slice(showFilters, length)\n    };\n  };\n\n  var metaScoreStrings = '';\n\n  var calculateMetaScore = function calculateMetaScore(score) {\n    if (score < 60) {\n      metaScoreStrings = '< 60';\n    }\n\n    if (score > 60 && score < 80) {\n      metaScoreStrings = 'between 60 & 80';\n    }\n\n    if (score > 80 && score < 90) {\n      metaScoreStrings = 'between 80 & 90';\n    }\n\n    if (score > 90) {\n      metaScoreStrings = '> 90';\n    }\n\n    return metaScoreStrings;\n  };\n\n  var generate = function generate(value) {\n    return function (obj, element) {\n      if (value === 'Metascore') {\n        obj = generateFilters(calculateMetaScore(Number(element[value])), movies.length);\n        return obj;\n      }\n\n      obj = generateFilters(element[value], movies.length);\n      return obj;\n    };\n  }; //static filters\n\n\n  var watched = Object.entries({\n    YES: movies.filter(function (_ref) {\n      var Watched = _ref.Watched;\n      return Watched === 'True';\n    }).length,\n    NO: movies.filter(function (_ref2) {\n      var Watched = _ref2.Watched;\n      return Watched === 'False';\n    }).length\n  });\n  var savedInWatched = Object.entries({\n    YES: movies.filter(function (_ref3) {\n      var Saved = _ref3.Saved;\n      return Saved === 'True';\n    }).length,\n    NO: movies.filter(function (_ref4) {\n      var Saved = _ref4.Saved;\n      return Saved === 'False';\n    }).length\n  });\n  var type = Object.entries({\n    MOVIE: movies.filter(function (_ref5) {\n      var Type = _ref5.Type;\n      return Type === 'movie';\n    }).length,\n    SERIES: movies.filter(function (_ref6) {\n      var Type = _ref6.Type;\n      return Type === 'series';\n    }).length\n  }); //generated filters\n\n  var metasArr = Object.entries(movies.reduce(generate('Metascore'), {}));\n  var YearArr = Object.entries(movies.reduce(generate('Year'), {}));\n  var genreArr = Object.entries(movies.reduce(generate('Genre'), {}));\n  var actorsArr = Object.entries(movies.reduce(generate('Actors'), {}));\n  var directorArr = Object.entries(movies.reduce(generate('Director'), {}));\n  var metasArrFormat = displayFilters(metasArr, metasArr.length);\n  var yearArrFormat = displayFilters(YearArr, YearArr.length);\n  var genreArrFormat = displayFilters(genreArr, genreArr.length);\n  var actorsArrFormat = displayFilters(actorsArr, actorsArr.length);\n  var directorArrFormat = displayFilters(directorArr, directorArr.length);\n  var filtersLabels = {\n    TYPE: displayFilters(type, type.length),\n    YEARS: yearArrFormat,\n    METASCORE: metasArrFormat,\n    GENRE: genreArrFormat,\n    WATCHED: displayFilters(watched, watched.length),\n    'SAVED IN WATCHED LIST': displayFilters(savedInWatched, savedInWatched.length),\n    ACTORS: actorsArrFormat,\n    DIRECTORS: directorArrFormat\n  };\n  return __jsx(React.Fragment, null, __jsx(FilterContainer, null, Object.entries(filtersLabels).map(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        title = _ref8[0],\n        filters = _ref8[1];\n\n    return __jsx(\"div\", {\n      className: \"accordion\",\n      key: title\n    }, __jsx(Accordion, {\n      open: true,\n      shevron: false,\n      clickDisable: true,\n      title: title\n    }, __jsx(\"div\", null, filters['displayed'].map(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n          key = _ref10[0],\n          value = _ref10[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(Input, {\n        name: key,\n        value: \"\".concat(key, \"(\").concat(value, \")\"),\n        callback: callToAction(title)\n      }));\n    }))), filters['hidden'].length > 0 && __jsx(Accordion, {\n      title: 'see more',\n      directional: true,\n      shevron: false\n    }, filters['hidden'].map(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n          key = _ref12[0],\n          value = _ref12[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(Input, {\n        name: key,\n        value: \"\".concat(key, \"(\").concat(value, \")\"),\n        callback: callToAction\n      }));\n    })));\n  })));\n} //make sure it render only the amount of movies.length\n\n\nexport default React.memo(FiltersGroup);","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["FilterContainer","styled","movies","updateState","useContext","updateViewWithFiltersResponse","callToAction","yes","state","console","Object","showFilters","displayFilters","displayed","ArrOfFilters","hidden","metaScoreStrings","calculateMetaScore","score","generate","value","obj","generateFilters","Number","element","watched","YES","Watched","NO","length","savedInWatched","Saved","type","MOVIE","Type","SERIES","metasArr","YearArr","genreArr","actorsArr","directorArr","metasArrFormat","yearArrFormat","genreArrFormat","actorsArrFormat","directorArrFormat","filtersLabels","TYPE","YEARS","METASCORE","GENRE","WATCHED","ACTORS","DIRECTORS","title","filters","key","React"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport { MoviesContext } from '../../../pages/index';\nimport Input from '../../contentComponents/Input/Input';\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nfunction FiltersGroup() {\n  const { movies, updateState } = useContext(MoviesContext);\n\n  const updateViewWithFiltersResponse = async () => {\n\n  }\n\n  const callToAction = (genre: string) => (state: any) => {\n    const { yes } = state;\n    console.log('state', { [genre]: state });\n    //updateViewWithFiltersResponse()\n    Object.keys({ [genre]: state })\n    //updateState(yes ? 'True' : 'False');\n  };\n  const showFilters = 2;\n  const displayFilters = (\n    ArrOfFilters: [string, unknown][],\n    length: number\n  ) => ({\n    displayed: ArrOfFilters.slice(0, showFilters),\n    hidden: ArrOfFilters.slice(showFilters, length),\n  });\n\n  let metaScoreStrings = '';\n  const calculateMetaScore = (score: number) => {\n    if (score < 60) {\n      metaScoreStrings = '< 60';\n    }\n    if (score > 60 && score < 80) {\n      metaScoreStrings = 'between 60 & 80';\n    }\n    if (score > 80 && score < 90) {\n      metaScoreStrings = 'between 80 & 90';\n    }\n    if (score > 90) {\n      metaScoreStrings = '> 90';\n    }\n    return metaScoreStrings;\n  };\n\n  const generate = (value: string) => (obj: {}, element: {}) => {\n    if (value === 'Metascore') {\n      obj = generateFilters(\n        calculateMetaScore(Number(element[value])),\n        movies.length\n      );\n      return obj;\n    }\n    obj = generateFilters(element[value], movies.length);\n    return obj;\n  };\n\n  //static filters\n  const watched = Object.entries({\n    YES: movies.filter(({ Watched }) => Watched === 'True').length,\n    NO: movies.filter(({ Watched }) => Watched === 'False').length,\n  });\n  const savedInWatched = Object.entries({\n    YES: movies.filter(({ Saved }) => Saved === 'True').length,\n    NO: movies.filter(({ Saved }) => Saved === 'False').length,\n  });\n  const type = Object.entries({\n    MOVIE: movies.filter(({ Type }) => Type === 'movie').length,\n    SERIES: movies.filter(({ Type }) => Type === 'series').length,\n  });\n  //generated filters\n  const metasArr = Object.entries(movies.reduce(generate('Metascore'), {}));\n  const YearArr = Object.entries(movies.reduce(generate('Year'), {}));\n  const genreArr = Object.entries(movies.reduce(generate('Genre'), {}));\n  const actorsArr = Object.entries(movies.reduce(generate('Actors'), {}));\n  const directorArr = Object.entries(movies.reduce(generate('Director'), {}));\n\n  const metasArrFormat = displayFilters(metasArr, metasArr.length);\n  const yearArrFormat = displayFilters(YearArr, YearArr.length);\n  const genreArrFormat = displayFilters(genreArr, genreArr.length);\n  const actorsArrFormat = displayFilters(actorsArr, actorsArr.length);\n  const directorArrFormat = displayFilters(directorArr, directorArr.length);\n\n  const filtersLabels = {\n    TYPE: displayFilters(type, type.length),\n    YEARS: yearArrFormat,\n    METASCORE: metasArrFormat,\n    GENRE: genreArrFormat,\n    WATCHED: displayFilters(watched, watched.length),\n    'SAVED IN WATCHED LIST': displayFilters(\n      savedInWatched,\n      savedInWatched.length\n    ),\n    ACTORS: actorsArrFormat,\n    DIRECTORS: directorArrFormat,\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        {Object.entries(filtersLabels).map(([title, filters]) => (\n          <div className=\"accordion\" key={title}>\n            <Accordion open shevron={false} clickDisable={true} title={title}>\n              <div>\n                {filters['displayed'].map(([key, value]) => (\n                  <div key={key}>\n                    <Input\n                      name={key}\n                      value={`${key}(${value})`}\n                      callback={callToAction(title)}\n                    />\n                  </div>\n                ))}\n              </div>\n            </Accordion>\n            {filters['hidden'].length > 0 && (\n              <Accordion title={'see more'} directional={true} shevron={false}>\n                {filters['hidden'].map(([key, value]) => (\n                  <div key={key}>\n                    <Input\n                      name={key}\n                      value={`${key}(${value})`}\n                      callback={callToAction}\n                    />\n                  </div>\n                ))}\n              </Accordion>\n            )}\n          </div>\n        ))}\n      </FilterContainer>\n    </>\n  );\n}\n\n//make sure it render only the amount of movies.length\nexport default React.memo(FiltersGroup);\n"]},"metadata":{},"sourceType":"module"}