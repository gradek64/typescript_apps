{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\nexport const MoviesContext = React.createContext({});\nconst {\n  Provider,\n  Consumer\n} = MoviesContext;\n\nconst Home = () => {\n  const {\n    0: loading,\n    1: isLoading\n  } = useState(true);\n  const {\n    0: movies,\n    1: getMovies\n  } = useState([]);\n  const reduceData = useCallback(response => {\n    return response.map(({\n      Title,\n      Poster,\n      Ratings,\n      Watched,\n      Saved\n    }) => {\n      isLoading(false);\n      return {\n        Title,\n        Poster,\n        Ratings,\n        Watched,\n        Saved\n      };\n    });\n  }, []);\n  useEffect(() => {\n    isLoading(true);\n\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n  return __jsx(\"main\", null, loading && 'movies are loading', __jsx(Provider, {\n    value: movies\n  }, __jsx(Wrapper, null, __jsx(Filters, null, __jsx(FiltersGroup, null)), __jsx(Movies, null, __jsx(Consumer, null, moviesObj => moviesObj.map((fields, i) => __jsx(Card, {\n    key: fields.Title,\n    cardId: i\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","useCallback","styled","Card","generalAPIService","FiltersGroup","Wrapper","div","Filters","Movies","MoviesContext","createContext","Provider","Consumer","Home","loading","isLoading","movies","getMovies","reduceData","response","map","Title","Poster","Ratings","Watched","Saved","fetchData","result","get","moviesObj","fields","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;;;CAA3B;AAKA,MAAMC,OAAO,GAAGN,MAAM,CAACK,GAAI;;;;CAA3B;AAKA,MAAME,MAAM,GAAGP,MAAM,CAACK,GAAI;;;;CAA1B;AAcA,OAAO,MAAMG,aAAa,GAAGZ,KAAK,CAACa,aAAN,CAAoB,EAApB,CAAtB;AACP,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBH,aAA/B;;AAEA,MAAMI,IAAI,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAuBhB,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM;AAAA,OAACiB,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMmB,UAAU,GAAGlB,WAAW,CAAEmB,QAAD,IAAoB;AACjD,WAAOA,QAAQ,CAACC,GAAT,CACL,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,OAAjB;AAA0BC,MAAAA,OAA1B;AAAmCC,MAAAA;AAAnC,KAAD,KAAuE;AACrEV,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA,aAAO;AACLM,QAAAA,KADK;AAELC,QAAAA,MAFK;AAGLC,QAAAA,OAHK;AAILC,QAAAA,OAJK;AAKLC,QAAAA;AALK,OAAP;AAOD,KAVI,CAAP;AAYD,GAb6B,EAa3B,EAb2B,CAA9B;AAeA3B,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAMW,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMxB,iBAAiB,CAACyB,GAAlB,CAAsB,aAAtB,CAArB;AACAX,MAAAA,SAAS,CAACC,UAAU,CAACS,MAAD,CAAX,CAAT;AACD,KAHD;;AAKAD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACR,UAAD,CARM,CAAT;AAUA,SACE,oBACGJ,OAAO,IAAI,oBADd,EAEE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE;AAAjB,KACE,MAAC,OAAD,QACE,MAAC,OAAD,QACE,MAAC,YAAD,OADF,CADF,EAIE,MAAC,MAAD,QACE,MAAC,QAAD,QACIa,SAAD,IACCA,SAAS,CAACT,GAAV,CAAc,CAACU,MAAD,EAASC,CAAT,KACZ,MAAC,IAAD;AAAM,IAAA,GAAG,EAAED,MAAM,CAACT,KAAlB;AAAyB,IAAA,MAAM,EAAEU;AAAjC,IADF,CAFJ,CADF,CAJF,CADF,CAFF,CADF;AAqBD,CAlDD;;AAoDA,eAAelB,IAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\n\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n  Saved: string;\n  Watched: string;\n}\nexport const MoviesContext = React.createContext({} as ImoviesResponseFields[]);\nconst { Provider, Consumer } = MoviesContext;\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  const [movies, getMovies] = useState([]);\n\n  const reduceData = useCallback((response: {}[]) => {\n    return response.map(\n      ({ Title, Poster, Ratings, Watched, Saved }: ImoviesResponseFields) => {\n        isLoading(false);\n        return {\n          Title,\n          Poster,\n          Ratings,\n          Watched,\n          Saved,\n        };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      <Provider value={movies}>\n        <Wrapper>\n          <Filters>\n            <FiltersGroup />\n          </Filters>\n          <Movies>\n            <Consumer>\n              {(moviesObj) =>\n                moviesObj.map((fields, i) => (\n                  <Card key={fields.Title} cardId={i} />\n                ))\n              }\n            </Consumer>\n          </Movies>\n        </Wrapper>\n      </Provider>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}