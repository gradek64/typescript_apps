{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport styled, { css } from 'styled-components'; //styles\n\nconst AccordionHeader = styled.button`\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  padding: 10px;\n  justify-content: space-between;\n  border: none;\n  ${props => props.disabled && css`\n      color: black;\n    `}\n  &.active {\n    background-color: none;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\nconst AccordionContent = styled.div`\n  overflow: hidden;\n  height: auto;\n  width: 100%;\n  transition: height 0.6s ease;\n`;\nconst Chevron = styled.span`\n  transition: transform 0.6s ease;\n  &:before {\n    border-style: solid;\n    border-width: 0.1em 0.1em 0 0;\n    content: '';\n    display: inline-block;\n    height: 0.45em;\n    left: 0.15em;\n    position: relative;\n    top: 0.15em;\n    transform: rotate(45deg) translate(30%, 30%);\n    vertical-align: top;\n    width: 0.45em;\n  }\n\n  &.active {\n    transform: rotate(90deg) translate(-50%, 0);\n  }\n`;\n\nfunction Accordion(props) {\n  var _refContent$current;\n\n  const {\n    children,\n    open = false,\n    shevron = true,\n    clickDisable = false,\n    directional = false,\n    title\n  } = props;\n  const refContent = useRef(null);\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(open ? 'active' : '');\n  return __jsx(\"div\", {\n    className: \"accordion\"\n  }, (directional && !isOpen || !directional) && __jsx(AccordionHeader, {\n    className: `accordionHeader ${isOpen}`,\n    onClick: () => {\n      setOpen(!isOpen ? 'active' : '');\n    },\n    disabled: clickDisable\n  }, __jsx(\"span\", {\n    className: \"accordionTitle\"\n  }, title), shevron && __jsx(Chevron, {\n    className: `${isOpen}`\n  })), __jsx(AccordionContent, {\n    ref: refContent,\n    style: {\n      height: `${isOpen !== '' ? Number((_refContent$current = refContent.current) === null || _refContent$current === void 0 ? void 0 : _refContent$current.scrollHeight) : 0}px`\n    }\n  }, children, directional && __jsx(AccordionHeader, {\n    className: `accordionHeader ${isOpen}`,\n    onClick: () => {\n      setOpen(!isOpen ? 'active' : '');\n    },\n    disabled: clickDisable\n  }, __jsx(\"span\", {\n    className: \"accordionTitle\"\n  }, 'show less'))));\n}\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Accordion/Accordion.tsx"],"names":["React","useRef","useState","styled","css","AccordionHeader","button","props","disabled","AccordionContent","div","Chevron","span","Accordion","children","open","shevron","clickDisable","directional","title","refContent","isOpen","setOpen","height","Number","current","scrollHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAA8D,OAA9D;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B,C,CAEA;;AACA,MAAMC,eAAe,GAAGF,MAAM,CAACG,MAE5B;;;;;;;;IAQEC,KAAD,IACAA,KAAK,CAACC,QAAN,IACAJ,GAAI;;KAEF;;;;;;;CAdN;AAuBA,MAAMK,gBAAgB,GAAGN,MAAM,CAACO,GAAI;;;;;CAApC;AAOA,MAAMC,OAAO,GAAGR,MAAM,CAACS,IAAK;;;;;;;;;;;;;;;;;;;CAA5B;;AA6BA,SAASC,SAAT,CAAmBN,KAAnB,EAAkC;AAAA;;AAChC,QAAM;AACJO,IAAAA,QADI;AAEJC,IAAAA,IAAI,GAAG,KAFH;AAGJC,IAAAA,OAAO,GAAG,IAHN;AAIJC,IAAAA,YAAY,GAAG,KAJX;AAKJC,IAAAA,WAAW,GAAG,KALV;AAMJC,IAAAA;AANI,MAOFZ,KAPJ;AASA,QAAMa,UAAU,GAAGnB,MAAM,CAAiB,IAAjB,CAAzB;AACA,QAAM;AAAA,OAACoB,MAAD;AAAA,OAASC;AAAT,MAAoBpB,QAAQ,CAACa,IAAI,GAAG,QAAH,GAAc,EAAnB,CAAlC;AACA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAAEG,WAAW,IAAI,CAACG,MAAjB,IAA4B,CAACH,WAA9B,KACC,MAAC,eAAD;AACE,IAAA,SAAS,EAAG,mBAAkBG,MAAO,EADvC;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,OAAO,CAAC,CAACD,MAAD,GAAU,QAAV,GAAqB,EAAtB,CAAP;AACD,KAJH;AAKE,IAAA,QAAQ,EAAEJ;AALZ,KAOE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkCE,KAAlC,CAPF,EAQGH,OAAO,IAAI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAG,GAAEK,MAAO;AAA9B,IARd,CAFJ,EAaE,MAAC,gBAAD;AACE,IAAA,GAAG,EAAED,UADP;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,MAAM,EAAG,GACPF,MAAM,KAAK,EAAX,GAAgBG,MAAM,wBAACJ,UAAU,CAACK,OAAZ,wDAAC,oBAAoBC,YAArB,CAAtB,GAA2D,CAC5D;AAHI;AAFT,KAQGZ,QARH,EASGI,WAAW,IACV,MAAC,eAAD;AACE,IAAA,SAAS,EAAG,mBAAkBG,MAAO,EADvC;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,OAAO,CAAC,CAACD,MAAD,GAAU,QAAV,GAAqB,EAAtB,CAAP;AACD,KAJH;AAKE,IAAA,QAAQ,EAAEJ;AALZ,KAOE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkC,WAAlC,CAPF,CAVJ,CAbF,CADF;AAqCD;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useRef, useState, useMemo, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\n\n//styles\nconst AccordionHeader = styled.button<{\n  disabled: boolean;\n}>`\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  padding: 10px;\n  justify-content: space-between;\n  border: none;\n  ${(props) =>\n    props.disabled &&\n    css`\n      color: black;\n    `}\n  &.active {\n    background-color: none;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst AccordionContent = styled.div`\n  overflow: hidden;\n  height: auto;\n  width: 100%;\n  transition: height 0.6s ease;\n`;\n\nconst Chevron = styled.span`\n  transition: transform 0.6s ease;\n  &:before {\n    border-style: solid;\n    border-width: 0.1em 0.1em 0 0;\n    content: '';\n    display: inline-block;\n    height: 0.45em;\n    left: 0.15em;\n    position: relative;\n    top: 0.15em;\n    transform: rotate(45deg) translate(30%, 30%);\n    vertical-align: top;\n    width: 0.45em;\n  }\n\n  &.active {\n    transform: rotate(90deg) translate(-50%, 0);\n  }\n`;\n\ninterface PropsI {\n  children: React.ReactNode;\n  open?: boolean;\n  shevron?: boolean;\n  clickDisable?: boolean;\n  title: string;\n  directional?: boolean;\n}\nfunction Accordion(props: PropsI) {\n  const {\n    children,\n    open = false,\n    shevron = true,\n    clickDisable = false,\n    directional = false,\n    title,\n  } = props;\n\n  const refContent = useRef<HTMLDivElement>(null);\n  const [isOpen, setOpen] = useState(open ? 'active' : '');\n  return (\n    <div className=\"accordion\">\n      {((directional && !isOpen) || !directional) && (\n        <AccordionHeader\n          className={`accordionHeader ${isOpen}`}\n          onClick={() => {\n            setOpen(!isOpen ? 'active' : '');\n          }}\n          disabled={clickDisable}\n        >\n          <span className=\"accordionTitle\">{title}</span>\n          {shevron && <Chevron className={`${isOpen}`} />}\n        </AccordionHeader>\n      )}\n      <AccordionContent\n        ref={refContent}\n        style={{\n          height: `${\n            isOpen !== '' ? Number(refContent.current?.scrollHeight) : 0\n          }px`,\n        }}\n      >\n        {children}\n        {directional && (\n          <AccordionHeader\n            className={`accordionHeader ${isOpen}`}\n            onClick={() => {\n              setOpen(!isOpen ? 'active' : '');\n            }}\n            disabled={clickDisable}\n          >\n            <span className=\"accordionTitle\">{'show less'}</span>\n          </AccordionHeader>\n        )}\n      </AccordionContent>\n    </div>\n  );\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}