{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\n\n/* const all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length); */\nvar FilterContainer = styled.div(_templateObject());\nvar CheckBox = wrapperIconHOC(CheckBoxOutlineBlankOutlinedIcon, CheckBoxOutlinedIcon);\n\nfunction FiltersGroup() {\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies,\n      updateState = _useContext.updateState;\n\n  var callToAction = function callToAction(state) {\n    var yes = state.yes,\n        no = state.no;\n    updateState(yes ? 'True' : 'False');\n  };\n\n  console.log('movies', movies);\n\n  var displayFilters = function displayFilters(ArrOfFilters, length) {\n    return {\n      displayed: ArrOfFilters.slice(0, 5),\n      hidden: ArrOfFilters.slice(5, length)\n    };\n  };\n\n  var metaScoreStrings = '';\n\n  var calculateMetaScore = function calculateMetaScore(score) {\n    if (score < 60) {\n      metaScoreStrings = 'below60';\n    }\n\n    if (score > 60 && score < 80) {\n      metaScoreStrings = 'between6080';\n    }\n\n    if (score > 80 && score < 90) {\n      metaScoreStrings = 'between8090';\n    }\n\n    if (score > 90) {\n      metaScoreStrings = 'abbove90';\n    }\n\n    return metaScoreStrings;\n  };\n\n  var generate = function generate(value) {\n    return function (obj, element) {\n      if (value === 'Metascore') obj = generateFilters(calculateMetaScore(Number(element[value])), movies.length);else {\n        obj = generateFilters(element[value], movies.length);\n      }\n      return obj;\n    };\n  }; //static filters\n\n\n  var watched = Object.entries({\n    YES: movies.filter(function (_ref) {\n      var Watched = _ref.Watched;\n      return Watched === 'True';\n    }).length,\n    NO: movies.filter(function (_ref2) {\n      var Watched = _ref2.Watched;\n      return Watched === 'False';\n    }).length\n  });\n  var type = Object.entries({\n    MOVIE: movies.filter(function (_ref3) {\n      var Type = _ref3.Type;\n      return Type === 'movie';\n    }).length,\n    SERIES: movies.filter(function (_ref4) {\n      var Type = _ref4.Type;\n      return Type === 'series';\n    }).length\n  }); //genreted filters\n\n  var metasArr = Object.entries(movies.reduce(generate('Metascore'), {}));\n  var YearArr = Object.entries(movies.reduce(generate('Year'), {}));\n  var metasArrFormat = displayFilters(metasArr, metasArr.length);\n  var yearArrFormat = displayFilters(YearArr, YearArr.length);\n  var filtersLabels = {\n    WATCHED: displayFilters(watched, watched.length),\n    TYPE: displayFilters(type, type.length),\n    METASCORE: metasArrFormat,\n    YEAR: yearArrFormat\n  };\n  var sss = Object.entries(filtersLabels);\n  console.log('ssss', sss);\n  console.log('watched', watched);\n  var ss = false;\n  return __jsx(React.Fragment, null, ss && '...loadin', __jsx(FilterContainer, null, sss.map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        title = _ref6[0],\n        filters = _ref6[1];\n\n    return __jsx(\"div\", {\n      className: \"accordion\"\n    }, __jsx(Accordion, {\n      open: true,\n      shevron: false,\n      clickDisable: true,\n      title: title\n    }, __jsx(\"div\", null, filters['displayed'].map(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n          key = _ref8[0],\n          value = _ref8[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(CheckBox, {\n        callToAction: callToAction,\n        icon: \"yes\"\n      }), \"\".concat(key, \"(\").concat(value, \")\"));\n    }))), filters['hidden'].length > 0 && __jsx(Accordion, {\n      title: '...more',\n      directional: true,\n      shevron: false\n    }, filters['hidden'].map(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n          key = _ref10[0],\n          value = _ref10[1];\n\n      return __jsx(\"div\", {\n        key: key\n      }, __jsx(CheckBox, {\n        callToAction: callToAction,\n        icon: \"no\"\n      }), \"\".concat(key, \"(\").concat(value, \")\"));\n    })));\n  })));\n} //make sure it render only the amount of movies.lenght\n\n\nexport default React.memo(FiltersGroup);","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","useContext","CheckBoxOutlineBlankOutlinedIcon","CheckBoxOutlinedIcon","Accordion","generateFilters","styled","wrapperIconHOC","MoviesContext","FilterContainer","div","CheckBox","FiltersGroup","movies","updateState","callToAction","state","yes","no","console","log","displayFilters","ArrOfFilters","length","displayed","slice","hidden","metaScoreStrings","calculateMetaScore","score","generate","value","obj","element","Number","watched","Object","entries","YES","filter","Watched","NO","type","MOVIE","Type","SERIES","metasArr","reduce","YearArr","metasArrFormat","yearArrFormat","filtersLabels","WATCHED","TYPE","METASCORE","YEAR","sss","ss","map","title","filters","key","memo"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nimport { MoviesContext } from '../../../pages/index';\nimport { SSL_OP_EPHEMERAL_RSA } from 'constants';\n\n/* const all = Object.entries(generateFilters());\nconst displayed1 = all.slice(0, 5);\nconst hidden1 = all.slice(5, all.length); */\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst CheckBox = wrapperIconHOC(\n  CheckBoxOutlineBlankOutlinedIcon,\n  CheckBoxOutlinedIcon\n);\n\nfunction FiltersGroup() {\n  const { movies, updateState } = useContext(MoviesContext);\n\n  const callToAction = (state) => {\n    const { yes, no } = state;\n    updateState(yes ? 'True' : 'False');\n  };\n  console.log('movies', movies);\n\n  const displayFilters = (\n    ArrOfFilters: [string, unknown][],\n    length: number\n  ) => ({\n    displayed: ArrOfFilters.slice(0, 5),\n    hidden: ArrOfFilters.slice(5, length),\n  });\n\n  let metaScoreStrings = '';\n  const calculateMetaScore = (score: number) => {\n    if (score < 60) {\n      metaScoreStrings = 'below60';\n    }\n    if (score > 60 && score < 80) {\n      metaScoreStrings = 'between6080';\n    }\n    if (score > 80 && score < 90) {\n      metaScoreStrings = 'between8090';\n    }\n    if (score > 90) {\n      metaScoreStrings = 'abbove90';\n    }\n    return metaScoreStrings;\n  };\n\n  const generate = (value: string) => (obj: {}, element: {}) => {\n    if (value === 'Metascore')\n      obj = generateFilters(\n        calculateMetaScore(Number(element[value])),\n        movies.length\n      );\n    else {\n      obj = generateFilters(element[value], movies.length);\n    }\n    return obj;\n  };\n\n  //static filters\n  const watched = Object.entries({\n    YES: movies.filter(({ Watched }) => Watched === 'True').length,\n    NO: movies.filter(({ Watched }) => Watched === 'False').length,\n  });\n  const type = Object.entries({\n    MOVIE: movies.filter(({ Type }) => Type === 'movie').length,\n    SERIES: movies.filter(({ Type }) => Type === 'series').length,\n  });\n  //genreted filters\n  const metasArr = Object.entries(movies.reduce(generate('Metascore'), {}));\n  const YearArr = Object.entries(movies.reduce(generate('Year'), {}));\n\n  const metasArrFormat = displayFilters(metasArr, metasArr.length);\n  const yearArrFormat = displayFilters(YearArr, YearArr.length);\n\n  const filtersLabels = {\n    WATCHED: displayFilters(watched, watched.length),\n    TYPE: displayFilters(type, type.length),\n    METASCORE: metasArrFormat,\n    YEAR: yearArrFormat,\n  };\n\n  const sss = Object.entries(filtersLabels);\n\n  console.log('ssss', sss);\n  console.log('watched', watched);\n\n  const ss = false;\n  return (\n    <>\n      {ss && '...loadin'}\n      <FilterContainer>\n        {sss.map(([title, filters]) => (\n          <div className=\"accordion\">\n            <Accordion open shevron={false} clickDisable={true} title={title}>\n              <div>\n                {filters['displayed'].map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"yes\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </div>\n            </Accordion>\n            {filters['hidden'].length > 0 && (\n              <Accordion title={'...more'} directional={true} shevron={false}>\n                {filters['hidden'].map(([key, value]) => (\n                  <div key={key}>\n                    <CheckBox callToAction={callToAction} icon=\"no\" />\n                    {`${key}(${value})`}\n                  </div>\n                ))}\n              </Accordion>\n            )}\n          </div>\n        ))}\n      </FilterContainer>\n    </>\n  );\n}\n\n//make sure it render only the amount of movies.lenght\nexport default React.memo(FiltersGroup);\n"]},"metadata":{},"sourceType":"module"}