{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  max-width: 200px;\n  max-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${props => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\n\nfunction Card({\n  cardId\n}) {\n  const {\n    0: backgroundColor,\n    1: setBgColor\n  } = useState(cardColorMapping.default);\n  const {\n    0: count,\n    1: setCount\n  } = useState(0); //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n\n  const setColor = ({\n    watch,\n    favorite\n  }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        console.log('cardColorMapping.default');\n        break;\n\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n\n      default:\n        break;\n    }\n  }; //}, []);\n\n\n  const increaseCount = value => {\n    setCount(value);\n  };\n\n  const {\n    movies\n  } = useContext(MoviesContext);\n  const {\n    Watched,\n    Saved,\n    Title,\n    Poster: PosterURL,\n    Ratings\n  } = movies[cardId];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase())\n  };\n  useEffect(() => {\n    setColor(_objectSpread({}, movieStatus));\n  }, []);\n  return __jsx(CardContainer, {\n    color: backgroundColor,\n    key: Title\n  }, __jsx(\"p\", null, `count:${count}`), __jsx(CardHeader, null, __jsx(IconsStateManagement, _extends({\n    callToActionCardColor: setColor,\n    callToActionCardCount: increaseCount\n  }, movieStatus))), __jsx(Poster, null, __jsx(PosterImage, {\n    imgURL: PosterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: calculateAvarageRatings(Ratings)\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Card/Card.tsx"],"names":["cardColorMapping","default","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","styled","div","props","Poster","PosterImage","imgURL","CardHeader","CardFooter","cardId","setBgColor","useState","setCount","setColor","favorite","console","watch","increaseCount","value","movies","useContext","Ratings","movieStatus","JSON","Watched","Saved","useEffect","Title","count","PosterURL","calculateAvarageRatings"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  max-width: 200px;\n  max-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  imgURL: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\ninterface Props {\n  cardId: number;\n}\nfunction Card({ cardId }: Props) {\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n  const [count, setCount] = useState(0);\n\n  //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        console.log('cardColorMapping.default')\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  }\n  //}, []);\n\n  const increaseCount = (value) => {\n    setCount(value)\n  }\n\n\n  const { movies } = useContext(MoviesContext);\n  const { Watched, Saved, Title, Poster: PosterURL, Ratings } = movies[cardId];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  };\n\n  useEffect(() => {\n    setColor({ ...movieStatus })\n  }, [])\n\n  return (\n    <CardContainer color={backgroundColor} key={Title}>\n      <p>{`count:${count}`}</p>\n      <CardHeader>\n        <IconsStateManagement\n          callToActionCardColor={setColor}\n          callToActionCardCount={increaseCount}\n          {...movieStatus}\n        />\n      </CardHeader>\n      <Poster>\n        <PosterImage imgURL={PosterURL} />\n      </Poster>\n      <CardFooter>\n        <RatingStarComp rating={calculateAvarageRatings(Ratings)} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}