{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nconst RatingContainer = styled.div`\n  position: relative;\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n  background-color: orange;\n`;\nconst RatingSymbol = styled.div`\n  background-color: white;\n  margin: 0 auto;\n  position: absolute;\n  mix-blend-mode: screen;\n`;\nconst symbolMap = {\n  star: '&#9733;'\n};\n\nfunction Rating(props) {\n  const {\n    rating\n  } = props;\n  const allStars = 5;\n  const calculateRating = String(rating).split('.');\n  const wholeStars = Number(calculateRating[0]);\n  const halfStar = Number(calculateRating[1]);\n\n  const hasHalfStar = halfStar => halfStar === 0 ? 0 : 1;\n\n  const emptyStars = allStars - wholeStars - hasHalfStar(halfStar);\n\n  const displayStars = () => {\n    const startMap = {\n      wholeStar: __jsx(StarIcon, null),\n      halfStar: __jsx(StarHalfIcon, null),\n      emptyStar: __jsx(StarBorderOutlinedIcon, null)\n    };\n    const wholeStartsss = Array(allStars).fill(startMap['wholeStar']);\n    console.log('wholeStartsss', wholeStartsss);\n    return;\n  };\n\n  displayStars();\n  return __jsx(RatingContainer, null, __jsx(RatingSymbol, null, [1, 2, 3, 4, 5].map(symbol => __jsx(StarIcon, null))));\n}\n\nexport default Rating;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/RatingStarComp/rating.tsx"],"names":["React","styled","StarIcon","StarHalfIcon","StarBorderOutlinedIcon","RatingContainer","div","RatingSymbol","symbolMap","star","Rating","props","rating","allStars","calculateRating","String","split","wholeStars","Number","halfStar","hasHalfStar","emptyStars","displayStars","startMap","wholeStar","emptyStar","wholeStartsss","Array","fill","console","log","map","symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAEA,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAI;;;;;;CAAnC;AAOA,MAAMC,YAAY,GAAGN,MAAM,CAACK,GAAI;;;;;CAAhC;AAMA,MAAME,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AADU,CAAlB;;AAOA,SAASC,MAAT,CAAgBC,KAAhB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AAEA,QAAME,QAAQ,GAAG,CAAjB;AACA,QAAMC,eAAe,GAAGC,MAAM,CAACH,MAAD,CAAN,CAAeI,KAAf,CAAqB,GAArB,CAAxB;AACA,QAAMC,UAAU,GAAGC,MAAM,CAACJ,eAAe,CAAC,CAAD,CAAhB,CAAzB;AACA,QAAMK,QAAQ,GAAGD,MAAM,CAACJ,eAAe,CAAC,CAAD,CAAhB,CAAvB;;AACA,QAAMM,WAAW,GAAID,QAAD,IAAuBA,QAAQ,KAAK,CAAb,GAAiB,CAAjB,GAAqB,CAAhE;;AACA,QAAME,UAAU,GAAGR,QAAQ,GAAGI,UAAX,GAAwBG,WAAW,CAACD,QAAD,CAAtD;;AAEA,QAAMG,YAAY,GAAG,MAAM;AACzB,UAAMC,QAAQ,GAAG;AACfC,MAAAA,SAAS,EAAE,MAAC,QAAD,OADI;AAEfL,MAAAA,QAAQ,EAAE,MAAC,YAAD,OAFK;AAGfM,MAAAA,SAAS,EAAE,MAAC,sBAAD;AAHI,KAAjB;AAKA,UAAMC,aAAa,GAAGC,KAAK,CAACd,QAAD,CAAL,CAAgBe,IAAhB,CAAqBL,QAAQ,CAAC,WAAD,CAA7B,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,aAA7B;AACA;AACD,GATD;;AAUAJ,EAAAA,YAAY;AACZ,SACE,MAAC,eAAD,QACE,MAAC,YAAD,QACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBS,GAAhB,CAAqBC,MAAD,IACnB,MAAC,QAAD,OADD,CADH,CADF,CADF;AASD;;AAED,eAAetB,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\n\nconst RatingContainer = styled.div`\n  position: relative;\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n  background-color: orange;\n`;\nconst RatingSymbol = styled.div`\n  background-color: white;\n  margin: 0 auto;\n  position: absolute;\n  mix-blend-mode: screen;\n`;\nconst symbolMap = {\n  star: '&#9733;',\n};\ninterface PropsInt {\n  rating: number;\n}\n\nfunction Rating(props: PropsInt) {\n  const { rating } = props;\n\n  const allStars = 5;\n  const calculateRating = String(rating).split('.');\n  const wholeStars = Number(calculateRating[0]);\n  const halfStar = Number(calculateRating[1]);\n  const hasHalfStar = (halfStar: number) => (halfStar === 0 ? 0 : 1);\n  const emptyStars = allStars - wholeStars - hasHalfStar(halfStar);\n\n  const displayStars = () => {\n    const startMap = {\n      wholeStar: <StarIcon />,\n      halfStar: <StarHalfIcon />,\n      emptyStar: <StarBorderOutlinedIcon />,\n    };\n    const wholeStartsss = Array(allStars).fill(startMap['wholeStar']);\n    console.log('wholeStartsss', wholeStartsss);\n    return;\n  };\n  displayStars();\n  return (\n    <RatingContainer>\n      <RatingSymbol>\n        {[1, 2, 3, 4, 5].map((symbol) => (\n          <StarIcon />\n        ))}\n      </RatingSymbol>\n    </RatingContainer>\n  );\n}\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}