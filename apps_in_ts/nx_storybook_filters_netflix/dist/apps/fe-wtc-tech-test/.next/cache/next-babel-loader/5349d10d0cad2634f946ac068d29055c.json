{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n/* ... inside the render or return of your component ... */\n\nconst VisibilityWatchedIcon = wrapperIconHOC(VisibilityIcon, VisibilityOffOutlinedIcon);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon); //build card color object for each card\n\nconst cardState = {\n  watch: false,\n  favorite: false\n};\nlet previousState;\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    _defineProperty(this, \"setColor\", ({\n      watch,\n      favorite\n    }) => {\n      switch (true) {\n        case !watch && !favorite:\n          //setBgColor(cardColorMapping.default);\n          console.log('notWatchednotSaved');\n          break;\n\n        case watch && !favorite:\n          //setBgColor(cardColorMapping.watchedNotSaved);\n          console.log('watchedNotSaved');\n          break;\n\n        case !watch && favorite:\n          //setBgColor(cardColorMapping.savedNotWatched);\n          console.log('savedNotWatched');\n          break;\n\n        case watch && favorite:\n          //setBgColor(cardColorMapping.watchedAndSaved);\n          console.log('watchedAndSaved');\n          break;\n      }\n    });\n\n    _defineProperty(this, \"callToAction\", state => {\n      let cardStateChange;\n\n      if (!previousState) {\n        cardStateChange = _objectSpread({}, cardState, {}, state);\n      } else {\n        cardStateChange = _objectSpread({}, previousState, {}, state);\n      }\n\n      previousState = cardStateChange;\n      console.log('state ', cardStateChange); //setColor(cardStateChange);\n    });\n\n    this.state = {\n      backgroundColor: cardColorMapping.default\n    };\n  } //const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n\n  render() {\n    const {\n      Poster: posterURL,\n      Title\n    } = this.props;\n    return __jsx(CardContainer, {\n      color: cardColorMapping.default\n    }, __jsx(CardHeader, null, __jsx(VisibilityWatchedIcon, {\n      callToAction: this.callToAction,\n      icon: \"watch\"\n    }), __jsx(VisibilitySavedIcon, {\n      callToAction: this.callToAction,\n      icon: \"favorite\"\n    })), __jsx(Poster, null, __jsx(PosterImage, {\n      src: posterURL,\n      alt: Title\n    })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n      rating: 20\n    })));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/Card.tsx"],"names":["cardColorMapping","default","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","styled","div","props","Poster","PosterImage","img","CardHeader","CardFooter","VisibilityWatchedIcon","wrapperIconHOC","VisibilitySavedIcon","cardState","watch","favorite","React","constructor","backgroundColor","console","state","cardStateChange","previousState","render","Title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\n\ninterface CardColorChange {\n  color: string;\n}\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<CardColorChange>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\n\nconst PosterImage = styled.img`\n  max-width: 100%;\n  height: auto;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px;\n`;\n\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n\n/* ... inside the render or return of your component ... */\n\ninterface Props {\n  Title: string;\n  Poster: string;\n  cardNumber: string;\n}\n\nconst VisibilityWatchedIcon = wrapperIconHOC(\n  VisibilityIcon,\n  VisibilityOffOutlinedIcon\n);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n\n//build card color object for each card\n\nconst cardState = { watch: false, favorite: false };\nlet previousState: { watch: boolean; favorite: boolean };\nclass Card extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { backgroundColor: cardColorMapping.default };\n  }\n\n  //const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        //setBgColor(cardColorMapping.default);\n        console.log('notWatchednotSaved');\n        break;\n      case watch && !favorite:\n        //setBgColor(cardColorMapping.watchedNotSaved);\n        console.log('watchedNotSaved');\n        break;\n      case !watch && favorite:\n        //setBgColor(cardColorMapping.savedNotWatched);\n        console.log('savedNotWatched');\n        break;\n      case watch && favorite:\n        //setBgColor(cardColorMapping.watchedAndSaved);\n        console.log('watchedAndSaved');\n        break;\n    }\n  };\n\n  callToAction = (state: object) => {\n    let cardStateChange: { watch: boolean; favorite: boolean };\n    if (!previousState) {\n      cardStateChange = { ...cardState, ...state };\n    } else {\n      cardStateChange = { ...previousState, ...state };\n    }\n    previousState = cardStateChange;\n\n    console.log('state ', cardStateChange);\n    //setColor(cardStateChange);\n  };\n\n  render() {\n    const { Poster: posterURL, Title } = this.props;\n    return (\n      <CardContainer color={cardColorMapping.default}>\n        <CardHeader>\n          <VisibilityWatchedIcon\n            callToAction={this.callToAction}\n            icon=\"watch\"\n          />\n          <VisibilitySavedIcon\n            callToAction={this.callToAction}\n            icon=\"favorite\"\n          />\n        </CardHeader>\n        <Poster>\n          <PosterImage src={posterURL} alt={Title} />\n        </Poster>\n        <CardFooter>\n          <RatingStarComp rating={20} />\n        </CardFooter>\n      </CardContainer>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}