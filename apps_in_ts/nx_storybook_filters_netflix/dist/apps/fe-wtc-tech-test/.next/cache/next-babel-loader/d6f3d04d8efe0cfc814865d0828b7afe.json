{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar generateFilters = function generateFilters() {\n  var actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  var actors2 = 'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed'; //first combine actors results\n\n  var allActors = [].concat(_toConsumableArray(actors.split(',')), _toConsumableArray(actors2.split(',')));\n  console.log('allActors', allActors); //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the code\n\n  allActors.map(function (actor) {\n    //duplicates\n    if (allActors.includes(actor)) {\n      console.log('duplicate actor', actor);\n    }\n  });\n};\n\nexport { generateFilters };","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/generateFilters.tsx"],"names":["generateFilters","actors","actors2","allActors","split","console","log","map","actor","includes"],"mappings":";;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,MAAM,GAAG,6DAAf;AACA,MAAMC,OAAO,GACX,4EADF,CAF4B,CAK5B;;AAEA,MAAMC,SAAS,gCAAOF,MAAM,CAACG,KAAP,CAAa,GAAb,CAAP,sBAA6BF,OAAO,CAACE,KAAR,CAAc,GAAd,CAA7B,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,SAAzB,EAR4B,CAU5B;AACA;;AAEAA,EAAAA,SAAS,CAACI,GAAV,CAAc,UAACC,KAAD,EAAW;AACvB;AACA,QAAIL,SAAS,CAACM,QAAV,CAAmBD,KAAnB,CAAJ,EAA+B;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,KAA/B;AACD;AACF,GALD;AAMD,CAnBD;;AAqBA,SAASR,eAAT","sourcesContent":["const generateFilters = () => {\n  const actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  const actors2 =\n    'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n\n  //first combine actors results\n\n  const allActors = [...actors.split(','), ...actors2.split(',')];\n  console.log('allActors', allActors);\n\n  //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the code\n\n  allActors.map((actor) => {\n    //duplicates\n    if (allActors.includes(actor)) {\n      console.log('duplicate actor', actor);\n    }\n  });\n};\n\nexport { generateFilters };\n"]},"metadata":{},"sourceType":"module"}