{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters'; // custom\n\nconst InputComp = props => __jsx(\"input\", _extends({\n  type: \"text\"\n}, props));\n\nconst style = {\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '10px',\n  border: '1px dotted green'\n};\n/* .filter((e, i) => i > 4)} */\n\nconst all = Object.entries(generateFilters());\nconst displayed = all.filter(([key, value], i) => i < 5 && __jsx(React.Fragment, null, __jsx(\"input\", {\n  type: \"radio\"\n}), `${key}(${value})`));\nconst hidden = all.filter(([key, value], i) => i > 5 && __jsx(React.Fragment, null, __jsx(\"input\", {\n  type: \"radio\"\n}), `${key}(${value})`));\n\nconst calculateHeight = ({\n  name: string,\n  value: number\n}) => {\n  console.log({\n    name: string,\n    value: number\n  }.entries());\n};\n\nconsole.log('hiddent', hidden);\n\nfunction FiltersGroup() {\n  return __jsx(\"div\", null, __jsx(Accordion, {\n    calculateHeight: calculateHeight,\n    name: \"greg\"\n  }, __jsx(\"div\", null, displayed, \" \"), __jsx(Accordion, {\n    calculateHeight: calculateHeight,\n    name: \"mike\"\n  }, __jsx(\"div\", null, hidden))));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","Accordion","generateFilters","InputComp","props","style","display","flexDirection","padding","border","all","Object","entries","displayed","filter","key","value","i","hidden","calculateHeight","name","string","number","console","log","FiltersGroup"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,QAAgC,iCAAhC,C,CAEA;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAA4B;AAAO,EAAA,IAAI,EAAC;AAAZ,GAAuBA,KAAvB,EAA9C;;AAEA,MAAMC,KAA0B,GAAG;AACjCC,EAAAA,OAAO,EAAE,MADwB;AAEjCC,EAAAA,aAAa,EAAE,QAFkB;AAGjCC,EAAAA,OAAO,EAAE,MAHwB;AAIjCC,EAAAA,MAAM,EAAE;AAJyB,CAAnC;AAMA;;AACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeV,eAAe,EAA9B,CAAZ;AACA,MAAMW,SAAS,GAAGH,GAAG,CAACI,MAAJ,CAChB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,EAAeC,CAAf,KACEA,CAAC,GAAG,CAAJ,IACE,4BACE;AAAO,EAAA,IAAI,EAAC;AAAZ,EADF,EAEI,GAAEF,GAAI,IAAGC,KAAM,GAFnB,CAHY,CAAlB;AASA,MAAME,MAAM,GAAGR,GAAG,CAACI,MAAJ,CACb,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,EAAeC,CAAf,KACEA,CAAC,GAAG,CAAJ,IACE,4BACE;AAAO,EAAA,IAAI,EAAC;AAAZ,EADF,EAEI,GAAEF,GAAI,IAAGC,KAAM,GAFnB,CAHS,CAAf;;AASA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC,MAAR;AAAgBL,EAAAA,KAAK,EAAEM;AAAvB,CAAD,KAAqC;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBL,IAAAA,KAAK,EAAEM;AAAvB,IAAgCV,OAAhC,EAAZ;AACD,CAFD;;AAGAW,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,MAAvB;;AACA,SAASO,YAAT,GAAwB;AACtB,SACE,mBACE,MAAC,SAAD;AAAW,IAAA,eAAe,EAAEN,eAA5B;AAA6C,IAAA,IAAI,EAAC;AAAlD,KACE,mBAAMN,SAAN,MADF,EAEE,MAAC,SAAD;AAAW,IAAA,eAAe,EAAEM,eAA5B;AAA6C,IAAA,IAAI,EAAC;AAAlD,KACE,mBAAMD,MAAN,CADF,CAFF,CADF,CADF;AAUD;;AAED,eAAeO,YAAf","sourcesContent":["import React from 'react';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\n\n// custom\nconst InputComp = (props: { key: string }) => <input type=\"text\" {...props} />;\n\nconst style: React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '10px',\n  border: '1px dotted green',\n};\n/* .filter((e, i) => i > 4)} */\nconst all = Object.entries(generateFilters());\nconst displayed = all.filter(\n  ([key, value], i) =>\n    i < 5 && (\n      <>\n        <input type=\"radio\" />\n        {`${key}(${value})`}\n      </>\n    )\n);\nconst hidden = all.filter(\n  ([key, value], i) =>\n    i > 5 && (\n      <>\n        <input type=\"radio\" />\n        {`${key}(${value})`}\n      </>\n    )\n);\nconst calculateHeight = ({ name: string, value: number }) => {\n  console.log({ name: string, value: number }.entries());\n};\nconsole.log('hiddent', hidden);\nfunction FiltersGroup() {\n  return (\n    <div>\n      <Accordion calculateHeight={calculateHeight} name=\"greg\">\n        <div>{displayed} </div>\n        <Accordion calculateHeight={calculateHeight} name=\"mike\">\n          <div>{hidden}</div>\n        </Accordion>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}