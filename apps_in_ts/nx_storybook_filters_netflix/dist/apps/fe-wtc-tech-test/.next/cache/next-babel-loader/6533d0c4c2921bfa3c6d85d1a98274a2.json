{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar generateFilters = function generateFilters() {\n  var actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  var actors2 = 'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n  var actors3 = 'Harrison Ford';\n  var actors4 = 'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed'; //first combine actors results\n\n  var allActors = [].concat(_toConsumableArray(actors.split(',')), _toConsumableArray(actors2.split(',')), _toConsumableArray(actors3.split(',')), _toConsumableArray(actors4.split(','))); //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the cod\n\n  function findDuplicate(arr) {\n    var object = {};\n    arr.forEach(function (item) {\n      var trimStirng = item.trim();\n      if (!object[trimStirng]) object[trimStirng] = 0;\n      object[trimStirng] += 1;\n    });\n    return object;\n  }\n\n  return findDuplicate(allActors);\n};\n\nexport { generateFilters };","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/generateFilters.tsx"],"names":["generateFilters","actors","actors2","actors3","actors4","allActors","split","findDuplicate","arr","object","forEach","item","trimStirng","trim"],"mappings":";;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,MAAM,GAAG,6DAAf;AACA,MAAMC,OAAO,GACX,4EADF;AAEA,MAAMC,OAAO,GAAG,eAAhB;AACA,MAAMC,OAAO,GACX,4EADF,CAL4B,CAQ5B;;AAEA,MAAMC,SAAS,gCACVJ,MAAM,CAACK,KAAP,CAAa,GAAb,CADU,sBAEVJ,OAAO,CAACI,KAAR,CAAc,GAAd,CAFU,sBAGVH,OAAO,CAACG,KAAR,CAAc,GAAd,CAHU,sBAIVF,OAAO,CAACE,KAAR,CAAc,GAAd,CAJU,EAAf,CAV4B,CAiB5B;AACA;;AAEA,WAASC,aAAT,CAAuBC,GAAvB,EAAsC;AACpC,QAAMC,MAAM,GAAG,EAAf;AACAD,IAAAA,GAAG,CAACE,OAAJ,CAAY,UAAUC,IAAV,EAAwB;AAClC,UAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,EAAnB;AACA,UAAI,CAACJ,MAAM,CAACG,UAAD,CAAX,EAAyBH,MAAM,CAACG,UAAD,CAAN,GAAqB,CAArB;AACzBH,MAAAA,MAAM,CAACG,UAAD,CAAN,IAAsB,CAAtB;AACD,KAJD;AAKA,WAAOH,MAAP;AACD;;AAED,SAAOF,aAAa,CAACF,SAAD,CAApB;AACD,CA/BD;;AAiCA,SAASL,eAAT","sourcesContent":["const generateFilters = () => {\n  const actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  const actors2 =\n    'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n  const actors3 = 'Harrison Ford';\n  const actors4 =\n    'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n\n  //first combine actors results\n\n  const allActors = [\n    ...actors.split(','),\n    ...actors2.split(','),\n    ...actors3.split(','),\n    ...actors4.split(','),\n  ];\n\n  //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the cod\n\n  function findDuplicate(arr: string[]) {\n    const object = {};\n    arr.forEach(function (item: string) {\n      const trimStirng = item.trim();\n      if (!object[trimStirng]) object[trimStirng] = 0;\n      object[trimStirng] += 1;\n    });\n    return object;\n  }\n\n  return findDuplicate(allActors);\n};\n\nexport { generateFilters };\n"]},"metadata":{},"sourceType":"module"}