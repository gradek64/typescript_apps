{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useIconsState from './useIconsState';\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\nlet prevState;\n\nconst wrapperComponentMethod = (Icon1, Icon2) => ({\n  callToAction,\n  icon,\n  obj,\n  cardNumber\n}) => {\n  const {\n    0: iconVisiblity,\n    1: setVisible\n  } = useState(false);\n  const {\n    iconsState,\n    setIconsState\n  } = useIconsState(cardNumber);\n\n  const iconCTA = () => {\n    setVisible(!iconVisiblity);\n    setIconsState(prev => {\n      return _objectSpread({}, prev, {}, iconsState);\n    });\n    callToAction({\n      [cardNumber]: _objectSpread({}, obj, {\n        [icon]: !iconVisiblity\n      })\n    });\n  };\n\n  return __jsx(IconContainer, {\n    onClick: iconCTA\n  }, !iconVisiblity && __jsx(Icon1, null), iconVisiblity && __jsx(Icon2, null));\n};\n\nexport default wrapperComponentMethod;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/IconCTA/IconAction.tsx"],"names":["IconContainer","styled","div","wrapperComponentMethod","cardNumber","setVisible","useState","setIconsState","useIconsState","iconCTA","prev","callToAction","iconVisiblity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AAEA,MAAMA,aAAa,GAAGC,MAAM,CAACC,GAAI;;CAAjC;AASA,IAAA,SAAA;;AACA,MAAMC,sBAAsB,GAAG,CAAA,KAAA,EAAA,KAAA,KAAsC,CAAC;AAAA,EAAA,YAAA;AAAA,EAAA,IAAA;AAAA,EAAA,GAAA;AAIpEC,EAAAA;AAJoE,CAAD,KAKrD;AACd,QAAM;AAAA,OAAA,aAAA;AAAA,OAAgBC;AAAhB,MAA8BC,QAAQ,CAA5C,KAA4C,CAA5C;AACA,QAAM;AAAA,IAAA,UAAA;AAAcC,IAAAA;AAAd,MAAgCC,aAAa,CAAnD,UAAmD,CAAnD;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpBJ,IAAAA,UAAU,CAAC,CAAXA,aAAU,CAAVA;AAEAE,IAAAA,aAAa,CAAEG,IAAD,IAAU;AACtB,aAAA,aAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,UAAA,CAAA;AADFH,KAAa,CAAbA;AAGAI,IAAAA,YAAY,CAAC;AAAE,OAAA,UAAA,GAAA,aAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAwB,SAAA,IAAA,GAAQ,CAACC;AAAjC,OAAA;AAAF,KAAD,CAAZD;AANF,GAAA;;AAQA,SACE,KAAA,CAAA,aAAA,EAAA;AAAe,IAAA,OAAO,EAAEF;AAAxB,GAAA,EACG,CAAA,aAAA,IAAkB,KAAA,CAAA,KAAA,EADrB,IACqB,CADrB,EAEGG,aAAa,IAAI,KAAA,CAAA,KAAA,EAHtB,IAGsB,CAFpB,CADF;AAhBF,CAAA;;AAwBA,eAAA,sBAAA","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useIconsState from './useIconsState';\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\ninterface PropsInt {\n  callToAction: (state: object) => void;\n  icon: string;\n  obj: { watch: boolean; favorite: boolean };\n  cardNumber: string;\n}\nlet prevState;\nconst wrapperComponentMethod = (Icon1: React.FC, Icon2: React.FC) => ({\n  callToAction,\n  icon,\n  obj,\n  cardNumber,\n}: PropsInt) => {\n  const [iconVisiblity, setVisible] = useState(false);\n  const { iconsState, setIconsState } = useIconsState(cardNumber);\n  const iconCTA = () => {\n    setVisible(!iconVisiblity);\n\n    setIconsState((prev) => {\n      return { ...prev, ...iconsState };\n    });\n    callToAction({ [cardNumber]: { ...obj, [icon]: !iconVisiblity } });\n  };\n  return (\n    <IconContainer onClick={iconCTA}>\n      {!iconVisiblity && <Icon1 />}\n      {iconVisiblity && <Icon2 />}\n    </IconContainer>\n  );\n};\n\nexport default wrapperComponentMethod;\n"]},"metadata":{},"sourceType":"module"}