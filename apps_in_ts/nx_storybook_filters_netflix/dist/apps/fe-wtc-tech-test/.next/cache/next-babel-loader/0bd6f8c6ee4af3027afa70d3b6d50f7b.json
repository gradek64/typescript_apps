{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 100%;\\n  padding: 0 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nvar RatingContainer = styled.div(_templateObject());\n\nfunction Rating(props) {\n  var rating = props.rating;\n  var allStars = 5;\n  var percentage = String(rating * allStars / 100);\n  var calculateRating = percentage.split('.');\n  var wholeStars = Number(calculateRating[0]);\n  var halfStar = Number(calculateRating[1]) === 0 ? 0 : 1;\n  var emptyStars = allStars - wholeStars - halfStar;\n\n  var displayStars = function displayStars() {\n    var startMap = {\n      wholeStar: function wholeStar(props) {\n        return __jsx(StarIcon, props);\n      },\n      halfStar: function halfStar(props) {\n        return __jsx(StarHalfIcon, props);\n      },\n      emptyStar: function emptyStar(props) {\n        return __jsx(StarBorderOutlinedIcon, props);\n      }\n    };\n    var wholeStarts = Array(wholeStars).fill(startMap['wholeStar']);\n    var halfStarts = Array(halfStar).fill(startMap['halfStar']);\n    var emptyStarts = Array(emptyStars).fill(startMap['emptyStar']);\n    return [].concat(_toConsumableArray(wholeStarts), _toConsumableArray(halfStarts), _toConsumableArray(emptyStarts));\n  };\n\n  displayStars();\n  return __jsx(RatingContainer, null, displayStars().map(function (Comp, i) {\n    return __jsx(Comp, {\n      key: \"star\".concat(i)\n    });\n  }), __jsx(\"span\", null, \"(\", String(percentage), \")\"));\n}\n\nexport default Rating;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/RatingStarComp/Rating.tsx"],"names":["RatingContainer","styled","rating","props","allStars","percentage","String","calculateRating","wholeStars","Number","halfStar","emptyStars","displayStars","startMap","wholeStar","emptyStar","wholeStarts","Array","halfStarts","emptyStarts"],"mappings":";;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,OAAA,QAAA,MAAA,yBAAA;AACA,OAAA,YAAA,MAAA,6BAAA;AACA,OAAA,sBAAA,MAAA,uCAAA;AAEA,IAAMA,eAAe,GAAGC,MAAM,CAAT,GAAGA,CAAH,eAArB,EAAwBA,CAAxB;;AAYA,SAAA,MAAA,CAAA,KAAA,EAAiC;AAAA,MACvBC,MADuB,GACZC,KADY,CAAA,MAAA;AAG/B,MAAMC,QAAQ,GAAd,CAAA;AACA,MAAMC,UAAU,GAAGC,MAAM,CAAEJ,MAAM,GAAP,QAACA,GAA3B,GAAyB,CAAzB;AACA,MAAMK,eAAe,GAAGF,UAAU,CAAVA,KAAAA,CAAxB,GAAwBA,CAAxB;AACA,MAAMG,UAAU,GAAGC,MAAM,CAACF,eAAe,CAAzC,CAAyC,CAAhB,CAAzB;AACA,MAAMG,QAAQ,GAAGD,MAAM,CAACF,eAAe,CAAtBE,CAAsB,CAAhB,CAANA,KAAAA,CAAAA,GAAAA,CAAAA,GAAjB,CAAA;AACA,MAAME,UAAU,GAAGP,QAAQ,GAARA,UAAAA,GAAnB,QAAA;;AAEA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,QAAQ,GAAG;AACfC,MAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,eAA4B,KAAA,CAAA,QAAA,EAA5B,KAA4B,CAA5B;AADI,OAAA;AAEfJ,MAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAA;AAAA,eAA4B,KAAA,CAAA,YAAA,EAA5B,KAA4B,CAA5B;AAFK,OAAA;AAGfK,MAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,eACT,KAAA,CAAA,sBAAA,EADS,KACT,CADS;AAAA;AAHI,KAAjB;AAOA,QAAMC,WAAW,GAAGC,KAAK,CAALA,UAAK,CAALA,CAAAA,IAAAA,CAAuBJ,QAAQ,CAAnD,WAAmD,CAA/BI,CAApB;AACA,QAAMC,UAAU,GAAGD,KAAK,CAALA,QAAK,CAALA,CAAAA,IAAAA,CAAqBJ,QAAQ,CAAhD,UAAgD,CAA7BI,CAAnB;AACA,QAAME,WAAW,GAAGF,KAAK,CAALA,UAAK,CAALA,CAAAA,IAAAA,CAAuBJ,QAAQ,CAAnD,WAAmD,CAA/BI,CAApB;AAEA,WAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,EAAA,kBAAA,CAAA,UAAA,CAAA,EAAA,kBAAA,CAAA,WAAA,CAAA,CAAA;AAZF,GAAA;;AAcAL,EAAAA,YAAY;AACZ,SACE,KAAA,CAAA,eAAA,EAAA,IAAA,EACG,YAAY,GAAZ,GAAA,CAAmB,UAAA,IAAA,EAAA,CAAA,EAAA;AAAA,WAClB,KAAA,CAAA,IAAA,EAAA;AAAM,MAAA,GAAG,EAAA,OAAA,MAAA,CAAA,CAAA;AAAT,KAAA,CADkB;AADtB,GACG,CADH,EAIE,KAAA,CAAA,MAAA,EAAA,IAAA,EAAA,GAAA,EAAQN,MAAM,CAAd,UAAc,CAAd,EALJ,GAKI,CAJF,CADF;AAQD;;AAED,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\n\nconst RatingContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 0 10px;\n`;\n\ninterface PropsInt {\n  rating: number;\n}\n\nfunction Rating(props: PropsInt) {\n  const { rating } = props;\n\n  const allStars = 5;\n  const percentage = String((rating * allStars) / 100);\n  const calculateRating = percentage.split('.');\n  const wholeStars = Number(calculateRating[0]);\n  const halfStar = Number(calculateRating[1]) === 0 ? 0 : 1;\n  const emptyStars = allStars - wholeStars - halfStar;\n\n  const displayStars = () => {\n    const startMap = {\n      wholeStar: (props: { key: string }) => <StarIcon {...props} />,\n      halfStar: (props: { key: string }) => <StarHalfIcon {...props} />,\n      emptyStar: (props: { key: string }) => (\n        <StarBorderOutlinedIcon {...props} />\n      ),\n    };\n    const wholeStarts = Array(wholeStars).fill(startMap['wholeStar']);\n    const halfStarts = Array(halfStar).fill(startMap['halfStar']);\n    const emptyStarts = Array(emptyStars).fill(startMap['emptyStar']);\n\n    return [...wholeStarts, ...halfStarts, ...emptyStarts];\n  };\n  displayStars();\n  return (\n    <RatingContainer>\n      {displayStars().map((Comp, i) => (\n        <Comp key={`star${i}`} />\n      ))}\n      <span>({String(percentage)})</span>\n    </RatingContainer>\n  );\n}\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}