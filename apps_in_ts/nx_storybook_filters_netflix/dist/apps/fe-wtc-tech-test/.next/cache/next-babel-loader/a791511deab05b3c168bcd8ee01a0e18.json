{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components'; // custom\n\nconst InputComp = props => __jsx(\"input\", _extends({\n  type: \"text\"\n}, props));\n\nconst all = Object.entries(generateFilters());\nconst displayed = all.slice(0, 5);\nconst hidden = all.slice(5, 50);\nconst FilterContainer = styled.div`\n  display: flex;\n  flexdirection: column;\n`;\nconst AccordionMore = styled.div`\n  padding: 10px;\n`;\n\nfunction FiltersGroup() {\n  return __jsx(FilterContainer, null, __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(AccordionMore, null, __jsx(Accordion, null, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`))))), __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(Accordion, null, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(\"input\", {\n    type: \"radio\"\n  }), `${key}(${value})`)))));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["InputComp","props","all","Object","generateFilters","displayed","hidden","FilterContainer","styled","div","AccordionMore","key","value"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA,C,CAEA;;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,SAAA,eAAA,QAAA,iCAAA;AACA,OAAA,MAAA,MAAA,mBAAA,C,CAEA;;AACA,MAAMA,SAAS,GAAIC,KAAD,IAA4B,KAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAO,EAAA,IAAI,EAAC;AAAZ,CAAA,EAA9C,KAA8C,CAAA,CAA9C;;AAEA,MAAMC,GAAG,GAAGC,MAAM,CAANA,OAAAA,CAAeC,eAA3B,EAAYD,CAAZ;AACA,MAAME,SAAS,GAAGH,GAAG,CAAHA,KAAAA,CAAAA,CAAAA,EAAlB,CAAkBA,CAAlB;AACA,MAAMI,MAAM,GAAGJ,GAAG,CAAHA,KAAAA,CAAAA,CAAAA,EAAf,EAAeA,CAAf;AAEA,MAAMK,eAAe,GAAGC,MAAM,CAACC,GAAI;;;CAAnC;AAIA,MAAMC,aAAa,GAAGF,MAAM,CAACC,GAAI;;CAAjC;;AAIA,SAAA,YAAA,GAAwB;AACtB,SACE,KAAA,CAAA,eAAA,EAAA,IAAA,EACE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,SAAA,EAAA;AAAW,IAAA,IAAI,EAAf,IAAA;AAAgB,IAAA,OAAO,EAAvB,KAAA;AAAgC,IAAA,YAAY,EAAE;AAA9C,GAAA,EACE,KAAA,CAAA,KAAA,EAAA,IAAA,EACGJ,SAAS,CAATA,GAAAA,CAAc,CAAC,CAAA,GAAA,EAAD,KAAC,CAAD,KACb,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAEM;AAAV,GAAA,EACE,KAAA,CAAA,OAAA,EAAA;AAAO,IAAA,IAAI,EAAC;AAAZ,GAAA,CADF,EAEI,GAAEA,GAAI,IAAGC,KANrB,GAIQ,CADDP,CADH,CADF,CADF,EAWGC,MAAM,CAANA,MAAAA,GAAAA,CAAAA,IACC,KAAA,CAAA,aAAA,EAAA,IAAA,EACE,KAAA,CAAA,SAAA,EAAA,IAAA,EACG,MAAM,CAAN,GAAA,CAAW,CAAC,CAAA,GAAA,EAAD,KAAC,CAAD,KACV,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAEK;AAAV,GAAA,EACE,KAAA,CAAA,OAAA,EAAA;AAAO,IAAA,IAAI,EAAC;AAAZ,GAAA,CADF,EAEI,GAAEA,GAAI,IAAGC,KAlBzB,GAgBY,CADD,CADH,CADF,CAZJ,CADF,EAyBE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,SAAA,EAAA;AAAW,IAAA,IAAI,EAAf,IAAA;AAAgB,IAAA,OAAO,EAAvB,KAAA;AAAgC,IAAA,YAAY,EAAE;AAA9C,GAAA,EACE,KAAA,CAAA,KAAA,EAAA,IAAA,EACGP,SAAS,CAATA,GAAAA,CAAc,CAAC,CAAA,GAAA,EAAD,KAAC,CAAD,KACb,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAEM;AAAV,GAAA,EACE,KAAA,CAAA,OAAA,EAAA;AAAO,IAAA,IAAI,EAAC;AAAZ,GAAA,CADF,EAEI,GAAEA,GAAI,IAAGC,KANrB,GAIQ,CADDP,CADH,CADF,CADF,EAWGC,MAAM,CAANA,MAAAA,GAAAA,CAAAA,IACC,KAAA,CAAA,SAAA,EAAA,IAAA,EACG,MAAM,CAAN,GAAA,CAAW,CAAC,CAAA,GAAA,EAAD,KAAC,CAAD,KACV,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAEK;AAAV,GAAA,EACE,KAAA,CAAA,OAAA,EAAA;AAAO,IAAA,IAAI,EAAC;AAAZ,GAAA,CADF,EAEI,GAAEA,GAAI,IAAGC,KA1CzB,GAwCY,CADD,CADH,CAZJ,CAzBF,CADF;AAkDD;;AAED,eAAA,YAAA","sourcesContent":["import React, { useState } from 'react';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\n\n// custom\nconst InputComp = (props: { key: string }) => <input type=\"text\" {...props} />;\n\nconst all = Object.entries(generateFilters());\nconst displayed = all.slice(0, 5);\nconst hidden = all.slice(5, 50);\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flexdirection: column;\n`;\nconst AccordionMore = styled.div`\n  padding: 10px;\n`;\n\nfunction FiltersGroup() {\n  return (\n    <FilterContainer>\n      <div className=\"accordion\">\n        <Accordion open shevron={false} clickDisable={true}>\n          <div>\n            {displayed.map(([key, value]) => (\n              <div key={key}>\n                <input type=\"radio\" />\n                {`${key}(${value})`}\n              </div>\n            ))}\n          </div>\n        </Accordion>\n        {hidden.length > 0 && (\n          <AccordionMore>\n            <Accordion>\n              {hidden.map(([key, value]) => (\n                <div key={key}>\n                  <input type=\"radio\" />\n                  {`${key}(${value})`}\n                </div>\n              ))}\n            </Accordion>\n          </AccordionMore>\n        )}\n      </div>\n      <div className=\"accordion\">\n        <Accordion open shevron={false} clickDisable={true}>\n          <div>\n            {displayed.map(([key, value]) => (\n              <div key={key}>\n                <input type=\"radio\" />\n                {`${key}(${value})`}\n              </div>\n            ))}\n          </div>\n        </Accordion>\n        {hidden.length > 0 && (\n          <Accordion>\n            {hidden.map(([key, value]) => (\n              <div key={key}>\n                <input type=\"radio\" />\n                {`${key}(${value})`}\n              </div>\n            ))}\n          </Accordion>\n        )}\n      </div>\n    </FilterContainer>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}