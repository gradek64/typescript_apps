{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\nconst initialState = {\n  movies: [{\n    Title: 'string',\n    Poster: 'string',\n    Ratings: [{}],\n    key: 'string',\n    Saved: 'True',\n    Watched: 'False'\n  }]\n};\nexport const MoviesContext = React.createContext({});\nconst {\n  Provider,\n  Consumer\n} = MoviesContext;\n\nconst movieReducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE':\n      console.log(action);\n      console.log(state);\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nconst Home = () => {\n  const {\n    0: loading,\n    1: isLoading\n  } = useState(true); //const [movies, getMovies] = useState([]);\n\n  const {\n    0: store,\n    1: dispatch\n  } = useReducer(movieReducer, initialState.movies);\n  const reduceData = useCallback(response => {\n    return response.map(({\n      Title,\n      Poster,\n      Ratings,\n      Watched,\n      Saved\n    }) => {\n      isLoading(false);\n      return {\n        Title,\n        Poster,\n        Ratings,\n        Watched,\n        Saved\n      };\n    });\n  }, []);\n  useEffect(() => {\n    isLoading(true);\n\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies'); //getMovies(reduceData(result));\n\n      console.log(result);\n      return;\n      dispatch({\n        type: 'UPDATE',\n        payload: reduceData(result)\n      }); //isLoading(false);\n    };\n\n    fetchData();\n  }, [reduceData]);\n  console.log('gagdg', store);\n  return __jsx(\"main\", null, loading && 'movies are loading', !loading && __jsx(Provider, {\n    value: store\n  }, __jsx(Wrapper, null, __jsx(Filters, null, __jsx(FiltersGroup, null)), __jsx(Movies, null, __jsx(Consumer, null, moviesObj => moviesObj.map((fields, i) => __jsx(Card, {\n    key: fields.Title,\n    cardId: i\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["React","useEffect","useState","useCallback","useReducer","styled","Card","generalAPIService","FiltersGroup","Wrapper","div","Filters","Movies","initialState","movies","Title","Poster","Ratings","key","Saved","Watched","MoviesContext","createContext","Provider","Consumer","movieReducer","state","action","type","console","log","payload","Home","loading","isLoading","store","dispatch","reduceData","response","map","fetchData","result","get","moviesObj","fields","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\n\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n  Saved: string;\n  Watched: string;\n}\nconst initialState: { movies: ImoviesResponseFields[] } = {\n  movies: [\n    {\n      Title: 'string',\n      Poster: 'string',\n      Ratings: [{}],\n      key: 'string',\n      Saved: 'True',\n      Watched: 'False',\n    },\n  ],\n};\nexport const MoviesContext = React.createContext({} as ImoviesResponseFields[]);\nconst { Provider, Consumer } = MoviesContext;\n\nconst movieReducer = (state: ImoviesResponseFields[], action) => {\n  switch (action.type) {\n    case 'UPDATE':\n      console.log(action);\n      console.log(state);\n\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  //const [movies, getMovies] = useState([]);\n  const [store, dispatch] = useReducer(movieReducer, initialState.movies);\n\n  const reduceData = useCallback((response: {}[]) => {\n    return response.map(\n      ({ Title, Poster, Ratings, Watched, Saved }: ImoviesResponseFields) => {\n        isLoading(false);\n        return {\n          Title,\n          Poster,\n          Ratings,\n          Watched,\n          Saved,\n        };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      //getMovies(reduceData(result));\n      console.log(result);\n      return;\n      dispatch({ type: 'UPDATE', payload: reduceData(result) });\n      //isLoading(false);\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  console.log('gagdg', store);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      {!loading && (\n        <Provider value={store}>\n          <Wrapper>\n            <Filters>\n              <FiltersGroup />\n            </Filters>\n            <Movies>\n              <Consumer>\n                {(moviesObj) =>\n                  moviesObj.map((fields, i) => (\n                    <Card key={fields.Title} cardId={i} />\n                  ))\n                }\n              </Consumer>\n            </Movies>\n          </Wrapper>\n        </Provider>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}