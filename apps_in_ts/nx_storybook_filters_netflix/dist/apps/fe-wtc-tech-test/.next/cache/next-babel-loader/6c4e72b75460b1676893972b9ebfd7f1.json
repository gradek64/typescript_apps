{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\nexport const MoviesContext = React.createContext({});\nconst {\n  Provider,\n  Consumer\n} = MoviesContext;\n\nconst Home = () => {\n  const {\n    0: loading,\n    1: isLoading\n  } = useState(true);\n  const {\n    0: movies,\n    1: getMovies\n  } = useState([]);\n  const reduceData = useCallback(response => {\n    return response.map(({\n      Title,\n      Poster,\n      Ratings,\n      Watched,\n      Saved\n    }) => {\n      isLoading(false);\n      return {\n        Title,\n        Poster,\n        Ratings,\n        Watched,\n        Saved\n      };\n    });\n  }, []);\n  useEffect(() => {\n    isLoading(true);\n\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n  return __jsx(\"main\", null, loading && 'movies are loading', __jsx(Provider, {\n    value: movies\n  }, __jsx(Wrapper, null, __jsx(Filters, null, __jsx(FiltersGroup, null)), __jsx(Movies, null, __jsx(Consumer, null, moviesObj => moviesObj.map((fields, i) => __jsx(Card, {\n    key: fields.Title,\n    cardId: i\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/index.tsx"],"names":["Wrapper","styled","div","Filters","Movies","MoviesContext","React","Consumer","Home","isLoading","useState","getMovies","reduceData","useCallback","response","Saved","useEffect","fetchData","result","generalAPIService","loading","movies","moviesObj","fields","i"],"mappings":";AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,QAAA,EAAA,WAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA,C,CAEA;;AACA,OAAA,IAAA,MAAA,oCAAA;AACA,OAAA,iBAAA,MAAA,4BAAA;AACA,OAAA,YAAA,MAAA,oDAAA;AAEA,MAAMA,OAAO,GAAGC,MAAM,CAACC,GAAI;;;CAA3B;AAKA,MAAMC,OAAO,GAAGF,MAAM,CAACC,GAAI;;;;CAA3B;AAKA,MAAME,MAAM,GAAGH,MAAM,CAACC,GAAI;;;;CAA1B;AAcA,OAAO,MAAMG,aAAa,GAAGC,KAAK,CAALA,aAAAA,CAAtB,EAAsBA,CAAtB;AACP,MAAM;AAAA,EAAA,QAAA;AAAYC,EAAAA;AAAZ,IAAN,aAAA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAA,OAAA,OAAA;AAAA,OAAUC;AAAV,MAAuBC,QAAQ,CAArC,IAAqC,CAArC;AACA,QAAM;AAAA,OAAA,MAAA;AAAA,OAASC;AAAT,MAAsBD,QAAQ,CAApC,EAAoC,CAApC;AAEA,QAAME,UAAU,GAAGC,WAAW,CAAEC,QAAD,IAAoB;AACjD,WAAO,QAAQ,CAAR,GAAA,CACL,CAAC;AAAA,MAAA,KAAA;AAAA,MAAA,MAAA;AAAA,MAAA,OAAA;AAAA,MAAA,OAAA;AAAmCC,MAAAA;AAAnC,KAAD,KAAuE;AACrEN,MAAAA,SAAS,CAATA,KAAS,CAATA;AACA,aAAO;AAAA,QAAA,KAAA;AAAA,QAAA,MAAA;AAAA,QAAA,OAAA;AAAA,QAAA,OAAA;AAKLM,QAAAA;AALK,OAAP;AAHJ,KAAO,CAAP;AAD4B,GAAA,EAA9B,EAA8B,CAA9B;AAeAC,EAAAA,SAAS,CAAC,MAAM;AACdP,IAAAA,SAAS,CAATA,IAAS,CAATA;;AACA,UAAMQ,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMC,iBAAiB,CAAjBA,GAAAA,CAArB,aAAqBA,CAArB;AACAR,MAAAA,SAAS,CAACC,UAAU,CAApBD,MAAoB,CAAX,CAATA;AAFF,KAAA;;AAKAM,IAAAA,SAAS;AAPF,GAAA,EAQN,CARHD,UAQG,CARM,CAATA;AAUA,SACE,KAAA,CAAA,MAAA,EAAA,IAAA,EACGI,OAAO,IADV,oBAAA,EAEE,KAAA,CAAA,QAAA,EAAA;AAAU,IAAA,KAAK,EAAEC;AAAjB,GAAA,EACE,KAAA,CAAA,OAAA,EAAA,IAAA,EACE,KAAA,CAAA,OAAA,EAAA,IAAA,EACE,KAAA,CAAA,YAAA,EAFJ,IAEI,CADF,CADF,EAIE,KAAA,CAAA,MAAA,EAAA,IAAA,EACE,KAAA,CAAA,QAAA,EAAA,IAAA,EACIC,SAAD,IACC,SAAS,CAAT,GAAA,CAAc,CAAA,MAAA,EAAA,CAAA,KACZ,KAAA,CAAA,IAAA,EAAA;AAAM,IAAA,GAAG,EAAEC,MAAM,CAAjB,KAAA;AAAyB,IAAA,MAAM,EAAEC;AAAjC,GAAA,CADF,CAFJ,CADF,CAJF,CADF,CAFF,CADF;AA7BF,CAAA;;AAoDA,eAAA,IAAA","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\n//custom\nimport Card from '../app/contentComponents/Card/Card';\nimport generalAPIService from '../app/services/apiService';\nimport FiltersGroup from '../app/contentComponents/FiltersGroup/FiltersGroup';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  width: 20%;\n  background-color: grey;\n`;\nconst Movies = styled.div`\n  display: flex;\n  width: 80%;\n  flex-wrap: wrap;\n`;\n\ninterface ImoviesResponseFields {\n  Title: string;\n  Poster: string;\n  Ratings: {}[];\n  key: string;\n  Saved: string;\n  Watched: string;\n}\nexport const MoviesContext = React.createContext({} as ImoviesResponseFields[]);\nconst { Provider, Consumer } = MoviesContext;\n\nconst Home = () => {\n  const [loading, isLoading] = useState(true);\n  const [movies, getMovies] = useState([]);\n\n  const reduceData = useCallback((response: {}[]) => {\n    return response.map(\n      ({ Title, Poster, Ratings, Watched, Saved }: ImoviesResponseFields) => {\n        isLoading(false);\n        return {\n          Title,\n          Poster,\n          Ratings,\n          Watched,\n          Saved,\n        };\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    isLoading(true);\n    const fetchData = async () => {\n      const result = await generalAPIService.get('/api/movies');\n      getMovies(reduceData(result));\n    };\n\n    fetchData();\n  }, [reduceData]);\n\n  return (\n    <main>\n      {loading && 'movies are loading'}\n      <Provider value={movies}>\n        <Wrapper>\n          <Filters>\n            <FiltersGroup />\n          </Filters>\n          <Movies>\n            <Consumer>\n              {(moviesObj) =>\n                moviesObj.map((fields, i) => (\n                  <Card key={fields.Title} cardId={i} />\n                ))\n              }\n            </Consumer>\n          </Movies>\n        </Wrapper>\n      </Provider>\n    </main>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}