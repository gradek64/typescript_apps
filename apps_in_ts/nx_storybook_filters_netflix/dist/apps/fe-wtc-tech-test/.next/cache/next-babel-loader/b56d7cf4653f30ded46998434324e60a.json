{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useIconsState from './useIconsState';\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\nlet prevState;\n\nconst wrapperComponentMethod = (Icon1, Icon2) => ({\n  callToAction,\n  icon,\n  obj,\n  cardNumber\n}) => {\n  const {\n    0: iconVisiblity,\n    1: setVisible\n  } = useState(false);\n  const {\n    iconsState,\n    setIconsState\n  } = useIconsState(cardNumber);\n\n  const iconCTA = () => {\n    setVisible(!iconVisiblity);\n    setIconsState(prev => {\n      return _objectSpread({}, prev, {}, iconsState);\n    });\n    callToAction({\n      [cardNumber]: _objectSpread({}, obj, {\n        [icon]: !iconVisiblity\n      })\n    });\n  };\n\n  return __jsx(IconContainer, {\n    onClick: iconCTA\n  }, !iconVisiblity && __jsx(Icon1, null), iconVisiblity && __jsx(Icon2, null));\n};\n\nexport default wrapperComponentMethod;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/IconCTA/IconAction.tsx"],"names":["React","useState","styled","useIconsState","IconContainer","div","prevState","wrapperComponentMethod","Icon1","Icon2","callToAction","icon","obj","cardNumber","iconVisiblity","setVisible","iconsState","setIconsState","iconCTA","prev"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;;CAAjC;AASA,IAAIC,SAAJ;;AACA,MAAMC,sBAAsB,GAAG,CAACC,KAAD,EAAkBC,KAAlB,KAAsC,CAAC;AACpEC,EAAAA,YADoE;AAEpEC,EAAAA,IAFoE;AAGpEC,EAAAA,GAHoE;AAIpEC,EAAAA;AAJoE,CAAD,KAKrD;AACd,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEe,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCd,aAAa,CAACU,UAAD,CAAnD;;AACA,QAAMK,OAAO,GAAG,MAAM;AACpBH,IAAAA,UAAU,CAAC,CAACD,aAAF,CAAV;AAEAG,IAAAA,aAAa,CAAEE,IAAD,IAAU;AACtB,+BAAYA,IAAZ,MAAqBH,UAArB;AACD,KAFY,CAAb;AAGAN,IAAAA,YAAY,CAAC;AAAE,OAACG,UAAD,qBAAmBD,GAAnB;AAAwB,SAACD,IAAD,GAAQ,CAACG;AAAjC;AAAF,KAAD,CAAZ;AACD,GAPD;;AAQA,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEI;AAAxB,KACG,CAACJ,aAAD,IAAkB,MAAC,KAAD,OADrB,EAEGA,aAAa,IAAI,MAAC,KAAD,OAFpB,CADF;AAMD,CAtBD;;AAwBA,eAAeP,sBAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useIconsState from './useIconsState';\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\ninterface PropsInt {\n  callToAction: (state: object) => void;\n  icon: string;\n  obj: { watch: boolean; favorite: boolean };\n  cardNumber: string;\n}\nlet prevState;\nconst wrapperComponentMethod = (Icon1: React.FC, Icon2: React.FC) => ({\n  callToAction,\n  icon,\n  obj,\n  cardNumber,\n}: PropsInt) => {\n  const [iconVisiblity, setVisible] = useState(false);\n  const { iconsState, setIconsState } = useIconsState(cardNumber);\n  const iconCTA = () => {\n    setVisible(!iconVisiblity);\n\n    setIconsState((prev) => {\n      return { ...prev, ...iconsState };\n    });\n    callToAction({ [cardNumber]: { ...obj, [icon]: !iconVisiblity } });\n  };\n  return (\n    <IconContainer onClick={iconCTA}>\n      {!iconVisiblity && <Icon1 />}\n      {iconVisiblity && <Icon2 />}\n    </IconContainer>\n  );\n};\n\nexport default wrapperComponentMethod;\n"]},"metadata":{},"sourceType":"module"}