{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined'; //custom\n\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\nconst all = Object.entries(generateFilters());\nconst displayed = all.slice(0, 5);\nconst hidden = all.slice(5, all.length);\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst callToAction = () => {};\n\nconst CheckBox = wrapperIconHOC(CheckBoxOutlineBlankOutlinedIcon, CheckBoxOutlinedIcon);\n\nfunction FiltersGroup() {\n  return __jsx(FilterContainer, null, ['TYPE', 'STATUS'].map(title => __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(Accordion, {\n    open: true,\n    shevron: false,\n    clickDisable: true,\n    title: title\n  }, __jsx(\"div\", null, displayed.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(CheckBox, {\n    callToAction: callToAction,\n    icon: \"checkbox\"\n  }), `${key}(${value})`)))), hidden.length > 0 && __jsx(Accordion, {\n    title: '...more',\n    directional: true,\n    shevron: false\n  }, hidden.map(([key, value]) => __jsx(\"div\", {\n    key: key\n  }, __jsx(CheckBox, {\n    callToAction: callToAction,\n    icon: \"checkbox\"\n  }), `${key}(${value})`))))));\n}\n\nexport default FiltersGroup;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/FiltersGroup.tsx"],"names":["React","CheckBoxOutlineBlankOutlinedIcon","CheckBoxOutlinedIcon","Accordion","generateFilters","styled","wrapperIconHOC","all","Object","entries","displayed","slice","hidden","length","FilterContainer","div","callToAction","CheckBox","FiltersGroup","map","title","key","value"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,gCAAP,MAA6C,iDAA7C;AACA,OAAOC,oBAAP,MAAiC,qCAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA,MAAMC,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeL,eAAe,EAA9B,CAAZ;AACA,MAAMM,SAAS,GAAGH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAlB;AACA,MAAMC,MAAM,GAAGL,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaJ,GAAG,CAACM,MAAjB,CAAf;AAEA,MAAMC,eAAe,GAAGT,MAAM,CAACU,GAAI;;;;CAAnC;;AAMA,MAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;AAEA,MAAMC,QAAQ,GAAGX,cAAc,CAC7BL,gCAD6B,EAE7BC,oBAF6B,CAA/B;;AAIA,SAASgB,YAAT,GAAwB;AACtB,SACE,MAAC,eAAD,QACG,CAAC,MAAD,EAAS,QAAT,EAAmBC,GAAnB,CAAwBC,KAAD,IACtB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,OAAO,EAAE,KAAzB;AAAgC,IAAA,YAAY,EAAE,IAA9C;AAAoD,IAAA,KAAK,EAAEA;AAA3D,KACE,mBACGV,SAAS,CAACS,GAAV,CAAc,CAAC,CAACE,GAAD,EAAMC,KAAN,CAAD,KACb;AAAK,IAAA,GAAG,EAAED;AAAV,KACE,MAAC,QAAD;AAAU,IAAA,YAAY,EAAEL,YAAxB;AAAsC,IAAA,IAAI,EAAC;AAA3C,IADF,EAEI,GAAEK,GAAI,IAAGC,KAAM,GAFnB,CADD,CADH,CADF,CADF,EAWGV,MAAM,CAACC,MAAP,GAAgB,CAAhB,IACC,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE,SAAlB;AAA6B,IAAA,WAAW,EAAE,IAA1C;AAAgD,IAAA,OAAO,EAAE;AAAzD,KACGD,MAAM,CAACO,GAAP,CAAW,CAAC,CAACE,GAAD,EAAMC,KAAN,CAAD,KACV;AAAK,IAAA,GAAG,EAAED;AAAV,KACE,MAAC,QAAD;AAAU,IAAA,YAAY,EAAEL,YAAxB;AAAsC,IAAA,IAAI,EAAC;AAA3C,IADF,EAEI,GAAEK,GAAI,IAAGC,KAAM,GAFnB,CADD,CADH,CAZJ,CADD,CADH,CADF;AA4BD;;AAED,eAAeJ,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\n\n//custom\nimport Accordion from '../Accordion/Accordion';\nimport { generateFilters } from '../FiltersGroup/generateFilters';\nimport styled from 'styled-components';\nimport wrapperIconHOC from '../../contentComponents/IconCTA/IconAction';\n\nconst all = Object.entries(generateFilters());\nconst displayed = all.slice(0, 5);\nconst hidden = all.slice(5, all.length);\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nconst callToAction = () => {};\n\nconst CheckBox = wrapperIconHOC(\n  CheckBoxOutlineBlankOutlinedIcon,\n  CheckBoxOutlinedIcon\n);\nfunction FiltersGroup() {\n  return (\n    <FilterContainer>\n      {['TYPE', 'STATUS'].map((title) => (\n        <div className=\"accordion\">\n          <Accordion open shevron={false} clickDisable={true} title={title}>\n            <div>\n              {displayed.map(([key, value]) => (\n                <div key={key}>\n                  <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                  {`${key}(${value})`}\n                </div>\n              ))}\n            </div>\n          </Accordion>\n          {hidden.length > 0 && (\n            <Accordion title={'...more'} directional={true} shevron={false}>\n              {hidden.map(([key, value]) => (\n                <div key={key}>\n                  <CheckBox callToAction={callToAction} icon=\"checkbox\" />\n                  {`${key}(${value})`}\n                </div>\n              ))}\n            </Accordion>\n          )}\n        </div>\n      ))}\n    </FilterContainer>\n  );\n}\n\nexport default FiltersGroup;\n"]},"metadata":{},"sourceType":"module"}