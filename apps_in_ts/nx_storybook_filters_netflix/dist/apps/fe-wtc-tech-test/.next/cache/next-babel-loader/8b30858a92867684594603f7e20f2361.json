{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// custom\nimport { ENV_MOVIES } from './utils/ENV';\n\nvar apiService = function apiService() {\n  var errorInterceptor = function errorInterceptor(response) {\n    switch (response.status) {\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n\n      default:\n    }\n\n    throw response;\n  };\n\n  var responseMiddleware = function responseMiddleware(res) {\n    return res;\n  };\n\n  var requestPath = function requestPath(path, params) {\n    var PATH = ENV_MOVIES.BASE_URL;\n\n    if (params && Object.keys(params).length > 1) {\n      var query = '';\n\n      for (var keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    }\n\n    return PATH + path;\n  };\n\n  var requestInterceptor = function requestInterceptor(serviceConfig, customRequestHeaders) {\n    var requestHeaders = {\n      'Content-Type': 'application/json'\n    };\n    var request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: _objectSpread({}, requestHeaders, {}, customRequestHeaders)\n    }; //request with body object not empty {}\n\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body)\n      });\n    }\n\n    return request;\n  };\n\n  var sendRequest = function sendRequest(serviceConfig, customRequestHeaders) {\n    var path, params, response, res;\n    return _regeneratorRuntime.async(function sendRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            path = requestPath(serviceConfig.path, serviceConfig.params);\n            params = requestInterceptor(serviceConfig, customRequestHeaders);\n            console.log('path', path);\n            console.log('params', params);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(path, params));\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            res = _context.sent;\n            return _context.abrupt(\"return\", responseMiddleware(res));\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('it has errored');\n            return _context.abrupt(\"return\", errorInterceptor(_context.t0));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  var get = function get(path) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$params = _ref.params,\n        params = _ref$params === void 0 ? {} : _ref$params;\n\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref2$customRequestHe = _ref2.customRequestHeaders,\n        customRequestHeaders = _ref2$customRequestHe === void 0 ? {} : _ref2$customRequestHe;\n\n    return sendRequest({\n      method: 'GET',\n      path: path,\n      params: params\n    }, customRequestHeaders);\n  };\n\n  var post = function post(path, _ref3) {\n    var body = _ref3.body;\n\n    var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref4$customRequestHe = _ref4.customRequestHeaders,\n        customRequestHeaders = _ref4$customRequestHe === void 0 ? {} : _ref4$customRequestHe;\n\n    return sendRequest({\n      method: 'POST',\n      path: path,\n      body: body\n    }, customRequestHeaders);\n  };\n\n  var put = function put(path, _ref5) {\n    var body = _ref5.body;\n\n    var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref6$customRequestHe = _ref6.customRequestHeaders,\n        customRequestHeaders = _ref6$customRequestHe === void 0 ? {} : _ref6$customRequestHe;\n\n    return sendRequest({\n      method: 'PUT',\n      path: path,\n      body: body\n    }, customRequestHeaders);\n  };\n\n  var patch = function patch(path, _ref7) {\n    var body = _ref7.body;\n\n    var _ref8 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref8$customRequestHe = _ref8.customRequestHeaders,\n        customRequestHeaders = _ref8$customRequestHe === void 0 ? {} : _ref8$customRequestHe;\n\n    return sendRequest({\n      method: 'PATCH',\n      path: path,\n      body: body\n    }, customRequestHeaders);\n  };\n\n  var del = function del(path, _ref9) {\n    var params = _ref9.params;\n\n    var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref10$customRequestH = _ref10.customRequestHeaders,\n        customRequestHeaders = _ref10$customRequestH === void 0 ? {} : _ref10$customRequestH;\n\n    return (//this syntax means optional with defualt {}\n      sendRequest({\n        method: 'DELETE',\n        path: path,\n        params: params\n      }, customRequestHeaders)\n    );\n  };\n\n  return {\n    get: get,\n    post: post,\n    put: put,\n    patch: patch,\n    \"delete\": del\n  };\n};\n\nexport default apiService();","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/services/apiService.ts"],"names":["ENV_MOVIES","apiService","errorInterceptor","response","status","responseMiddleware","res","requestPath","path","params","PATH","BASE_URL","Object","keys","length","query","replace","trim","requestInterceptor","serviceConfig","customRequestHeaders","requestHeaders","request","method","cache","credentials","headers","body","assign","JSON","stringify","sendRequest","console","log","fetch","json","get","post","put","patch","del"],"mappings":"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","sourcesContent":["// custom\nimport { ENV_MOVIES } from './utils/ENV';\n\nconst apiService = () => {\n  const errorInterceptor = (response: Response) => {\n    switch (response.status) {\n      case 401:\n      case 405:\n        // events.emit('NOT_AUTHENTICATED');\n        break;\n      case 403:\n        // events.emit('NOT_AUTHORISED');\n        // break;\n        // case 405:\n        //   events.emit('METHOD_NOT_ALLOWED');\n        break;\n      default:\n    }\n    throw response;\n  };\n\n  const responseMiddleware = (res: { [key: string]: any }[]) => res;\n\n  const requestPath = (path: string, params?: Record<string, string>) => {\n    const PATH = ENV_MOVIES.BASE_URL;\n    if (params && Object.keys(params).length > 1) {\n      let query = '';\n      for (const keys in params) {\n        query += keys + '=' + params[keys] + '&';\n      }\n      return PATH + path + '?' + query.replace(/&$/, '').trim();\n    }\n    return PATH + path;\n  };\n\n  const requestInterceptor = (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Record<string, string>;\n      body?: Record<string, string>;\n    },\n    customRequestHeaders: Record<string, string>\n  ) => {\n    const requestHeaders = {\n      'Content-Type': 'application/json',\n    };\n\n    let request = {\n      method: serviceConfig.method,\n      //mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'default', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        ...requestHeaders,\n        ...customRequestHeaders,\n      },\n    };\n\n    //request with body object not empty {}\n    if (serviceConfig.body && Object.keys(serviceConfig.body).length > 1) {\n      request = Object.assign(request, {\n        //convert to JSON object\n        body: JSON.stringify(serviceConfig.body),\n      });\n    }\n    return request as RequestInit;\n  };\n\n  const sendRequest = async (\n    serviceConfig: {\n      path: string;\n      method: string;\n      params?: Record<string, string>;\n      body?: Record<string, string>;\n    },\n    customRequestHeaders: Record<string, string>\n  ): Promise<{ [key: string]: any }[]> => {\n    try {\n      const path = requestPath(serviceConfig.path, serviceConfig.params);\n      const params = requestInterceptor(serviceConfig, customRequestHeaders);\n      console.log('path', path);\n      console.log('params', params);\n      const response = await fetch(path, params);\n      const res = await response.json();\n      return responseMiddleware(res);\n    } catch (err) {\n      console.log('it has errored');\n      return errorInterceptor(err);\n    }\n  };\n\n  const get = (\n    path: string,\n    { params = {} } = {},\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'GET', path, params }, customRequestHeaders);\n\n  const post = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'POST', path, body }, customRequestHeaders);\n\n  const put = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'PUT', path, body }, customRequestHeaders);\n\n  const patch = (\n    path: string,\n    { body }: { body: { [key: string]: any } },\n    { customRequestHeaders = {} } = {}\n  ) => sendRequest({ method: 'PATCH', path, body }, customRequestHeaders);\n\n  const del = (\n    path: string,\n    { params }: { params?: Record<string, string> },\n    { customRequestHeaders = {} } = {} //this syntax means optional with defualt {}\n  ) => sendRequest({ method: 'DELETE', path, params }, customRequestHeaders);\n\n  return {\n    get,\n    post,\n    put,\n    patch,\n    delete: del,\n  };\n};\n\nexport default apiService();\n"]},"metadata":{},"sourceType":"module"}