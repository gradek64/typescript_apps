{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar generateFilters = function generateFilters() {\n  var actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  var actors2 = 'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed'; //first combine actors results\n\n  var allActors = [].concat(_toConsumableArray(actors.split(',')), _toConsumableArray(actors2.split(',')));\n  console.log('allActors', allActors);\n  var filteredActors = []; //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the code\n\n  var ss = allActors.map(function (actor) {\n    //duplicates\n    if (filteredActors.includes(actor)) {\n      console.log('duplicate actor', actor);\n      return actor;\n    }\n\n    filteredActors.push(actor);\n    return filteredActors.push(actor);\n  });\n  console.log('ss', ss);\n};\n\nexport { generateFilters };","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/FiltersGroup/generateFilters.tsx"],"names":["generateFilters","actors","actors2","allActors","console","filteredActors","ss"],"mappings":";;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,MAAM,GAAZ,6DAAA;AACA,MAAMC,OAAO,GAFe,4EAE5B,CAF4B,CAK5B;;AAEA,MAAMC,SAAS,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAOF,MAAM,CAANA,KAAAA,CAAP,GAAOA,CAAP,CAAA,EAAA,kBAAA,CAA6BC,OAAO,CAAPA,KAAAA,CAA5C,GAA4CA,CAA7B,CAAA,CAAf;AACAE,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,WAAAA,EAAAA,SAAAA;AACA,MAAMC,cAAc,GATQ,EAS5B,CAT4B,CAU5B;AACA;;AAEA,MAAMC,EAAE,GAAG,SAAS,CAAT,GAAA,CAAc,UAAA,KAAA,EAAW;AAClC;AACA,QAAID,cAAc,CAAdA,QAAAA,CAAJ,KAAIA,CAAJ,EAAoC;AAClCD,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,iBAAAA,EAAAA,KAAAA;AACA,aAAA,KAAA;AACD;;AACDC,IAAAA,cAAc,CAAdA,IAAAA,CAAAA,KAAAA;AACA,WAAOA,cAAc,CAAdA,IAAAA,CAAP,KAAOA,CAAP;AAPF,GAAW,CAAX;AAUAD,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,IAAAA,EAAAA,EAAAA;AAvBF,CAAA;;AA0BA,SAAA,eAAA","sourcesContent":["const generateFilters = () => {\n  const actors = 'Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos';\n  const actors2 =\n    'Harrison Ford, Russell Crowe, Joaquin Phoenix, Connie Nielsen, Oliver Reed';\n\n  //first combine actors results\n\n  const allActors = [...actors.split(','), ...actors2.split(',')];\n  console.log('allActors', allActors);\n  const filteredActors = [];\n  //to avoid chacking if i===array.lenght -1 consider making promise to get all values\n  //and continue with the code\n\n  const ss = allActors.map((actor) => {\n    //duplicates\n    if (filteredActors.includes(actor)) {\n      console.log('duplicate actor', actor);\n      return actor;\n    }\n    filteredActors.push(actor);\n    return filteredActors.push(actor);\n  });\n\n  console.log('ss', ss);\n};\n\nexport { generateFilters };\n"]},"metadata":{},"sourceType":"module"}