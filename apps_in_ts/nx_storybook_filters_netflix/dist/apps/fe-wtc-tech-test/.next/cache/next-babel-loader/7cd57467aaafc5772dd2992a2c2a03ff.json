{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState, useMemo } from 'react';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport styled from 'styled-components'; //styles\n\nconst AccordionHeader = styled.button`\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  padding: 10px;\n  justify-content: space-between;\n  border: none;\n  &.active {\n    background-color: orange;\n  }\n`;\nconst AccordionContent = styled.div`\n  overflow: hidden;\n  width: 100%;\n  transition: height 0.6s ease;\n`;\nconst ChevronIcon = styled.span`\n  transition: transform 0.6s ease;\n  &.rotate {\n    transform: rotate(90deg);\n  }\n`;\n\nfunction Accordion(props) {\n  var _refContent$current, _refContent$current2;\n\n  const {\n    children,\n    calculateHeight,\n    name,\n    nestedAccordion = false\n  } = props;\n  const refContent = useRef(null);\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState('');\n  const elementHeight = (_refContent$current = refContent.current) === null || _refContent$current === void 0 ? void 0 : _refContent$current.scrollHeight; //if (!isNaN(elementHeight)) {\n\n  useMemo(() => calculateHeight({\n    name,\n    value: elementHeight,\n    nestedAccordion\n  }), [elementHeight, calculateHeight, name]); //}\n\n  /*  useCallback(() => {\n    console.log('outside');\n    if (!nestedAccordion) {\n      console.log('inside');\n       calculateHeight({ name, value: elementHeight });\n    }\n  }, [nestedAccordion]); */\n\n  const openAccordion = () => {\n    if (nestedAccordion) {\n      calculateHeight({\n        name,\n        value: elementHeight,\n        nestedAccordion\n      });\n    }\n\n    setOpen(!isOpen ? 'active' : '');\n  };\n\n  return __jsx(\"div\", {\n    className: \"accordion\"\n  }, __jsx(AccordionHeader, {\n    className: `accordionHeader ${isOpen}`,\n    onClick: openAccordion\n  }, __jsx(\"span\", {\n    className: \"accordionTitle\"\n  }, \"AccordionTitle\"), __jsx(ChevronIcon, {\n    className: !!isOpen && 'rotate'\n  }, __jsx(ChevronRightIcon, null))), __jsx(AccordionContent, {\n    ref: refContent,\n    style: {\n      height: `${isOpen !== '' ? Number((_refContent$current2 = refContent.current) === null || _refContent$current2 === void 0 ? void 0 : _refContent$current2.scrollHeight) : 0}px`\n    }\n  }, children));\n}\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Accordion/Accordion.tsx"],"names":["AccordionHeader","styled","button","AccordionContent","div","ChevronIcon","span","nestedAccordion","refContent","useRef","setOpen","useState","elementHeight","useMemo","calculateHeight","value","openAccordion","isOpen","height","Number"],"mappings":";AAAA,OAAA,KAAA,IAAA,MAAA,EAAA,QAAA,EAAA,OAAA,QAAA,OAAA;AACA,OAAA,gBAAA,MAAA,iCAAA;AACA,OAAA,MAAA,MAAA,mBAAA,C,CAEA;;AACA,MAAMA,eAAe,GAAGC,MAAM,CAACC,MAAO;;;;;;;;;;;CAAtC;AAaA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;CAApC;AAMA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,IAAK;;;;;CAAhC;;AAkBA,SAAA,SAAA,CAAA,KAAA,EAAkC;AAAA,MAAA,mBAAA,EAAA,oBAAA;;AAChC,QAAM;AAAA,IAAA,QAAA;AAAA,IAAA,eAAA;AAAA,IAAA,IAAA;AAAmCC,IAAAA,eAAe,GAAG;AAArD,MAAN,KAAA;AAEA,QAAMC,UAAU,GAAGC,MAAM,CAAzB,IAAyB,CAAzB;AAEA,QAAM;AAAA,OAAA,MAAA;AAAA,OAASC;AAAT,MAAoBC,QAAQ,CAAlC,EAAkC,CAAlC;AAEA,QAAMC,aAAa,GAAA,CAAA,mBAAA,GAAGJ,UAAU,CAAb,OAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,mBAAAA,CAPU,YAOhC,CAPgC,CAQhC;;AACAK,EAAAA,OAAO,CACL,MAAMC,eAAe,CAAC;AAAA,IAAA,IAAA;AAAQC,IAAAA,KAAK,EAAb,aAAA;AAA8BR,IAAAA;AAA9B,GAAD,CADhB,EAEL,CAAA,aAAA,EAAA,eAAA,EAX8B,IAW9B,CAFK,CAAPM,CATgC,CAahC;;AACA;;;;;;;;AASA,QAAMG,aAAa,GAAG,MAAM;AAC1B,QAAA,eAAA,EAAqB;AACnBF,MAAAA,eAAe,CAAC;AAAA,QAAA,IAAA;AAAQC,QAAAA,KAAK,EAAb,aAAA;AAA8BR,QAAAA;AAA9B,OAAD,CAAfO;AACD;;AACDJ,IAAAA,OAAO,CAAC,CAAA,MAAA,GAAA,QAAA,GAARA,EAAO,CAAPA;AAJF,GAAA;;AAOA,SACE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,eAAA,EAAA;AACE,IAAA,SAAS,EAAG,mBAAkBO,MADhC,EAAA;AAEE,IAAA,OAAO,EAAED;AAFX,GAAA,EAIE,KAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAJF,gBAIE,CAJF,EAKE,KAAA,CAAA,WAAA,EAAA;AAAa,IAAA,SAAS,EAAE,CAAC,CAAD,MAAA,IAAY;AAApC,GAAA,EACE,KAAA,CAAA,gBAAA,EAPN,IAOM,CADF,CALF,CADF,EAUE,KAAA,CAAA,gBAAA,EAAA;AACE,IAAA,GAAG,EADL,UAAA;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAG,GACPD,MAAM,KAANA,EAAAA,GAAgBE,MAAM,CAAA,CAAA,oBAAA,GAACX,UAAU,CAAX,OAAA,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,oBAAAA,CAAvBS,YAAsB,CAAtBA,GAA2D,CAC5D;AAHI;AAFT,GAAA,EAXJ,QAWI,CAVF,CADF;AAuBD;;AAED,eAAA,SAAA","sourcesContent":["import React, { useRef, useState, useMemo, useCallback } from 'react';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport styled from 'styled-components';\n\n//styles\nconst AccordionHeader = styled.button`\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  padding: 10px;\n  justify-content: space-between;\n  border: none;\n  &.active {\n    background-color: orange;\n  }\n`;\n\nconst AccordionContent = styled.div`\n  overflow: hidden;\n  width: 100%;\n  transition: height 0.6s ease;\n`;\n\nconst ChevronIcon = styled.span`\n  transition: transform 0.6s ease;\n  &.rotate {\n    transform: rotate(90deg);\n  }\n`;\n\ninterface PropsI {\n  children: React.ReactNode;\n  forceHeight?: number;\n  name: string;\n  nestedAccordion?: boolean;\n  calculateHeight: ({\n    name: string,\n    value: number,\n    nestedAccordion: boolean,\n  }) => void;\n}\nfunction Accordion(props: PropsI) {\n  const { children, calculateHeight, name, nestedAccordion = false } = props;\n\n  const refContent = useRef<HTMLDivElement>(null);\n\n  const [isOpen, setOpen] = useState('');\n\n  const elementHeight = refContent.current?.scrollHeight;\n  //if (!isNaN(elementHeight)) {\n  useMemo(\n    () => calculateHeight({ name, value: elementHeight, nestedAccordion }),\n    [elementHeight, calculateHeight, name]\n  );\n  //}\n  /*  useCallback(() => {\n    console.log('outside');\n    if (!nestedAccordion) {\n      console.log('inside');\n\n      calculateHeight({ name, value: elementHeight });\n    }\n  }, [nestedAccordion]); */\n\n  const openAccordion = () => {\n    if (nestedAccordion) {\n      calculateHeight({ name, value: elementHeight, nestedAccordion });\n    }\n    setOpen(!isOpen ? 'active' : '');\n  };\n\n  return (\n    <div className=\"accordion\">\n      <AccordionHeader\n        className={`accordionHeader ${isOpen}`}\n        onClick={openAccordion}\n      >\n        <span className=\"accordionTitle\">AccordionTitle</span>\n        <ChevronIcon className={!!isOpen && 'rotate'}>\n          <ChevronRightIcon />\n        </ChevronIcon>\n      </AccordionHeader>\n      <AccordionContent\n        ref={refContent}\n        style={{\n          height: `${\n            isOpen !== '' ? Number(refContent.current?.scrollHeight) : 0\n          }px`,\n        }}\n      >\n        {children}\n      </AccordionContent>\n    </div>\n  );\n}\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}