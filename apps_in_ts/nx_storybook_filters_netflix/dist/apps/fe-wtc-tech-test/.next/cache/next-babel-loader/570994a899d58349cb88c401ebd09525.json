{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nexport var showStarRating = function showStarRating(rating, allStars) {\n  var percentage = String(rating * allStars / 100);\n  var calculateRating = percentage.split('.');\n  var wholeStars = Number(calculateRating[0]);\n  var halfStar = isNaN(Number(calculateRating[1])) || Number(calculateRating[1]) === 0 ? 0 : 1;\n  var emptyStars = allStars - wholeStars - halfStar;\n  console.log('halfStar', Number(calculateRating[1]));\n  console.log('halfStar', !!calculateRating[1]);\n  console.log('halfStar', halfStar);\n  var startMap = {\n    wholeStar: function wholeStar(props) {\n      return __jsx(StarIcon, props);\n    },\n    halfStar: function halfStar(props) {\n      return __jsx(StarHalfIcon, props);\n    },\n    emptyStar: function emptyStar(props) {\n      return __jsx(StarBorderOutlinedIcon, props);\n    }\n  };\n  var wholeStarts = Array(wholeStars).fill(startMap['wholeStar']);\n  var halfStarts = Array(halfStar).fill(startMap['halfStar']);\n  var emptyStarts = Array(emptyStars).fill(startMap['emptyStar']);\n  var ss = [].concat(_toConsumableArray(wholeStarts), _toConsumableArray(halfStarts), _toConsumableArray(emptyStarts));\n  console.log('[...wholeStarts, ...halfStarts, ...emptyStarts]', ss);\n  return ss;\n};","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/RatingStarComp/ratingCalculation.tsx"],"names":["React","StarIcon","StarHalfIcon","StarBorderOutlinedIcon","showStarRating","rating","allStars","percentage","String","calculateRating","split","wholeStars","Number","halfStar","isNaN","emptyStars","console","log","startMap","wholeStar","props","emptyStar","wholeStarts","Array","fill","halfStarts","emptyStarts","ss"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAiBC,QAAjB,EAAsC;AAClE,MAAMC,UAAU,GAAGC,MAAM,CAAEH,MAAM,GAAGC,QAAV,GAAsB,GAAvB,CAAzB;AACA,MAAMG,eAAe,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAxB;AACA,MAAMC,UAAU,GAAGC,MAAM,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAzB;AAEA,MAAMI,QAAQ,GACZC,KAAK,CAACF,MAAM,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAP,CAAL,IAAqCG,MAAM,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAN,KAA+B,CAApE,GACI,CADJ,GAEI,CAHN;AAIA,MAAMM,UAAU,GAAGT,QAAQ,GAAGK,UAAX,GAAwBE,QAA3C;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,MAAM,CAACH,eAAe,CAAC,CAAD,CAAhB,CAA9B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,CAAC,CAACR,eAAe,CAAC,CAAD,CAAzC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AAEA,MAAMK,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,aAA4B,MAAC,QAAD,EAAcA,KAAd,CAA5B;AAAA,KADI;AAEfP,IAAAA,QAAQ,EAAE,kBAACO,KAAD;AAAA,aAA4B,MAAC,YAAD,EAAkBA,KAAlB,CAA5B;AAAA,KAFK;AAGfC,IAAAA,SAAS,EAAE,mBAACD,KAAD;AAAA,aACT,MAAC,sBAAD,EAA4BA,KAA5B,CADS;AAAA;AAHI,GAAjB;AAOA,MAAME,WAAW,GAAGC,KAAK,CAACZ,UAAD,CAAL,CAAkBa,IAAlB,CAAuBN,QAAQ,CAAC,WAAD,CAA/B,CAApB;AACA,MAAMO,UAAU,GAAGF,KAAK,CAACV,QAAD,CAAL,CAAgBW,IAAhB,CAAqBN,QAAQ,CAAC,UAAD,CAA7B,CAAnB;AACA,MAAMQ,WAAW,GAAGH,KAAK,CAACR,UAAD,CAAL,CAAkBS,IAAlB,CAAuBN,QAAQ,CAAC,WAAD,CAA/B,CAApB;AACA,MAAMS,EAAE,gCAAOL,WAAP,sBAAuBG,UAAvB,sBAAsCC,WAAtC,EAAR;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+DU,EAA/D;AACA,SAAOA,EAAP;AACD,CA5BM","sourcesContent":["import React from 'react';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\n\nexport const showStarRating = (rating: number, allStars: number) => {\n  const percentage = String((rating * allStars) / 100);\n  const calculateRating = percentage.split('.');\n  const wholeStars = Number(calculateRating[0]);\n\n  const halfStar =\n    isNaN(Number(calculateRating[1])) || Number(calculateRating[1]) === 0\n      ? 0\n      : 1;\n  const emptyStars = allStars - wholeStars - halfStar;\n\n  console.log('halfStar', Number(calculateRating[1]));\n  console.log('halfStar', !!calculateRating[1]);\n  console.log('halfStar', halfStar);\n\n  const startMap = {\n    wholeStar: (props: { key: string }) => <StarIcon {...props} />,\n    halfStar: (props: { key: string }) => <StarHalfIcon {...props} />,\n    emptyStar: (props: { key: string }) => (\n      <StarBorderOutlinedIcon {...props} />\n    ),\n  };\n  const wholeStarts = Array(wholeStars).fill(startMap['wholeStar']);\n  const halfStarts = Array(halfStar).fill(startMap['halfStar']);\n  const emptyStarts = Array(emptyStars).fill(startMap['emptyStar']);\n  const ss = [...wholeStarts, ...halfStarts, ...emptyStarts];\n  console.log('[...wholeStarts, ...halfStarts, ...emptyStarts]', ss);\n  return ss;\n};\n"]},"metadata":{},"sourceType":"module"}