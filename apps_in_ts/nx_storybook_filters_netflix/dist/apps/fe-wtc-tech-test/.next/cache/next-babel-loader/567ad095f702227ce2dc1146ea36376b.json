{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'; //custom\n\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nvar VisibilityWatchedIcon = wrapperIconHOC(VisibilityIcon, VisibilityOffOutlinedIcon);\nvar VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n/*---------*/\n\nvar IconsStateManagement = function IconsStateManagement(_ref) {\n  var callToActionCardColor = _ref.callToActionCardColor,\n      Watched = _ref.Watched,\n      Saved = _ref.Saved;\n  var prevState;\n  var calculatedState;\n\n  var callToAction = function callToAction(iconState) {\n    var watch = _objectSpread({\n      watch: false\n    }, iconState);\n\n    var favorite = _objectSpread({\n      favorite: false\n    }, iconState);\n\n    calculatedState = _objectSpread({}, watch, {}, favorite);\n\n    if (prevState) {\n      calculatedState = _objectSpread({}, prevState, {}, iconState);\n    }\n\n    prevState = calculatedState;\n    callToActionCardColor(calculatedState);\n  };\n\n  callToActionCardColor({\n    watch: Watched,\n    favorite: Saved\n  });\n  console.log('watched', Watched);\n  console.log('saved', Saved);\n  return __jsx(React.Fragment, null, __jsx(VisibilityWatchedIcon, {\n    callToAction: callToAction,\n    icon: \"watch\",\n    isActive: Watched\n  }), __jsx(VisibilitySavedIcon, {\n    callToAction: callToAction,\n    icon: \"favorite\",\n    isActive: Saved\n  }));\n};\n\nexport default React.memo(IconsStateManagement);","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/IconsManagement/IconsStateManagement.tsx"],"names":["VisibilityWatchedIcon","wrapperIconHOC","VisibilitySavedIcon","IconsStateManagement","callToActionCardColor","Watched","Saved","callToAction","watch","favorite","calculatedState","prevState","console","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,cAAA,QAAA,8BAAA;AACA,OAAA,yBAAA,MAAA,0CAAA;AACA,OAAA,YAAA,MAAA,6BAAA;AACA,OAAA,kBAAA,MAAA,mCAAA,C,CAEA;;AACA,OAAA,cAAA,MAAA,4BAAA;AACA,IAAMA,qBAAqB,GAAGC,cAAc,CAAA,cAAA,EAA5C,yBAA4C,CAA5C;AAIA,IAAMC,mBAAmB,GAAGD,cAAc,CAAA,kBAAA,EAA1C,YAA0C,CAA1C;AAEA;;AAYA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAIf;AAAA,MAHZC,qBAGY,GAAA,IAAA,CAHZA,qBAGY;AAAA,MAFZC,OAEY,GAAA,IAAA,CAFZA,OAEY;AAAA,MADZC,KACY,GAAA,IAAA,CADZA,KACY;AACZ,MAAA,SAAA;AACA,MAAA,eAAA;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,SAAA,EAAuB;AAC1C,QAAMC,KAAK,GAAA,aAAA,CAAA;AAAKA,MAAAA,KAAK,EAAE;AAAZ,KAAA,EAAX,SAAW,CAAX;;AACA,QAAMC,QAAQ,GAAA,aAAA,CAAA;AAAKA,MAAAA,QAAQ,EAAE;AAAf,KAAA,EAAd,SAAc,CAAd;;AACAC,IAAAA,eAAe,GAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAfA,QAAe,CAAfA;;AACA,QAAA,SAAA,EAAe;AACbA,MAAAA,eAAe,GAAA,aAAA,CAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAfA,SAAe,CAAfA;AACD;;AACDC,IAAAA,SAAS,GAATA,eAAAA;AACAP,IAAAA,qBAAqB,CAArBA,eAAqB,CAArBA;AARF,GAAA;;AAWAA,EAAAA,qBAAqB,CAAC;AAAEI,IAAAA,KAAK,EAAP,OAAA;AAAkBC,IAAAA,QAAQ,EAAEH;AAA5B,GAAD,CAArBF;AACAQ,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,SAAAA,EAAAA,OAAAA;AACAA,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,OAAAA,EAAAA,KAAAA;AACA,SACE,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,qBAAA,EAAA;AACE,IAAA,YAAY,EADd,YAAA;AAEE,IAAA,IAAI,EAFN,OAAA;AAGE,IAAA,QAAQ,EAAEP;AAHZ,GAAA,CADF,EAME,KAAA,CAAA,mBAAA,EAAA;AACE,IAAA,YAAY,EADd,YAAA;AAEE,IAAA,IAAI,EAFN,UAAA;AAGE,IAAA,QAAQ,EAAEC;AAHZ,GAAA,CANF,CADF;AArBF,CAAA;;AAqCA,eAAeO,KAAK,CAALA,IAAAA,CAAf,oBAAeA,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { VisibilityIcon } from '@mono-nx-test-with-nextjs/ui';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//custom\nimport wrapperIconHOC from '../Card/IconCTA/IconAction';\nconst VisibilityWatchedIcon = wrapperIconHOC(\n  VisibilityIcon,\n  VisibilityOffOutlinedIcon\n);\nconst VisibilitySavedIcon = wrapperIconHOC(FavoriteBorderIcon, FavoriteIcon);\n\n/*---------*/\ninterface IconStateInt {\n  watch: boolean;\n  favorite: boolean;\n}\n\ninterface PropsI {\n  callToActionCardColor: (state: object) => void;\n  Watched: boolean;\n  Saved: boolean;\n}\n\nconst IconsStateManagement = ({\n  callToActionCardColor,\n  Watched,\n  Saved,\n}: PropsI) => {\n  let prevState: IconStateInt;\n  let calculatedState: IconStateInt;\n  const callToAction = (iconState: object) => {\n    const watch = { watch: false, ...iconState };\n    const favorite = { favorite: false, ...iconState };\n    calculatedState = { ...watch, ...favorite };\n    if (prevState) {\n      calculatedState = { ...prevState, ...iconState };\n    }\n    prevState = calculatedState;\n    callToActionCardColor(calculatedState);\n  };\n\n  callToActionCardColor({ watch: Watched, favorite: Saved });\n  console.log('watched', Watched);\n  console.log('saved', Saved);\n  return (\n    <>\n      <VisibilityWatchedIcon\n        callToAction={callToAction}\n        icon=\"watch\"\n        isActive={Watched}\n      />\n      <VisibilitySavedIcon\n        callToAction={callToAction}\n        icon=\"favorite\"\n        isActive={Saved}\n      />\n    </>\n  );\n};\n\nexport default React.memo(IconsStateManagement);\n"]},"metadata":{},"sourceType":"module"}