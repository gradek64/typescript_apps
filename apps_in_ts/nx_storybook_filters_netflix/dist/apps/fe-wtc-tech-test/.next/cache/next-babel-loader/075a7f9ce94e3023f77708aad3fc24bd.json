{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components'; //custom\n\nimport { showStarRating } from './RatingStarUtills/ratingCalculation';\nconst RatingContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 0 10px;\n`;\n\nfunction Rating(props) {\n  const {\n    rating\n  } = props;\n  const allStars = 3;\n  const stars = showStarRating(rating, allStars);\n  const percentage = rating * allStars / 100;\n  return __jsx(RatingContainer, null, stars.map((Comp, i) => __jsx(Comp, {\n    key: `star${i}`\n  })), __jsx(\"span\", null, \"(\", String(percentage.toFixed(2)), \")\"));\n}\n\nexport default Rating;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/RatingStarComp/Rating.tsx"],"names":["React","styled","showStarRating","RatingContainer","div","Rating","props","rating","allStars","stars","percentage","map","Comp","i","String","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,SAASC,cAAT,QAA+B,sCAA/B;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;;;;;;CAAnC;;AAYA,SAASC,MAAT,CAAgBC,KAAhB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAME,QAAQ,GAAG,CAAjB;AACA,QAAMC,KAAK,GAAGP,cAAc,CAACK,MAAD,EAASC,QAAT,CAA5B;AACA,QAAME,UAAU,GAAIH,MAAM,GAAGC,QAAV,GAAsB,GAAzC;AACA,SACE,MAAC,eAAD,QACGC,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT,MAAC,IAAD;AAAM,IAAA,GAAG,EAAG,OAAMA,CAAE;AAApB,IADD,CADH,EAIE,yBAAQC,MAAM,CAACJ,UAAU,CAACK,OAAX,CAAmB,CAAnB,CAAD,CAAd,MAJF,CADF;AAQD;;AAED,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n//custom\nimport { showStarRating } from './RatingStarUtills/ratingCalculation';\n\nconst RatingContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 0 10px;\n`;\n\ninterface PropsInt {\n  rating: number;\n}\n\nfunction Rating(props: PropsInt) {\n  const { rating } = props;\n  const allStars = 3;\n  const stars = showStarRating(rating, allStars);\n  const percentage = (rating * allStars) / 100;\n  return (\n    <RatingContainer>\n      {stars.map((Comp, i) => (\n        <Comp key={`star${i}`} />\n      ))}\n      <span>({String(percentage.toFixed(2))})</span>\n    </RatingContainer>\n  );\n}\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}