{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from '../IconsManagement/IconsStateManagement';\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${props => props.image});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n\nfunction Card(props) {\n  const {\n    Title,\n    Poster: posterURL\n  } = props;\n  const {\n    0: backgroundColor,\n    1: setBgColor\n  } = useState(cardColorMapping.default); //register setColor once and dont re-render\n\n  const setColor = useCallback(({\n    watch,\n    favorite\n  }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        break;\n\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n  return __jsx(CardContainer, {\n    color: backgroundColor\n  }, __jsx(CardHeader, null, __jsx(IconsStateManagement, {\n    callToActionCardColor: setColor\n  })), __jsx(Poster, null, __jsx(PosterImage, {\n    image: posterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: 3\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/pages/Card/Card.tsx"],"names":["React","useState","useCallback","styled","RatingStarComp","IconsStateManagement","cardColorMapping","default","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","div","props","color","Poster","PosterImage","image","CardHeader","CardFooter","Card","Title","posterURL","backgroundColor","setBgColor","setColor","watch","favorite"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,oBAAP,MAAiC,yCAAjC;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,MADc;AAEvBC,EAAAA,eAAe,EAAE,SAFM;AAGvBC,EAAAA,eAAe,EAAE,SAHM;AAIvBC,EAAAA,eAAe,EAAE;AAJM,CAAzB;AAOA,MAAMC,aAAa,GAAGR,MAAM,CAACS,GAE1B;;;sBAGoBC,KAAD,IAAWA,KAAK,CAACC,KAAN,IAAeR,gBAAgB,CAACC,OAAQ;;;;;;;;;;CALzE;AAgBA,MAAMQ,MAAM,GAAGZ,MAAM,CAACS,GAAI;;;;CAA1B;AAKA,MAAMI,WAAW,GAAGb,MAAM,CAACS,GAExB;;;;0BAIwBC,KAAD,IAAWA,KAAK,CAACI,KAAM;;;CANjD;AAUA,MAAMC,UAAU,GAAGf,MAAM,CAACS,GAAI;;;;;CAA9B;AAMA,MAAMO,UAAU,GAAGhB,MAAM,CAACS,GAAI;;CAA9B;;AASA,SAASQ,IAAT,CAAcP,KAAd,EAA4B;AAC1B,QAAM;AAAEQ,IAAAA,KAAF;AAASN,IAAAA,MAAM,EAAEO;AAAjB,MAA+BT,KAArC;AACA,QAAM;AAAA,OAACU,eAAD;AAAA,OAAkBC;AAAlB,MAAgCvB,QAAQ,CAACK,gBAAgB,CAACC,OAAlB,CAA9C,CAF0B,CAI1B;;AACA,QAAMkB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;AAAEwB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyB;AACpD,YAAQ,IAAR;AACE,WAAK,CAACD,KAAD,IAAU,CAACC,QAAhB;AACEH,QAAAA,UAAU,CAAClB,gBAAgB,CAACC,OAAlB,CAAV;AACA;;AACF,WAAKmB,KAAK,IAAI,CAACC,QAAf;AACEH,QAAAA,UAAU,CAAClB,gBAAgB,CAACI,eAAlB,CAAV;AACA;;AACF,WAAK,CAACgB,KAAD,IAAUC,QAAf;AACEH,QAAAA,UAAU,CAAClB,gBAAgB,CAACE,eAAlB,CAAV;AACA;;AACF,WAAKkB,KAAK,IAAIC,QAAd;AACEH,QAAAA,UAAU,CAAClB,gBAAgB,CAACG,eAAlB,CAAV;AACA;;AACF;AACE;AAdJ;AAgBD,GAjB2B,EAiBzB,EAjByB,CAA5B;AAmBA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEc;AAAtB,KACE,MAAC,UAAD,QACE,MAAC,oBAAD;AAAsB,IAAA,qBAAqB,EAAEE;AAA7C,IADF,CADF,EAIE,MAAC,MAAD,QACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEH;AAApB,IADF,CAJF,EAOE,MAAC,UAAD,QAEE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAE;AAAxB,IAFF,CAPF,CADF;AAcD;;AAED,eAAeF,IAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from '../IconsManagement/IconsStateManagement';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  image: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.image});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n`;\n\ninterface Props {\n  Title: string;\n  Poster: string;\n}\n\nfunction Card(props: Props) {\n  const { Title, Poster: posterURL } = props;\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n\n  //register setColor once and dont re-render\n  const setColor = useCallback(({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  return (\n    <CardContainer color={backgroundColor}>\n      <CardHeader>\n        <IconsStateManagement callToActionCardColor={setColor} />\n      </CardHeader>\n      <Poster>\n        <PosterImage image={posterURL} />\n      </Poster>\n      <CardFooter>\n        {/*has to be between 0 100 %*/}\n        <RatingStarComp rating={3} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}