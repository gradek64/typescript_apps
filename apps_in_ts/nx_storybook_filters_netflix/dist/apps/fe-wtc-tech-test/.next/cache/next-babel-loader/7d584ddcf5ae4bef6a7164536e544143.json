{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding-top: 7px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  padding: 10px 10px 0px 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 150px;\\n  height: 221px;\\n  border-radius: 10px;\\n  background-image: url(\", \");\\n  background-repeat: no-repeat;\\n  background-size: 100% 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 10px;\\n  width: 150px;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \", \";\\n  /* align-items: center; */\\n  max-width: 200px;\\n  max-height: 300px;\\n  border-radius: 20px;\\n  /* justify-content: center; */\\n  margin: 10px;\\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components'; //custom\n\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\nvar cardColorMapping = {\n  \"default\": '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907'\n};\nvar CardContainer = styled.div(_templateObject(), function (props) {\n  return props.color || cardColorMapping[\"default\"];\n});\nvar Poster = styled.div(_templateObject2());\nvar PosterImage = styled.div(_templateObject3(), function (props) {\n  return props.imgURL;\n});\nvar CardHeader = styled.div(_templateObject4());\nvar CardFooter = styled.div(_templateObject5());\n\nfunction Card(_ref) {\n  var cardId = _ref.cardId;\n\n  var _useState = useState(cardColorMapping[\"default\"]),\n      backgroundColor = _useState[0],\n      setBgColor = _useState[1];\n\n  var _useState2 = useState(0),\n      count = _useState2[0],\n      setCount = _useState2[1]; //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n\n\n  var setColor = function setColor(_ref2) {\n    var watch = _ref2.watch,\n        favorite = _ref2.favorite;\n\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping[\"default\"]);\n        console.log('cardColorMapping.default');\n        break;\n\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n\n      default:\n        break;\n    }\n  }; //}, []);\n\n\n  var increaseCount = useCallback(function (value) {\n    setCount(value);\n  }, []);\n\n  var _useContext = useContext(MoviesContext),\n      movies = _useContext.movies;\n\n  var _movies$cardId = movies[cardId],\n      Watched = _movies$cardId.Watched,\n      Saved = _movies$cardId.Saved,\n      Title = _movies$cardId.Title,\n      PosterURL = _movies$cardId.Poster,\n      Ratings = _movies$cardId.Ratings;\n  var movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase())\n  };\n  useEffect(function () {\n    setColor(_objectSpread({}, movieStatus));\n  }, []);\n  return __jsx(CardContainer, {\n    color: backgroundColor,\n    key: Title\n  }, __jsx(\"p\", null, \"count:\".concat(count)), __jsx(CardHeader, null, __jsx(IconsStateManagement //callToActionCardColor={setColor}\n  , _extends({\n    callToActionCardCount: increaseCount\n  }, movieStatus))), __jsx(Poster, null, __jsx(PosterImage, {\n    imgURL: PosterURL\n  })), __jsx(CardFooter, null, __jsx(RatingStarComp, {\n    rating: calculateAvarageRatings(Ratings)\n  })));\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/gilg/dev/job_tests/fe-tech-test-greg-gil/apps/fe-wtc-tech-test/app/contentComponents/Card/Card.tsx"],"names":["React","useState","useCallback","useEffect","useContext","styled","RatingStarComp","IconsStateManagement","MoviesContext","calculateAvarageRatings","cardColorMapping","savedNotWatched","watchedAndSaved","watchedNotSaved","CardContainer","div","props","color","Poster","PosterImage","imgURL","CardHeader","CardFooter","Card","cardId","backgroundColor","setBgColor","count","setCount","setColor","watch","favorite","console","log","increaseCount","value","movies","Watched","Saved","Title","PosterURL","Ratings","movieStatus","JSON","parse","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n//custom\nimport RatingStarComp from '../RatingStarComp/Rating';\nimport IconsStateManagement from './IconsStateManagement/IconsStateManagement';\nimport { MoviesContext } from '../../../pages/index';\nimport { calculateAvarageRatings } from './CardUtills/calculateAvarageRating';\n\nconst cardColorMapping = {\n  default: '#FFF',\n  savedNotWatched: '#ED6606',\n  watchedAndSaved: '#049452',\n  watchedNotSaved: '#EEC907',\n};\n\nconst CardContainer = styled.div<{\n  color: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => props.color || cardColorMapping.default};\n  /* align-items: center; */\n  max-width: 200px;\n  max-height: 300px;\n  border-radius: 20px;\n  /* justify-content: center; */\n  margin: 10px;\n  -webkit-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  -moz-box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n  box-shadow: -1px 0px 21px -5px rgba(0, 0, 0, 0.53);\n`;\nconst Poster = styled.div`\n  border-radius: 10px;\n  width: 150px;\n  margin: 0 auto;\n`;\nconst PosterImage = styled.div<{\n  imgURL: string;\n}>`\n  width: 150px;\n  height: 221px;\n  border-radius: 10px;\n  background-image: url(${(props) => props.imgURL});\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 10px 0px 10px;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  padding-top: 7px;\n`;\ninterface Props {\n  cardId: number;\n}\nfunction Card({ cardId }: Props) {\n  const [backgroundColor, setBgColor] = useState(cardColorMapping.default);\n  const [count, setCount] = useState(0);\n\n  //register setColor once and dont re-render\n  // const setColor = useCallback(({ watch, favorite }) => {\n  const setColor = ({ watch, favorite }) => {\n    switch (true) {\n      case !watch && !favorite:\n        setBgColor(cardColorMapping.default);\n        console.log('cardColorMapping.default')\n        break;\n      case watch && !favorite:\n        setBgColor(cardColorMapping.watchedNotSaved);\n        break;\n      case !watch && favorite:\n        setBgColor(cardColorMapping.savedNotWatched);\n        break;\n      case watch && favorite:\n        setBgColor(cardColorMapping.watchedAndSaved);\n        break;\n      default:\n        break;\n    }\n  }\n  //}, []);\n\n  const increaseCount = useCallback((value) => {\n    setCount(value)\n  }, [])\n\n\n  const { movies } = useContext(MoviesContext);\n  const { Watched, Saved, Title, Poster: PosterURL, Ratings } = movies[cardId];\n  const movieStatus = {\n    watch: JSON.parse(Watched.toLowerCase()),\n    favorite: JSON.parse(Saved.toLowerCase()),\n  };\n\n  useEffect(() => {\n    setColor({ ...movieStatus })\n  }, [])\n\n  return (\n    <CardContainer color={backgroundColor} key={Title}>\n      <p>{`count:${count}`}</p>\n      <CardHeader>\n        <IconsStateManagement\n          //callToActionCardColor={setColor}\n          callToActionCardCount={increaseCount}\n          {...movieStatus}\n        />\n      </CardHeader>\n      <Poster>\n        <PosterImage imgURL={PosterURL} />\n      </Poster>\n      <CardFooter>\n        <RatingStarComp rating={calculateAvarageRatings(Ratings)} />\n      </CardFooter>\n    </CardContainer>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}